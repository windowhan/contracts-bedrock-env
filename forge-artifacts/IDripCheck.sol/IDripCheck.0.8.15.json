{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_params",
          "type": "bytes"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "execute_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "check(bytes)": "c64b3bb5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"execute_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(bytes)\":{\"params\":{\"_params\":\"Encoded parameters for the drip check.\"},\"returns\":{\"execute_\":\"Whether the drip should be executed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check(bytes)\":{\"notice\":\"Checks whether a drip should be executable.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/IDripCheck.sol\":\"IDripCheck\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_params",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check",
          "outputs": [
            {
              "internalType": "bool",
              "name": "execute_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "check(bytes)": {
            "params": {
              "_params": "Encoded parameters for the drip check."
            },
            "returns": {
              "execute_": "Whether the drip should be executed."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "check(bytes)": {
            "notice": "Checks whether a drip should be executable."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/drippie/IDripCheck.sol": "IDripCheck"
      },
      "libraries": {}
    },
    "sources": {
      "src/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628",
        "urls": [
          "bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6",
          "dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "check(bytes)": {
        "notice": "Checks whether a drip should be executable."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "check(bytes)": {
        "params": {
          "_params": "Encoded parameters for the drip check."
        },
        "returns": {
          "execute_": "Whether the drip should be executed."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/periphery/drippie/IDripCheck.sol",
    "id": 73427,
    "exportedSymbols": {
      "IDripCheck": [
        73426
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:661:177",
    "nodes": [
      {
        "id": 73417,
        "nodeType": "PragmaDirective",
        "src": "32:23:177",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 73426,
        "nodeType": "ContractDefinition",
        "src": "57:635:177",
        "nodes": [
          {
            "id": 73425,
            "nodeType": "FunctionDefinition",
            "src": "615:75:177",
            "nodes": [],
            "documentation": {
              "id": 73418,
              "nodeType": "StructuredDocumentation",
              "src": "431:179:177",
              "text": "@notice Checks whether a drip should be executable.\n @param _params Encoded parameters for the drip check.\n @return execute_ Whether the drip should be executed."
            },
            "functionSelector": "c64b3bb5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "624:5:177",
            "parameters": {
              "id": 73421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73420,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "643:7:177",
                  "nodeType": "VariableDeclaration",
                  "scope": 73425,
                  "src": "630:20:177",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73419,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:5:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:22:177"
            },
            "returnParameters": {
              "id": 73424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73423,
                  "mutability": "mutable",
                  "name": "execute_",
                  "nameLocation": "680:8:177",
                  "nodeType": "VariableDeclaration",
                  "scope": 73425,
                  "src": "675:13:177",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:4:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:15:177"
            },
            "scope": 73426,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDripCheck",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          73426
        ],
        "name": "IDripCheck",
        "nameLocation": "67:10:177",
        "scope": 73427,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 177
}