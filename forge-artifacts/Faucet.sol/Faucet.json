{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "authModule",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Drip",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "_module",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ttl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Faucet.ModuleConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Faucet.DripParameters",
          "name": "_params",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "module",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            }
          ],
          "internalType": "struct Faucet.AuthParameters",
          "name": "_auth",
          "type": "tuple"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "",
          "type": "address"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ttl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "timeouts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161122138038061122183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516111886100996000396000818161010401528181610219015261098701526111886000f3fe6080604052600436106100745760003560e01c806338757bfd1161004e57806338757bfd1461014b578063a8ee49fe14610191578063b960bc2b146101c1578063f3fef3a3146101e157600080fd5b80631cb81b88146100805780631d5d26bc146100a25780632a0acc6a146100f257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610bf3565b610201565b005b3480156100ae57600080fd5b506100dd6100bd366004610cb4565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b506101267f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e9565b34801561015757600080fd5b50610183610166366004610cd6565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100e9565b34801561019d57600080fd5b506101b16101ac366004610d02565b610352565b6040516100e99493929190610d9c565b3480156101cd57600080fd5b506100a06101dc366004610dcb565b610408565b3480156101ed57600080fd5b506100a06101fc366004610cd6565b61096f565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020815182919081906103019082610f47565b5060208201516001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055604082015160028201556060909101516003909101555050565b60006020819052908152604090208054819061036d90610ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461039990610ea5565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505060018301546002840154600390940154929360ff9091169290915084565b805173ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604080822081516080810190925280548290829061044790610ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461047390610ea5565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050509183525050600182015460ff16151560208083019190915260028301546040830152600390920154606090910152810151909150610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f4661756365743a2070726f76696465642061757468206d6f64756c652069732060448201527f6e6f7420737570706f727465642062792074686973206661756365740000000060648201526084016102c2565b6020808301516000908152600282526040808220868401518352909252205460ff1615610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4661756365743a206e6f6e63652068617320616c7265616479206265656e207560448201527f736564000000000000000000000000000000000000000000000000000000000060648201526084016102c2565b815173ffffffffffffffffffffffffffffffffffffffff16600090815260016020908152604080832082860151845290915290205442116106f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4661756365743a20617574682063616e6e6f742062652075736564207965742060448201527f626563617573652074696d656f757420686173206e6f7420656c61707365640060648201526084016102c2565b8151602083015160408085015190517ff5431ffa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9093169263f5431ffa92610754928892600401611061565b602060405180830381865afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906110aa565b61082357604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4661756365743a206472697020706172616d657465727320636f756c64206e6f60448201527f74206265207665726966696564206279207365637572697479206d6f64756c6560648201526084016102c2565b604081015161083290426110c7565b825173ffffffffffffffffffffffffffffffffffffffff1660009081526001602081815260408084208288018051865290835281852095909555935183526002815283832087820151845290529082902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556060820151845191519091906108c190610a82565b73ffffffffffffffffffffffffffffffffffffffff90911681526020016040518091039082f09050801580156108fb573d6000803e3d6000fd5b505082516020830151825160405173ffffffffffffffffffffffffffffffffffffffff9093169261092c9190611106565b60405190819003812060608501518252907f2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a49060200160405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e000000000000000000000000000000000000000060648201526084016102c2565b8082604051610a4290610a82565b73ffffffffffffffffffffffffffffffffffffffff90911681526020016040518091039082f0905080158015610a7c573d6000803e3d6000fd5b50505050565b60598061112383390190565b73ffffffffffffffffffffffffffffffffffffffff81168114610ab057600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610b0557610b05610ab3565b60405290565b6040805190810167ffffffffffffffff81118282101715610b0557610b05610ab3565b6040516060810167ffffffffffffffff81118282101715610b0557610b05610ab3565b600067ffffffffffffffff80841115610b6c57610b6c610ab3565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610bb257610bb2610ab3565b81604052809350858152868686011115610bcb57600080fd5b858560208301376000602087830101525050509392505050565b8015158114610ab057600080fd5b60008060408385031215610c0657600080fd5b8235610c1181610a8e565b9150602083013567ffffffffffffffff80821115610c2e57600080fd5b9084019060808287031215610c4257600080fd5b610c4a610ae2565b823582811115610c5957600080fd5b83019150601f82018713610c6c57600080fd5b610c7b87833560208501610b51565b815260208301359150610c8d82610be5565b81602082015260408301356040820152606083013560608201528093505050509250929050565b60008060408385031215610cc757600080fd5b50508035926020909101359150565b60008060408385031215610ce957600080fd5b8235610cf481610a8e565b946020939093013593505050565b600060208284031215610d1457600080fd5b8135610d1f81610a8e565b9392505050565b60005b83811015610d41578181015183820152602001610d29565b83811115610a7c5750506000910152565b60008151808452610d6a816020860160208601610d26565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610daf6080830187610d52565b9415156020830152506040810192909252606090910152919050565b6000808284036060811215610ddf57600080fd5b6040811215610ded57600080fd5b50610df6610b0b565b8335610e0181610a8e565b8152602084810135908201529150604083013567ffffffffffffffff80821115610e2a57600080fd5b9084019060608287031215610e3e57600080fd5b610e46610b2e565b8235610e5181610a8e565b815260208381013590820152604083013582811115610e6f57600080fd5b80840193505086601f840112610e8457600080fd5b610e9387843560208601610b51565b60408201528093505050509250929050565b600181811c90821680610eb957607f821691505b602082108103610ef2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610f4257600081815260208120601f850160051c81016020861015610f1f5750805b601f850160051c820191505b81811015610f3e57828155600101610f2b565b5050505b505050565b815167ffffffffffffffff811115610f6157610f61610ab3565b610f7581610f6f8454610ea5565b84610ef8565b602080601f831160018114610fc85760008415610f925750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610f3e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561101557888601518255948401946001909101908401610ff6565b508582101561105157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b73ffffffffffffffffffffffffffffffffffffffff8451168152602084015160208201528260408201526080606082015260006110a16080830184610d52565b95945050505050565b6000602082840312156110bc57600080fd5b8151610d1f81610be5565b60008219821115611101577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60008251611118818460208701610d26565b919091019291505056fe608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "465:4307:182:-:0;;;2193:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2231:14:182;;;465:4307;;14:290:283;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:283;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:283:o;:::-;465:4307:182;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100745760003560e01c806338757bfd1161004e57806338757bfd1461014b578063a8ee49fe14610191578063b960bc2b146101c1578063f3fef3a3146101e157600080fd5b80631cb81b88146100805780631d5d26bc146100a25780632a0acc6a146100f257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610bf3565b610201565b005b3480156100ae57600080fd5b506100dd6100bd366004610cb4565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b506101267f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e9565b34801561015757600080fd5b50610183610166366004610cd6565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100e9565b34801561019d57600080fd5b506101b16101ac366004610d02565b610352565b6040516100e99493929190610d9c565b3480156101cd57600080fd5b506100a06101dc366004610dcb565b610408565b3480156101ed57600080fd5b506100a06101fc366004610cd6565b61096f565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020815182919081906103019082610f47565b5060208201516001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055604082015160028201556060909101516003909101555050565b60006020819052908152604090208054819061036d90610ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461039990610ea5565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505060018301546002840154600390940154929360ff9091169290915084565b805173ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604080822081516080810190925280548290829061044790610ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461047390610ea5565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050509183525050600182015460ff16151560208083019190915260028301546040830152600390920154606090910152810151909150610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f4661756365743a2070726f76696465642061757468206d6f64756c652069732060448201527f6e6f7420737570706f727465642062792074686973206661756365740000000060648201526084016102c2565b6020808301516000908152600282526040808220868401518352909252205460ff1615610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4661756365743a206e6f6e63652068617320616c7265616479206265656e207560448201527f736564000000000000000000000000000000000000000000000000000000000060648201526084016102c2565b815173ffffffffffffffffffffffffffffffffffffffff16600090815260016020908152604080832082860151845290915290205442116106f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4661756365743a20617574682063616e6e6f742062652075736564207965742060448201527f626563617573652074696d656f757420686173206e6f7420656c61707365640060648201526084016102c2565b8151602083015160408085015190517ff5431ffa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9093169263f5431ffa92610754928892600401611061565b602060405180830381865afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906110aa565b61082357604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4661756365743a206472697020706172616d657465727320636f756c64206e6f60448201527f74206265207665726966696564206279207365637572697479206d6f64756c6560648201526084016102c2565b604081015161083290426110c7565b825173ffffffffffffffffffffffffffffffffffffffff1660009081526001602081815260408084208288018051865290835281852095909555935183526002815283832087820151845290529082902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790556060820151845191519091906108c190610a82565b73ffffffffffffffffffffffffffffffffffffffff90911681526020016040518091039082f09050801580156108fb573d6000803e3d6000fd5b505082516020830151825160405173ffffffffffffffffffffffffffffffffffffffff9093169261092c9190611106565b60405190819003812060608501518252907f2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a49060200160405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e000000000000000000000000000000000000000060648201526084016102c2565b8082604051610a4290610a82565b73ffffffffffffffffffffffffffffffffffffffff90911681526020016040518091039082f0905080158015610a7c573d6000803e3d6000fd5b50505050565b60598061112383390190565b73ffffffffffffffffffffffffffffffffffffffff81168114610ab057600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610b0557610b05610ab3565b60405290565b6040805190810167ffffffffffffffff81118282101715610b0557610b05610ab3565b6040516060810167ffffffffffffffff81118282101715610b0557610b05610ab3565b600067ffffffffffffffff80841115610b6c57610b6c610ab3565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610bb257610bb2610ab3565b81604052809350858152868686011115610bcb57600080fd5b858560208301376000602087830101525050509392505050565b8015158114610ab057600080fd5b60008060408385031215610c0657600080fd5b8235610c1181610a8e565b9150602083013567ffffffffffffffff80821115610c2e57600080fd5b9084019060808287031215610c4257600080fd5b610c4a610ae2565b823582811115610c5957600080fd5b83019150601f82018713610c6c57600080fd5b610c7b87833560208501610b51565b815260208301359150610c8d82610be5565b81602082015260408301356040820152606083013560608201528093505050509250929050565b60008060408385031215610cc757600080fd5b50508035926020909101359150565b60008060408385031215610ce957600080fd5b8235610cf481610a8e565b946020939093013593505050565b600060208284031215610d1457600080fd5b8135610d1f81610a8e565b9392505050565b60005b83811015610d41578181015183820152602001610d29565b83811115610a7c5750506000910152565b60008151808452610d6a816020860160208601610d26565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610daf6080830187610d52565b9415156020830152506040810192909252606090910152919050565b6000808284036060811215610ddf57600080fd5b6040811215610ded57600080fd5b50610df6610b0b565b8335610e0181610a8e565b8152602084810135908201529150604083013567ffffffffffffffff80821115610e2a57600080fd5b9084019060608287031215610e3e57600080fd5b610e46610b2e565b8235610e5181610a8e565b815260208381013590820152604083013582811115610e6f57600080fd5b80840193505086601f840112610e8457600080fd5b610e9387843560208601610b51565b60408201528093505050509250929050565b600181811c90821680610eb957607f821691505b602082108103610ef2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610f4257600081815260208120601f850160051c81016020861015610f1f5750805b601f850160051c820191505b81811015610f3e57828155600101610f2b565b5050505b505050565b815167ffffffffffffffff811115610f6157610f61610ab3565b610f7581610f6f8454610ea5565b84610ef8565b602080601f831160018114610fc85760008415610f925750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610f3e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561101557888601518255948401946001909101908401610ff6565b508582101561105157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b73ffffffffffffffffffffffffffffffffffffffff8451168152602084015160208201528260408201526080606082015260006110a16080830184610d52565b95945050505050565b6000602082840312156110bc57600080fd5b8151610d1f81610be5565b60008219821115611101577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60008251611118818460208701610d26565b919091019291505056fe608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "465:4307:182:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:137;;;;;;;;;;-1:-1:-1;2887:137:182;;;;;:::i;:::-;;:::i;:::-;;1862:58;;;;;;;;;;-1:-1:-1;1862:58:182;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:14:283;;3568:22;3550:41;;3538:2;3523:18;1862:58:182;;;;;;;;1433:30;;;;;;;;;;;;;;;;;;3778:42:283;3766:55;;;3748:74;;3736:2;3721:18;1433:30:182;3602:226:283;1704:73:182;;;;;;;;;;-1:-1:-1;1704:73:182;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4345:25:283;;;4333:2;4318:18;1704:73:182;4199:177:283;1545:57:182;;;;;;;;;;-1:-1:-1;1545:57:182;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3170:1600::-;;;;;;;;;;-1:-1:-1;3170:1600:182;;;;;:::i;:::-;;:::i;2549:141::-;;;;;;;;;;-1:-1:-1;2549:141:182;;;;;:::i;:::-;;:::i;2887:137::-;2034:10;:19;2048:5;2034:19;;2026:76;;;;;;;7625:2:283;2026:76:182;;;7607:21:283;7664:2;7644:18;;;7637:30;7703:34;7683:18;;;7676:62;7774:14;7754:18;;;7747:42;7806:19;;2026:76:182;;;;;;;;;2991:16:::1;::::0;::::1;:7;:16:::0;;;::::1;::::0;;;;;;:26;;3010:7;;2991:16;;;:26:::1;::::0;:16;:26:::1;:::i;:::-;-1:-1:-1::0;2991:26:182::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;2887:137:182:o;1545:57::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1545:57:182;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1545:57:182;:::o;3170:1600::-;3338:12;;3330:21;;3301:26;3330:21;;;;;;;;;;;3301:50;;;;;;;;;;;;3330:21;;3301:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3301:50:182;;;-1:-1:-1;;3301:50:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3432:14;;;3301:50;;-1:-1:-1;3424:87:182;;;;;;;10863:2:283;3424:87:182;;;10845:21:283;10902:2;10882:18;;;10875:30;10941:34;10921:18;;;10914:62;11012:30;10992:18;;;10985:58;11060:19;;3424:87:182;10661:424:283;3424:87:182;3833:8;;;;;3826:16;;;;:6;:16;;;;;;3843:13;;;;3826:31;;;;;;;;;:40;3818:88;;;;;;;11292:2:283;3818:88:182;;;11274:21:283;11331:2;11311:18;;;11304:30;11370:34;11350:18;;;11343:62;11441:5;11421:18;;;11414:33;11464:19;;3818:88:182;11090:399:283;3818:88:182;3993:12;;3984:22;;;;;;:8;:22;;;;;;;;4007:8;;;;3984:32;;;;;;;;4019:15;-1:-1:-1;3963:160:182;;;;;;;11696:2:283;3963:160:182;;;11678:21:283;11735:2;11715:18;;;11708:30;11774:34;11754:18;;;11747:62;11845:33;11825:18;;;11818:61;11896:19;;3963:160:182;11494:427:283;3963:160:182;4184:12;;4213:8;;;;4223:11;;;;;4184:51;;;;;:19;;;;;;;:51;;4204:7;;4184:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4163:162;;;;;;;;12930:2:283;4163:162:182;;;12912:21:283;12949:18;;;12942:30;;;;13008:34;12988:18;;;12981:62;13079:34;13059:18;;;13052:62;13131:19;;4163:162:182;12728:428:283;4163:162:182;4458:10;;;;4440:28;;:15;:28;:::i;:::-;4414:12;;4405:22;;;;;;:8;:22;;;;;;;;4428:8;;;;;4405:32;;;;;;;;:63;;;;4521:8;;4514:16;;:6;:16;;;;;4531:13;;;;4514:31;;;;;;;;:38;;;;;;;;;4652:13;;;;4668:17;;4631:55;;4652:13;;4668:17;4631:55;;;:::i;:::-;3778:42:283;3766:55;;;3748:74;;3736:2;3721:18;4631:55:182;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:17:182;;4720:8;;;;4707:11;;4702:61;;;;;;;;;4707:11;4702:61;:::i;:::-;;;;;;;;;4730:13;;;;4345:25:283;;4702:61:182;;;4333:2:283;4318:18;4702:61:182;;;;;;;3251:1519;3170:1600;;:::o;2549:141::-;2034:10;:19;2048:5;2034:19;;2026:76;;;;;;;7625:2:283;2026:76:182;;;7607:21:283;7664:2;7644:18;;;7637:30;7703:34;7683:18;;;7676:62;7774:14;7754:18;;;7747:42;7806:19;;2026:76:182;7423:408:283;2026:76:182;2662:7:::1;2672:10;2641:42;;;;;:::i;:::-;3778::283::0;3766:55;;;3748:74;;3736:2;3721:18;2641:42:182::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;2549:141:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:173:283:-;119:42;112:5;108:54;101:5;98:65;88:93;;177:1;174;167:12;88:93;14:173;:::o;192:184::-;244:77;241:1;234:88;341:4;338:1;331:15;365:4;362:1;355:15;381:253;453:2;447:9;495:4;483:17;;530:18;515:34;;551:22;;;512:62;509:88;;;577:18;;:::i;:::-;613:2;606:22;381:253;:::o;639:252::-;706:4;700:11;;;738:17;;785:18;770:34;;806:22;;;767:62;764:88;;;832:18;;:::i;896:251::-;968:2;962:9;1010:2;998:15;;1043:18;1028:34;;1064:22;;;1025:62;1022:88;;;1090:18;;:::i;1152:691::-;1217:5;1247:18;1288:2;1280:6;1277:14;1274:40;;;1294:18;;:::i;:::-;1428:2;1422:9;1494:2;1482:15;;1333:66;1478:24;;;1504:2;1474:33;1470:42;1458:55;;;1528:18;;;1548:22;;;1525:46;1522:72;;;1574:18;;:::i;:::-;1614:10;1610:2;1603:22;1643:6;1634:15;;1673:6;1665;1658:22;1713:3;1704:6;1699:3;1695:16;1692:25;1689:45;;;1730:1;1727;1720:12;1689:45;1780:6;1775:3;1768:4;1760:6;1756:17;1743:44;1835:1;1828:4;1819:6;1811;1807:19;1803:30;1796:41;;;;1152:691;;;;;:::o;1848:118::-;1934:5;1927:13;1920:21;1913:5;1910:32;1900:60;;1956:1;1953;1946:12;1971:1181;2097:6;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2213:9;2200:23;2232:50;2276:5;2232:50;:::i;:::-;2301:5;-1:-1:-1;2357:2:283;2342:18;;2329:32;2380:18;2410:14;;;2407:34;;;2437:1;2434;2427:12;2407:34;2460:22;;;;2516:4;2498:16;;;2494:27;2491:47;;;2534:1;2531;2524:12;2491:47;2562:22;;:::i;:::-;2622:2;2609:16;2650:2;2640:8;2637:16;2634:36;;;2666:1;2663;2656:12;2634:36;2689:17;;;-1:-1:-1;2737:4:283;2729:13;;2725:27;-1:-1:-1;2715:55:283;;2766:1;2763;2756:12;2715:55;2795:74;2861:7;2856:2;2843:16;2838:2;2834;2830:11;2795:74;:::i;:::-;2786:7;2779:91;2915:2;2911;2907:11;2894:25;2879:40;;2928:30;2950:7;2928:30;:::i;:::-;2992:7;2987:2;2978:7;2974:16;2967:33;3055:2;3051;3047:11;3034:25;3029:2;3020:7;3016:16;3009:51;3115:2;3111;3107:11;3094:25;3089:2;3080:7;3076:16;3069:51;3139:7;3129:17;;;;;1971:1181;;;;;:::o;3157:248::-;3225:6;3233;3286:2;3274:9;3265:7;3261:23;3257:32;3254:52;;;3302:1;3299;3292:12;3254:52;-1:-1:-1;;3325:23:283;;;3395:2;3380:18;;;3367:32;;-1:-1:-1;3157:248:283:o;3833:361::-;3928:6;3936;3989:2;3977:9;3968:7;3964:23;3960:32;3957:52;;;4005:1;4002;3995:12;3957:52;4044:9;4031:23;4063:50;4107:5;4063:50;:::i;:::-;4132:5;4184:2;4169:18;;;;4156:32;;-1:-1:-1;;;3833:361:283:o;4381:293::-;4467:6;4520:2;4508:9;4499:7;4495:23;4491:32;4488:52;;;4536:1;4533;4526:12;4488:52;4575:9;4562:23;4594:50;4638:5;4594:50;:::i;:::-;4663:5;4381:293;-1:-1:-1;;;4381:293:283:o;4679:258::-;4751:1;4761:113;4775:6;4772:1;4769:13;4761:113;;;4851:11;;;4845:18;4832:11;;;4825:39;4797:2;4790:10;4761:113;;;4892:6;4889:1;4886:13;4883:48;;;-1:-1:-1;;4927:1:283;4909:16;;4902:27;4679:258::o;4942:317::-;4984:3;5022:5;5016:12;5049:6;5044:3;5037:19;5065:63;5121:6;5114:4;5109:3;5105:14;5098:4;5091:5;5087:16;5065:63;:::i;:::-;5173:2;5161:15;5178:66;5157:88;5148:98;;;;5248:4;5144:109;;4942:317;-1:-1:-1;;4942:317:283:o;5264:445::-;5491:3;5480:9;5473:22;5454:4;5512:46;5553:3;5542:9;5538:19;5530:6;5512:46;:::i;:::-;5601:14;;5594:22;5589:2;5574:18;;5567:50;-1:-1:-1;5648:2:283;5633:18;;5626:34;;;;5691:2;5676:18;;;5669:34;5504:54;5264:445;-1:-1:-1;5264:445:283:o;5714:1357::-;5848:6;5856;5900:9;5891:7;5887:23;5930:2;5926;5922:11;5919:31;;;5946:1;5943;5936:12;5919:31;5970:4;5966:2;5962:13;5959:33;;;5988:1;5985;5978:12;5959:33;;6014:17;;:::i;:::-;6068:9;6055:23;6087:52;6131:7;6087:52;:::i;:::-;6148:22;;6230:2;6215:18;;;6202:32;6186:14;;;6179:56;6155:5;-1:-1:-1;6310:4:283;6295:20;;6282:34;6335:18;6365:14;;;6362:34;;;6392:1;6389;6382:12;6362:34;6415:22;;;;6471:2;6453:16;;;6449:25;6446:45;;;6487:1;6484;6477:12;6446:45;6515:22;;:::i;:::-;6574:2;6561:16;6586:52;6630:7;6586:52;:::i;:::-;6647:24;;6726:2;6718:11;;;6705:25;6687:16;;;6680:51;6777:4;6769:13;;6756:27;6795:16;;;6792:36;;;6824:1;6821;6814:12;6792:36;6855:8;6851:2;6847:17;6837:27;;;6902:7;6895:4;6891:2;6887:13;6883:27;6873:55;;6924:1;6921;6914:12;6873:55;6964:74;7030:7;7025:2;7012:16;7007:2;7003;6999:11;6964:74;:::i;:::-;6957:4;6948:7;6944:18;6937:102;7058:7;7048:17;;;;;5714:1357;;;;;:::o;7836:437::-;7915:1;7911:12;;;;7958;;;7979:61;;8033:4;8025:6;8021:17;8011:27;;7979:61;8086:2;8078:6;8075:14;8055:18;8052:38;8049:218;;8123:77;8120:1;8113:88;8224:4;8221:1;8214:15;8252:4;8249:1;8242:15;8049:218;;7836:437;;;:::o;8404:545::-;8506:2;8501:3;8498:11;8495:448;;;8542:1;8567:5;8563:2;8556:17;8612:4;8608:2;8598:19;8682:2;8670:10;8666:19;8663:1;8659:27;8653:4;8649:38;8718:4;8706:10;8703:20;8700:47;;;-1:-1:-1;8741:4:283;8700:47;8796:2;8791:3;8787:12;8784:1;8780:20;8774:4;8770:31;8760:41;;8851:82;8869:2;8862:5;8859:13;8851:82;;;8914:17;;;8895:1;8884:13;8851:82;;;8855:3;;;8495:448;8404:545;;;:::o;9185:1471::-;9311:3;9305:10;9338:18;9330:6;9327:30;9324:56;;;9360:18;;:::i;:::-;9389:97;9479:6;9439:38;9471:4;9465:11;9439:38;:::i;:::-;9433:4;9389:97;:::i;:::-;9541:4;;9605:2;9594:14;;9622:1;9617:782;;;;10443:1;10460:6;10457:89;;;-1:-1:-1;10512:19:283;;;10506:26;10457:89;9091:66;9082:1;9078:11;;;9074:84;9070:89;9060:100;9166:1;9162:11;;;9057:117;10559:81;;9587:1063;;9617:782;8351:1;8344:14;;;8388:4;8375:18;;9665:66;9653:79;;;9830:236;9844:7;9841:1;9838:14;9830:236;;;9933:19;;;9927:26;9912:42;;10025:27;;;;9993:1;9981:14;;;;9860:19;;9830:236;;;9834:3;10094:6;10085:7;10082:19;10079:261;;;10155:19;;;10149:26;10256:66;10238:1;10234:14;;;10250:3;10230:24;10226:97;10222:102;10207:118;10192:134;;10079:261;-1:-1:-1;;;;;10386:1:283;10370:14;;;10366:22;10353:36;;-1:-1:-1;9185:1471:283:o;11926:547::-;12214:42;12205:6;12199:13;12195:62;12184:9;12177:81;12314:4;12306:6;12302:17;12296:24;12289:4;12278:9;12274:20;12267:54;12357:6;12352:2;12341:9;12337:18;12330:34;12400:3;12395:2;12384:9;12380:18;12373:31;12158:4;12421:46;12462:3;12451:9;12447:19;12439:6;12421:46;:::i;:::-;12413:54;11926:547;-1:-1:-1;;;;;11926:547:283:o;12478:245::-;12545:6;12598:2;12586:9;12577:7;12573:23;12569:32;12566:52;;;12614:1;12611;12604:12;12566:52;12646:9;12640:16;12665:28;12687:5;12665:28;:::i;13161:282::-;13201:3;13232:1;13228:6;13225:1;13222:13;13219:193;;;13268:77;13265:1;13258:88;13369:4;13366:1;13359:15;13397:4;13394:1;13387:15;13219:193;-1:-1:-1;13428:9:283;;13161:282::o;13695:276::-;13826:3;13864:6;13858:13;13880:53;13926:6;13921:3;13914:4;13906:6;13902:17;13880:53;:::i;:::-;13949:16;;;;;13695:276;-1:-1:-1;;13695:276:283:o",
    "linkReferences": {},
    "immutableReferences": {
      "73660": [
        {
          "start": 260,
          "length": 32
        },
        {
          "start": 537,
          "length": 32
        },
        {
          "start": 2439,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADMIN()": "2a0acc6a",
    "configure(address,(string,bool,uint256,uint256))": "1cb81b88",
    "drip((address,bytes32),(address,bytes32,bytes))": "b960bc2b",
    "modules(address)": "a8ee49fe",
    "nonces(bytes32,bytes32)": "1d5d26bc",
    "timeouts(address,bytes32)": "38757bfd",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"authModule\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Drip\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"_module\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Faucet.ModuleConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct Faucet.DripParameters\",\"name\":\"_params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct Faucet.AuthParameters\",\"name\":\"_auth\",\"type\":\"tuple\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timeouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Drip(string,bytes32,uint256,address)\":{\"params\":{\"amount\":\"The amount of funds sent.\",\"authModule\":\"The type of authentication that was used for verifying the drip.\",\"recipient\":\"The recipient of the drip.\",\"userId\":\"The id of the user that requested the drip.\"}}},\"kind\":\"dev\",\"methods\":{\"configure(address,(string,bool,uint256,uint256))\":{\"params\":{\"_config\":\"Configuration to set for the module.\",\"_module\":\"Authentication module to configure.\"}},\"constructor\":{\"params\":{\"_admin\":\"Admin address that can configure the faucet.\"}},\"drip((address,bytes32),(address,bytes32,bytes))\":{\"params\":{\"_auth\":\"Authentication parameters.\",\"_params\":\"Drip parameters.\"}},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\"Amount of ETH in wei to withdraw.\",\"_recipient\":\"Address to receive the funds.\"}}},\"title\":\"Faucet\",\"version\":1},\"userdoc\":{\"events\":{\"Drip(string,bytes32,uint256,address)\":{\"notice\":\"Emitted on each drip.\"}},\"kind\":\"user\",\"methods\":{\"ADMIN()\":{\"notice\":\"Admin address that can configure the faucet.\"},\"configure(address,(string,bool,uint256,uint256))\":{\"notice\":\"Allows the admin to configure an authentication module.\"},\"drip((address,bytes32),(address,bytes32,bytes))\":{\"notice\":\"Drips ETH to a recipient account.\"},\"modules(address)\":{\"notice\":\"Mapping of authentication modules to their configurations.\"},\"nonces(bytes32,bytes32)\":{\"notice\":\"Maps from id to nonces to whether or not they have been used.\"},\"timeouts(address,bytes32)\":{\"notice\":\"Mapping of authentication IDs to the next timestamp at which they can be used.\"},\"withdraw(address,uint256)\":{\"notice\":\"Allows the admin to withdraw funds.\"}},\"notice\":\"Faucet contract that drips ETH to users.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/faucet/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x589fc5a5073da3564896a08bb7d719ffd1cb79a79fdb9b298669c719b7843637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e7c665cd88a50dbe86bda89198e598f2dbf00b8605c5de999f2a73e84dc016\",\"dweb:/ipfs/Qmc6nHb2TUPeKYavwdMrM1AhkaRFAaMNEz58wfnfHhkkyx\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "authModule",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "userId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Drip",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "_module",
              "type": "address"
            },
            {
              "internalType": "struct Faucet.ModuleConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ttl",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configure"
        },
        {
          "inputs": [
            {
              "internalType": "struct Faucet.DripParameters",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct Faucet.AuthParameters",
              "name": "_auth",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IFaucetAuthModule",
                  "name": "module",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "proof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drip"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "modules",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ttl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "timeouts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "configure(address,(string,bool,uint256,uint256))": {
            "params": {
              "_config": "Configuration to set for the module.",
              "_module": "Authentication module to configure."
            }
          },
          "constructor": {
            "params": {
              "_admin": "Admin address that can configure the faucet."
            }
          },
          "drip((address,bytes32),(address,bytes32,bytes))": {
            "params": {
              "_auth": "Authentication parameters.",
              "_params": "Drip parameters."
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "_amount": "Amount of ETH in wei to withdraw.",
              "_recipient": "Address to receive the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADMIN()": {
            "notice": "Admin address that can configure the faucet."
          },
          "configure(address,(string,bool,uint256,uint256))": {
            "notice": "Allows the admin to configure an authentication module."
          },
          "drip((address,bytes32),(address,bytes32,bytes))": {
            "notice": "Drips ETH to a recipient account."
          },
          "modules(address)": {
            "notice": "Mapping of authentication modules to their configurations."
          },
          "nonces(bytes32,bytes32)": {
            "notice": "Maps from id to nonces to whether or not they have been used."
          },
          "timeouts(address,bytes32)": {
            "notice": "Mapping of authentication IDs to the next timestamp at which they can be used."
          },
          "withdraw(address,uint256)": {
            "notice": "Allows the admin to withdraw funds."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/faucet/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x589fc5a5073da3564896a08bb7d719ffd1cb79a79fdb9b298669c719b7843637",
        "urls": [
          "bzz-raw://17e7c665cd88a50dbe86bda89198e598f2dbf00b8605c5de999f2a73e84dc016",
          "dweb:/ipfs/Qmc6nHb2TUPeKYavwdMrM1AhkaRFAaMNEz58wfnfHhkkyx"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 73667,
        "contract": "src/periphery/faucet/Faucet.sol:Faucet",
        "label": "modules",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_contract(IFaucetAuthModule)73965,t_struct(ModuleConfig)73657_storage)"
      },
      {
        "astId": 73675,
        "contract": "src/periphery/faucet/Faucet.sol:Faucet",
        "label": "timeouts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_contract(IFaucetAuthModule)73965,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 73682,
        "contract": "src/periphery/faucet/Faucet.sol:Faucet",
        "label": "nonces",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IFaucetAuthModule)73965": {
        "encoding": "inplace",
        "label": "contract IFaucetAuthModule",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IFaucetAuthModule)73965,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_contract(IFaucetAuthModule)73965",
        "label": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_contract(IFaucetAuthModule)73965,t_struct(ModuleConfig)73657_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IFaucetAuthModule)73965",
        "label": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(ModuleConfig)73657_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ModuleConfig)73657_storage": {
        "encoding": "inplace",
        "label": "struct Faucet.ModuleConfig",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 73650,
            "contract": "src/periphery/faucet/Faucet.sol:Faucet",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 73652,
            "contract": "src/periphery/faucet/Faucet.sol:Faucet",
            "label": "enabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 73654,
            "contract": "src/periphery/faucet/Faucet.sol:Faucet",
            "label": "ttl",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 73656,
            "contract": "src/periphery/faucet/Faucet.sol:Faucet",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "ADMIN()": {
        "notice": "Admin address that can configure the faucet."
      },
      "configure(address,(string,bool,uint256,uint256))": {
        "notice": "Allows the admin to configure an authentication module."
      },
      "drip((address,bytes32),(address,bytes32,bytes))": {
        "notice": "Drips ETH to a recipient account."
      },
      "modules(address)": {
        "notice": "Mapping of authentication modules to their configurations."
      },
      "nonces(bytes32,bytes32)": {
        "notice": "Maps from id to nonces to whether or not they have been used."
      },
      "timeouts(address,bytes32)": {
        "notice": "Mapping of authentication IDs to the next timestamp at which they can be used."
      },
      "withdraw(address,uint256)": {
        "notice": "Allows the admin to withdraw funds."
      }
    },
    "events": {
      "Drip(string,bytes32,uint256,address)": {
        "notice": "Emitted on each drip."
      }
    },
    "notice": "Faucet contract that drips ETH to users."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "configure(address,(string,bool,uint256,uint256))": {
        "params": {
          "_config": "Configuration to set for the module.",
          "_module": "Authentication module to configure."
        }
      },
      "constructor": {
        "params": {
          "_admin": "Admin address that can configure the faucet."
        }
      },
      "drip((address,bytes32),(address,bytes32,bytes))": {
        "params": {
          "_auth": "Authentication parameters.",
          "_params": "Drip parameters."
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "_amount": "Amount of ETH in wei to withdraw.",
          "_recipient": "Address to receive the funds."
        }
      }
    },
    "events": {
      "Drip(string,bytes32,uint256,address)": {
        "params": {
          "amount": "The amount of funds sent.",
          "authModule": "The type of authentication that was used for verifying the drip.",
          "recipient": "The recipient of the drip.",
          "userId": "The id of the user that requested the drip."
        }
      }
    },
    "title": "Faucet"
  },
  "ast": {
    "absolutePath": "src/periphery/faucet/Faucet.sol",
    "id": 73861,
    "exportedSymbols": {
      "Faucet": [
        73860
      ],
      "IFaucetAuthModule": [
        73965
      ],
      "SafeSend": [
        73623
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4741:182",
    "nodes": [
      {
        "id": 73608,
        "nodeType": "PragmaDirective",
        "src": "32:23:182",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 73610,
        "nodeType": "ImportDirective",
        "src": "57:72:182",
        "nodes": [],
        "absolutePath": "src/periphery/faucet/authmodules/IFaucetAuthModule.sol",
        "file": "./authmodules/IFaucetAuthModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73861,
        "sourceUnit": 73966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73609,
              "name": "IFaucetAuthModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73965,
              "src": "66:17:182",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73623,
        "nodeType": "ContractDefinition",
        "src": "226:165:182",
        "nodes": [
          {
            "id": 73622,
            "nodeType": "FunctionDefinition",
            "src": "300:89:182",
            "nodes": [],
            "body": {
              "id": 73621,
              "nodeType": "Block",
              "src": "348:41:182",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73618,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73614,
                        "src": "371:10:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 73617,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "358:12:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 73619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "358:24:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73620,
                  "nodeType": "ExpressionStatement",
                  "src": "358:24:182"
                }
              ]
            },
            "documentation": {
              "id": 73612,
              "nodeType": "StructuredDocumentation",
              "src": "250:45:182",
              "text": "@param _recipient Account to send ETH to."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73614,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "328:10:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73622,
                  "src": "312:26:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 73613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:15:182",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:28:182"
            },
            "returnParameters": {
              "id": 73616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:182"
            },
            "scope": 73623,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeSend",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 73611,
          "nodeType": "StructuredDocumentation",
          "src": "131:95:182",
          "text": "@title  SafeSend\n @notice Sends ETH to a recipient account without triggering any code."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          73623
        ],
        "name": "SafeSend",
        "nameLocation": "235:8:182",
        "scope": 73861,
        "usedErrors": []
      },
      {
        "id": 73860,
        "nodeType": "ContractDefinition",
        "src": "465:4307:182",
        "nodes": [
          {
            "id": 73635,
            "nodeType": "EventDefinition",
            "src": "791:105:182",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73625,
              "nodeType": "StructuredDocumentation",
              "src": "487:299:182",
              "text": "@notice Emitted on each drip.\n @param authModule The type of authentication that was used for verifying the drip.\n @param userId     The id of the user that requested the drip.\n @param amount     The amount of funds sent.\n @param recipient  The recipient of the drip."
            },
            "eventSelector": "2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a4",
            "name": "Drip",
            "nameLocation": "797:4:182",
            "parameters": {
              "id": 73634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "authModule",
                  "nameLocation": "817:10:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73635,
                  "src": "802:25:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:6:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73629,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userId",
                  "nameLocation": "845:6:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73635,
                  "src": "829:22:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73628,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "861:6:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73635,
                  "src": "853:14:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73633,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "885:9:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73635,
                  "src": "869:25:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:182",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:94:182"
            }
          },
          {
            "id": 73640,
            "nodeType": "StructDefinition",
            "src": "941:87:182",
            "nodes": [],
            "canonicalName": "Faucet.DripParameters",
            "members": [
              {
                "constant": false,
                "id": 73637,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "989:9:182",
                "nodeType": "VariableDeclaration",
                "scope": 73640,
                "src": "973:25:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 73636,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "973:15:182",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73639,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "1016:5:182",
                "nodeType": "VariableDeclaration",
                "scope": 73640,
                "src": "1008:13:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 73638,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1008:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripParameters",
            "nameLocation": "948:14:182",
            "scope": 73860,
            "visibility": "public"
          },
          {
            "id": 73648,
            "nodeType": "StructDefinition",
            "src": "1081:104:182",
            "nodes": [],
            "canonicalName": "Faucet.AuthParameters",
            "members": [
              {
                "constant": false,
                "id": 73643,
                "mutability": "mutable",
                "name": "module",
                "nameLocation": "1131:6:182",
                "nodeType": "VariableDeclaration",
                "scope": 73648,
                "src": "1113:24:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                  "typeString": "contract IFaucetAuthModule"
                },
                "typeName": {
                  "id": 73642,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73641,
                    "name": "IFaucetAuthModule",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 73965,
                    "src": "1113:17:182"
                  },
                  "referencedDeclaration": 73965,
                  "src": "1113:17:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                    "typeString": "contract IFaucetAuthModule"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73645,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1155:2:182",
                "nodeType": "VariableDeclaration",
                "scope": 73648,
                "src": "1147:10:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 73644,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1147:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73647,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "1173:5:182",
                "nodeType": "VariableDeclaration",
                "scope": 73648,
                "src": "1167:11:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 73646,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1167:5:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AuthParameters",
            "nameLocation": "1088:14:182",
            "scope": 73860,
            "visibility": "public"
          },
          {
            "id": 73657,
            "nodeType": "StructDefinition",
            "src": "1251:115:182",
            "nodes": [],
            "canonicalName": "Faucet.ModuleConfig",
            "members": [
              {
                "constant": false,
                "id": 73650,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1288:4:182",
                "nodeType": "VariableDeclaration",
                "scope": 73657,
                "src": "1281:11:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73649,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1281:6:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73652,
                "mutability": "mutable",
                "name": "enabled",
                "nameLocation": "1307:7:182",
                "nodeType": "VariableDeclaration",
                "scope": 73657,
                "src": "1302:12:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 73651,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1302:4:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73654,
                "mutability": "mutable",
                "name": "ttl",
                "nameLocation": "1332:3:182",
                "nodeType": "VariableDeclaration",
                "scope": 73657,
                "src": "1324:11:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73653,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73656,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1353:6:182",
                "nodeType": "VariableDeclaration",
                "scope": 73657,
                "src": "1345:14:182",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73655,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1345:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ModuleConfig",
            "nameLocation": "1258:12:182",
            "scope": 73860,
            "visibility": "public"
          },
          {
            "id": 73660,
            "nodeType": "VariableDeclaration",
            "src": "1433:30:182",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73658,
              "nodeType": "StructuredDocumentation",
              "src": "1372:56:182",
              "text": "@notice Admin address that can configure the faucet."
            },
            "functionSelector": "2a0acc6a",
            "mutability": "immutable",
            "name": "ADMIN",
            "nameLocation": "1458:5:182",
            "scope": 73860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:182",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73667,
            "nodeType": "VariableDeclaration",
            "src": "1545:57:182",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73661,
              "nodeType": "StructuredDocumentation",
              "src": "1470:70:182",
              "text": "@notice Mapping of authentication modules to their configurations."
            },
            "functionSelector": "a8ee49fe",
            "mutability": "mutable",
            "name": "modules",
            "nameLocation": "1595:7:182",
            "scope": 73860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_struct$_ModuleConfig_$73657_storage_$",
              "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig)"
            },
            "typeName": {
              "id": 73666,
              "keyType": {
                "id": 73663,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 73662,
                  "name": "IFaucetAuthModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73965,
                  "src": "1553:17:182"
                },
                "referencedDeclaration": 73965,
                "src": "1553:17:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                  "typeString": "contract IFaucetAuthModule"
                }
              },
              "nodeType": "Mapping",
              "src": "1545:42:182",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_struct$_ModuleConfig_$73657_storage_$",
                "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig)"
              },
              "valueType": {
                "id": 73665,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 73664,
                  "name": "ModuleConfig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73657,
                  "src": "1574:12:182"
                },
                "referencedDeclaration": 73657,
                "src": "1574:12:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage_ptr",
                  "typeString": "struct Faucet.ModuleConfig"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73675,
            "nodeType": "VariableDeclaration",
            "src": "1704:73:182",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73668,
              "nodeType": "StructuredDocumentation",
              "src": "1609:90:182",
              "text": "@notice Mapping of authentication IDs to the next timestamp at which they can be used."
            },
            "functionSelector": "38757bfd",
            "mutability": "mutable",
            "name": "timeouts",
            "nameLocation": "1769:8:182",
            "scope": 73860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 73674,
              "keyType": {
                "id": 73670,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 73669,
                  "name": "IFaucetAuthModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73965,
                  "src": "1712:17:182"
                },
                "referencedDeclaration": 73965,
                "src": "1712:17:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                  "typeString": "contract IFaucetAuthModule"
                }
              },
              "nodeType": "Mapping",
              "src": "1704:57:182",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 73673,
                "keyType": {
                  "id": 73671,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1741:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1733:27:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 73672,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1752:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73682,
            "nodeType": "VariableDeclaration",
            "src": "1862:58:182",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73676,
              "nodeType": "StructuredDocumentation",
              "src": "1784:73:182",
              "text": "@notice Maps from id to nonces to whether or not they have been used."
            },
            "functionSelector": "1d5d26bc",
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "1914:6:182",
            "scope": 73860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 73681,
              "keyType": {
                "id": 73677,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1870:7:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1862:44:182",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
              },
              "valueType": {
                "id": 73680,
                "keyType": {
                  "id": 73678,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1889:7:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1881:24:182",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueType": {
                  "id": 73679,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1900:4:182",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73695,
            "nodeType": "ModifierDefinition",
            "src": "1993:127:182",
            "nodes": [],
            "body": {
              "id": 73694,
              "nodeType": "Block",
              "src": "2016:104:182",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 73686,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2034:3:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2034:10:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 73688,
                          "name": "ADMIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73660,
                          "src": "2048:5:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2034:19:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642062792061646d696e",
                        "id": 73690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2055:46:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11dc0a10cbbc1cc6b65f2557b3594efa38f24c7a8739675b3fb6ad92d74983c4",
                          "typeString": "literal_string \"Faucet: function can only be called by admin\""
                        },
                        "value": "Faucet: function can only be called by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11dc0a10cbbc1cc6b65f2557b3594efa38f24c7a8739675b3fb6ad92d74983c4",
                          "typeString": "literal_string \"Faucet: function can only be called by admin\""
                        }
                      ],
                      "id": 73685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2026:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:76:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73692,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:76:182"
                },
                {
                  "id": 73693,
                  "nodeType": "PlaceholderStatement",
                  "src": "2112:1:182"
                }
              ]
            },
            "documentation": {
              "id": 73683,
              "nodeType": "StructuredDocumentation",
              "src": "1927:61:182",
              "text": "@notice Modifier that makes a function admin priviledged."
            },
            "name": "priviledged",
            "nameLocation": "2002:11:182",
            "parameters": {
              "id": 73684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:2:182"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73706,
            "nodeType": "FunctionDefinition",
            "src": "2193:59:182",
            "nodes": [],
            "body": {
              "id": 73705,
              "nodeType": "Block",
              "src": "2221:31:182",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73701,
                      "name": "ADMIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73660,
                      "src": "2231:5:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73702,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73698,
                      "src": "2239:6:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2231:14:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73704,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:14:182"
                }
              ]
            },
            "documentation": {
              "id": 73696,
              "nodeType": "StructuredDocumentation",
              "src": "2126:62:182",
              "text": "@param _admin Admin address that can configure the faucet."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73698,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2213:6:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73706,
                  "src": "2205:14:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:7:182",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2204:16:182"
            },
            "returnParameters": {
              "id": 73700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:182"
            },
            "scope": 73860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73711,
            "nodeType": "FunctionDefinition",
            "src": "2319:56:182",
            "nodes": [],
            "body": {
              "id": 73710,
              "nodeType": "Block",
              "src": "2346:29:182",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 73707,
              "nodeType": "StructuredDocumentation",
              "src": "2258:56:182",
              "text": "@notice Allows users to donate ETH to this contract."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:2:182"
            },
            "returnParameters": {
              "id": 73709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2346:0:182"
            },
            "scope": 73860,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73730,
            "nodeType": "FunctionDefinition",
            "src": "2549:141:182",
            "nodes": [],
            "body": {
              "id": 73729,
              "nodeType": "Block",
              "src": "2631:59:182",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73726,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73714,
                        "src": "2672:10:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 73723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2641:12:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$73623_$",
                          "typeString": "function (address payable) payable returns (contract SafeSend)"
                        },
                        "typeName": {
                          "id": 73722,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73721,
                            "name": "SafeSend",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 73623,
                            "src": "2645:8:182"
                          },
                          "referencedDeclaration": 73623,
                          "src": "2645:8:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeSend_$73623",
                            "typeString": "contract SafeSend"
                          }
                        }
                      },
                      "id": 73725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 73724,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73716,
                          "src": "2662:7:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2641:30:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$73623_$value",
                        "typeString": "function (address payable) payable returns (contract SafeSend)"
                      }
                    },
                    "id": 73727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:42:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeSend_$73623",
                      "typeString": "contract SafeSend"
                    }
                  },
                  "id": 73728,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:42:182"
                }
              ]
            },
            "documentation": {
              "id": 73712,
              "nodeType": "StructuredDocumentation",
              "src": "2381:163:182",
              "text": "@notice Allows the admin to withdraw funds.\n @param _recipient Address to receive the funds.\n @param _amount    Amount of ETH in wei to withdraw."
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73719,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73718,
                  "name": "priviledged",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73695,
                  "src": "2619:11:182"
                },
                "nodeType": "ModifierInvocation",
                "src": "2619:11:182"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2558:8:182",
            "parameters": {
              "id": 73717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73714,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2583:10:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73730,
                  "src": "2567:26:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 73713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:15:182",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73716,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2603:7:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73730,
                  "src": "2595:15:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2566:45:182"
            },
            "returnParameters": {
              "id": 73720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:182"
            },
            "scope": 73860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73749,
            "nodeType": "FunctionDefinition",
            "src": "2887:137:182",
            "nodes": [],
            "body": {
              "id": 73748,
              "nodeType": "Block",
              "src": "2981:43:182",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 73742,
                        "name": "modules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73667,
                        "src": "2991:7:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_struct$_ModuleConfig_$73657_storage_$",
                          "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig storage ref)"
                        }
                      },
                      "id": 73744,
                      "indexExpression": {
                        "id": 73743,
                        "name": "_module",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73734,
                        "src": "2999:7:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                          "typeString": "contract IFaucetAuthModule"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2991:16:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage",
                        "typeString": "struct Faucet.ModuleConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73745,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73737,
                      "src": "3010:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                        "typeString": "struct Faucet.ModuleConfig memory"
                      }
                    },
                    "src": "2991:26:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage",
                      "typeString": "struct Faucet.ModuleConfig storage ref"
                    }
                  },
                  "id": 73747,
                  "nodeType": "ExpressionStatement",
                  "src": "2991:26:182"
                }
              ]
            },
            "documentation": {
              "id": 73731,
              "nodeType": "StructuredDocumentation",
              "src": "2696:186:182",
              "text": "@notice Allows the admin to configure an authentication module.\n @param _module Authentication module to configure.\n @param _config Configuration to set for the module."
            },
            "functionSelector": "1cb81b88",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73739,
                  "name": "priviledged",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73695,
                  "src": "2969:11:182"
                },
                "nodeType": "ModifierInvocation",
                "src": "2969:11:182"
              }
            ],
            "name": "configure",
            "nameLocation": "2896:9:182",
            "parameters": {
              "id": 73738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73734,
                  "mutability": "mutable",
                  "name": "_module",
                  "nameLocation": "2924:7:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73749,
                  "src": "2906:25:182",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                    "typeString": "contract IFaucetAuthModule"
                  },
                  "typeName": {
                    "id": 73733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73732,
                      "name": "IFaucetAuthModule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73965,
                      "src": "2906:17:182"
                    },
                    "referencedDeclaration": 73965,
                    "src": "2906:17:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                      "typeString": "contract IFaucetAuthModule"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73737,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "2953:7:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73749,
                  "src": "2933:27:182",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                    "typeString": "struct Faucet.ModuleConfig"
                  },
                  "typeName": {
                    "id": 73736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73735,
                      "name": "ModuleConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73657,
                      "src": "2933:12:182"
                    },
                    "referencedDeclaration": 73657,
                    "src": "2933:12:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage_ptr",
                      "typeString": "struct Faucet.ModuleConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:56:182"
            },
            "returnParameters": {
              "id": 73741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2981:0:182"
            },
            "scope": 73860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73859,
            "nodeType": "FunctionDefinition",
            "src": "3170:1600:182",
            "nodes": [],
            "body": {
              "id": 73858,
              "nodeType": "Block",
              "src": "3251:1519:182",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73761,
                      "mutability": "mutable",
                      "name": "config",
                      "nameLocation": "3321:6:182",
                      "nodeType": "VariableDeclaration",
                      "scope": 73858,
                      "src": "3301:26:182",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                        "typeString": "struct Faucet.ModuleConfig"
                      },
                      "typeName": {
                        "id": 73760,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73759,
                          "name": "ModuleConfig",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73657,
                          "src": "3301:12:182"
                        },
                        "referencedDeclaration": 73657,
                        "src": "3301:12:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage_ptr",
                          "typeString": "struct Faucet.ModuleConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73766,
                  "initialValue": {
                    "baseExpression": {
                      "id": 73762,
                      "name": "modules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73667,
                      "src": "3330:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_struct$_ModuleConfig_$73657_storage_$",
                        "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig storage ref)"
                      }
                    },
                    "id": 73765,
                    "indexExpression": {
                      "expression": {
                        "id": 73763,
                        "name": "_auth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73756,
                        "src": "3338:5:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                          "typeString": "struct Faucet.AuthParameters memory"
                        }
                      },
                      "id": 73764,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "module",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73643,
                      "src": "3338:12:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                        "typeString": "contract IFaucetAuthModule"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3330:21:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$73657_storage",
                      "typeString": "struct Faucet.ModuleConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:50:182"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73768,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73761,
                          "src": "3432:6:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 73769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "enabled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73652,
                        "src": "3432:14:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a2070726f76696465642061757468206d6f64756c65206973206e6f7420737570706f72746564206279207468697320666175636574",
                        "id": 73770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3448:62:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a487bd17616eecf27b0cfc5721c4a6f239e71d3a78775f3783bebb377904f494",
                          "typeString": "literal_string \"Faucet: provided auth module is not supported by this faucet\""
                        },
                        "value": "Faucet: provided auth module is not supported by this faucet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a487bd17616eecf27b0cfc5721c4a6f239e71d3a78775f3783bebb377904f494",
                          "typeString": "literal_string \"Faucet: provided auth module is not supported by this faucet\""
                        }
                      ],
                      "id": 73767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3424:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:87:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73772,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:87:182"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 73774,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73682,
                              "src": "3826:6:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 73777,
                            "indexExpression": {
                              "expression": {
                                "id": 73775,
                                "name": "_auth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73756,
                                "src": "3833:5:182",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                  "typeString": "struct Faucet.AuthParameters memory"
                                }
                              },
                              "id": 73776,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73645,
                              "src": "3833:8:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3826:16:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 73780,
                          "indexExpression": {
                            "expression": {
                              "id": 73778,
                              "name": "_params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73753,
                              "src": "3843:7:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                                "typeString": "struct Faucet.DripParameters memory"
                              }
                            },
                            "id": 73779,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73639,
                            "src": "3843:13:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3826:31:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 73781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3861:5:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3826:40:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a206e6f6e63652068617320616c7265616479206265656e2075736564",
                        "id": 73783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3868:37:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38a35c84541827923eff9aa90f61202cb382140ced78b1ed52388919b57b3f37",
                          "typeString": "literal_string \"Faucet: nonce has already been used\""
                        },
                        "value": "Faucet: nonce has already been used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38a35c84541827923eff9aa90f61202cb382140ced78b1ed52388919b57b3f37",
                          "typeString": "literal_string \"Faucet: nonce has already been used\""
                        }
                      ],
                      "id": 73773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3818:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:88:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73785,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:88:182"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 73787,
                              "name": "timeouts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73675,
                              "src": "3984:8:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
                              }
                            },
                            "id": 73790,
                            "indexExpression": {
                              "expression": {
                                "id": 73788,
                                "name": "_auth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73756,
                                "src": "3993:5:182",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                  "typeString": "struct Faucet.AuthParameters memory"
                                }
                              },
                              "id": 73789,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "module",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73643,
                              "src": "3993:12:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                                "typeString": "contract IFaucetAuthModule"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3984:22:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 73793,
                          "indexExpression": {
                            "expression": {
                              "id": 73791,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73756,
                              "src": "4007:5:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 73792,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73645,
                            "src": "4007:8:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3984:32:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 73794,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4019:5:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 73795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4019:15:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3984:50:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a20617574682063616e6e6f7420626520757365642079657420626563617573652074696d656f757420686173206e6f7420656c6170736564",
                        "id": 73797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:65:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f21b1e0d72b431af603cc6414de35a527238124b8e3e145303b8ecafae0064cb",
                          "typeString": "literal_string \"Faucet: auth cannot be used yet because timeout has not elapsed\""
                        },
                        "value": "Faucet: auth cannot be used yet because timeout has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f21b1e0d72b431af603cc6414de35a527238124b8e3e145303b8ecafae0064cb",
                          "typeString": "literal_string \"Faucet: auth cannot be used yet because timeout has not elapsed\""
                        }
                      ],
                      "id": 73786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3963:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:160:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73799,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:160:182"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73804,
                            "name": "_params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73753,
                            "src": "4204:7:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                              "typeString": "struct Faucet.DripParameters memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 73805,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73756,
                              "src": "4213:5:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 73806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73645,
                            "src": "4213:8:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 73807,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73756,
                              "src": "4223:5:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 73808,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73647,
                            "src": "4223:11:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                              "typeString": "struct Faucet.DripParameters memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 73801,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73756,
                              "src": "4184:5:182",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 73802,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "module",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73643,
                            "src": "4184:12:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                              "typeString": "contract IFaucetAuthModule"
                            }
                          },
                          "id": 73803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73964,
                          "src": "4184:19:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_DripParameters_$73640_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Faucet.DripParameters memory,bytes32,bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 73809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4184:51:182",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a206472697020706172616d657465727320636f756c64206e6f74206265207665726966696564206279207365637572697479206d6f64756c65",
                        "id": 73810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:66:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bbdb926f863761ec12b934a9f8a495456fde72dcb6f7b3711891b4ba4651e91",
                          "typeString": "literal_string \"Faucet: drip parameters could not be verified by security module\""
                        },
                        "value": "Faucet: drip parameters could not be verified by security module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bbdb926f863761ec12b934a9f8a495456fde72dcb6f7b3711891b4ba4651e91",
                          "typeString": "literal_string \"Faucet: drip parameters could not be verified by security module\""
                        }
                      ],
                      "id": 73800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4163:7:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:162:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73812,
                  "nodeType": "ExpressionStatement",
                  "src": "4163:162:182"
                },
                {
                  "expression": {
                    "id": 73825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 73813,
                          "name": "timeouts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73675,
                          "src": "4405:8:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$73965_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 73818,
                        "indexExpression": {
                          "expression": {
                            "id": 73814,
                            "name": "_auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73756,
                            "src": "4414:5:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                              "typeString": "struct Faucet.AuthParameters memory"
                            }
                          },
                          "id": 73815,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "module",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73643,
                          "src": "4414:12:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFaucetAuthModule_$73965",
                            "typeString": "contract IFaucetAuthModule"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4405:22:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 73819,
                      "indexExpression": {
                        "expression": {
                          "id": 73816,
                          "name": "_auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73756,
                          "src": "4428:5:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                            "typeString": "struct Faucet.AuthParameters memory"
                          }
                        },
                        "id": 73817,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73645,
                        "src": "4428:8:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4405:32:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 73824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 73820,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4440:5:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 73821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4440:15:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 73822,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73761,
                          "src": "4458:6:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 73823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ttl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73654,
                        "src": "4458:10:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4440:28:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4405:63:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73826,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:63:182"
                },
                {
                  "expression": {
                    "id": 73835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 73827,
                          "name": "nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73682,
                          "src": "4514:6:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 73832,
                        "indexExpression": {
                          "expression": {
                            "id": 73828,
                            "name": "_auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73756,
                            "src": "4521:5:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                              "typeString": "struct Faucet.AuthParameters memory"
                            }
                          },
                          "id": 73829,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73645,
                          "src": "4521:8:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4514:16:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 73833,
                      "indexExpression": {
                        "expression": {
                          "id": 73830,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73753,
                          "src": "4531:7:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 73831,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73639,
                        "src": "4531:13:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4514:31:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 73834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4548:4:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4514:38:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73836,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:38:182"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73843,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73753,
                          "src": "4668:7:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 73844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73637,
                        "src": "4668:17:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 73839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4631:12:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$73623_$",
                          "typeString": "function (address payable) payable returns (contract SafeSend)"
                        },
                        "typeName": {
                          "id": 73838,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 73837,
                            "name": "SafeSend",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 73623,
                            "src": "4635:8:182"
                          },
                          "referencedDeclaration": 73623,
                          "src": "4635:8:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeSend_$73623",
                            "typeString": "contract SafeSend"
                          }
                        }
                      },
                      "id": 73842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 73840,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73761,
                            "src": "4652:6:182",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                              "typeString": "struct Faucet.ModuleConfig memory"
                            }
                          },
                          "id": 73841,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73656,
                          "src": "4652:13:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4631:36:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$73623_$value",
                        "typeString": "function (address payable) payable returns (contract SafeSend)"
                      }
                    },
                    "id": 73845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4631:55:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeSend_$73623",
                      "typeString": "contract SafeSend"
                    }
                  },
                  "id": 73846,
                  "nodeType": "ExpressionStatement",
                  "src": "4631:55:182"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73848,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73761,
                          "src": "4707:6:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 73849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73650,
                        "src": "4707:11:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 73850,
                          "name": "_auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73756,
                          "src": "4720:5:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                            "typeString": "struct Faucet.AuthParameters memory"
                          }
                        },
                        "id": 73851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73645,
                        "src": "4720:8:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 73852,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73761,
                          "src": "4730:6:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$73657_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 73853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73656,
                        "src": "4730:13:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 73854,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73753,
                          "src": "4745:7:182",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 73855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73637,
                        "src": "4745:17:182",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 73847,
                      "name": "Drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73635,
                      "src": "4702:4:182",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes32,uint256,address)"
                      }
                    },
                    "id": 73856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4702:61:182",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73857,
                  "nodeType": "EmitStatement",
                  "src": "4697:66:182"
                }
              ]
            },
            "documentation": {
              "id": 73750,
              "nodeType": "StructuredDocumentation",
              "src": "3030:135:182",
              "text": "@notice Drips ETH to a recipient account.\n @param _params Drip parameters.\n @param _auth   Authentication parameters."
            },
            "functionSelector": "b960bc2b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nameLocation": "3179:4:182",
            "parameters": {
              "id": 73757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73753,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "3206:7:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73859,
                  "src": "3184:29:182",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripParameters_$73640_memory_ptr",
                    "typeString": "struct Faucet.DripParameters"
                  },
                  "typeName": {
                    "id": 73752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73751,
                      "name": "DripParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73640,
                      "src": "3184:14:182"
                    },
                    "referencedDeclaration": 73640,
                    "src": "3184:14:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripParameters_$73640_storage_ptr",
                      "typeString": "struct Faucet.DripParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73756,
                  "mutability": "mutable",
                  "name": "_auth",
                  "nameLocation": "3237:5:182",
                  "nodeType": "VariableDeclaration",
                  "scope": 73859,
                  "src": "3215:27:182",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AuthParameters_$73648_memory_ptr",
                    "typeString": "struct Faucet.AuthParameters"
                  },
                  "typeName": {
                    "id": 73755,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73754,
                      "name": "AuthParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73648,
                      "src": "3215:14:182"
                    },
                    "referencedDeclaration": 73648,
                    "src": "3215:14:182",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AuthParameters_$73648_storage_ptr",
                      "typeString": "struct Faucet.AuthParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3183:60:182"
            },
            "returnParameters": {
              "id": 73758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3251:0:182"
            },
            "scope": 73860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [
          73623
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 73624,
          "nodeType": "StructuredDocumentation",
          "src": "393:72:182",
          "text": "@title  Faucet\n @notice Faucet contract that drips ETH to users."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          73860
        ],
        "name": "Faucet",
        "nameLocation": "474:6:182",
        "scope": 73861,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 182
}