{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract OptimistInviter",
          "name": "_optimistInviter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CLAIMABLE_INVITE_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EIP712_DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "consumeNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        }
      ],
      "name": "getClaimableInviteStructHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        }
      ],
      "name": "getClaimableInviteWithNewNonce",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        }
      ],
      "name": "getDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_name",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_version",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_chainid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_verifyingContract",
          "type": "address"
        }
      ],
      "name": "getDigestWithEIP712Domain",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimistInviter",
      "outputs": [
        {
          "internalType": "contract OptimistInviter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000d3138038062000d3183398101604081905262000034916200007c565b600080546001600160a01b0319166001600160a01b03841617905560016200005d82826200020b565b505050620002d7565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200009057600080fd5b82516001600160a01b0381168114620000a857600080fd5b602084810151919350906001600160401b0380821115620000c857600080fd5b818601915086601f830112620000dd57600080fd5b815181811115620000f257620000f262000066565b604051601f8201601f19908116603f011681019083821181831017156200011d576200011d62000066565b8160405282815289868487010111156200013657600080fd5b600093505b828410156200015a57848401860151818501870152928501926200013b565b828411156200016c5760008684830101525b8096505050505050509250929050565b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020657600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b5050505b505050565b81516001600160401b0381111562000227576200022762000066565b6200023f816200023884546200017c565b84620001b8565b602080601f8311600181146200027757600084156200025e5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a85788860151825594840194600190910190840162000287565b5085821015620002c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a4a80620002e76000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a",
    "sourceMap": "2095:3808:233:-:0;;;2913:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2990:15;:34;;-1:-1:-1;;;;;;2990:34:233;-1:-1:-1;;;;;2990:34:233;;;;;-1:-1:-1;3034:12:233;3041:5;-1:-1:-1;3034:12:233;:::i;:::-;;2913:140;;2095:3808;;14:127:283;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1279;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;363:16;;-1:-1:-1;;;;;408:31:283;;398:42;;388:70;;454:1;451;444:12;388:70;501:2;532:18;;;526:25;477:5;;-1:-1:-1;501:2:283;-1:-1:-1;;;;;600:14:283;;;597:34;;;627:1;624;617:12;597:34;665:6;654:9;650:22;640:32;;710:7;703:4;699:2;695:13;691:27;681:55;;732:1;729;722:12;681:55;761:2;755:9;783:2;779;776:10;773:36;;;789:18;;:::i;:::-;864:2;858:9;832:2;918:13;;-1:-1:-1;;914:22:283;;;938:2;910:31;906:40;894:53;;;962:18;;;982:22;;;959:46;956:72;;;1008:18;;:::i;:::-;1048:10;1044:2;1037:22;1083:2;1075:6;1068:18;1123:7;1118:2;1113;1109;1105:11;1101:20;1098:33;1095:53;;;1144:1;1141;1134:12;1095:53;1166:1;1157:10;;1176:129;1190:2;1187:1;1184:9;1176:129;;;1278:10;;;1274:19;;1268:26;1247:14;;;1243:23;;1236:59;1201:10;;;;1176:129;;;1323:2;1320:1;1317:9;1314:80;;;1382:1;1377:2;1372;1364:6;1360:15;1356:24;1349:35;1314:80;1413:6;1403:16;;;;;;;;146:1279;;;;;:::o;1430:380::-;1509:1;1505:12;;;;1552;;;1573:61;;1627:4;1619:6;1615:17;1605:27;;1573:61;1680:2;1672:6;1669:14;1649:18;1646:38;1643:161;;1726:10;1721:3;1717:20;1714:1;1707:31;1761:4;1758:1;1751:15;1789:4;1786:1;1779:15;1643:161;;1430:380;;;:::o;1941:545::-;2043:2;2038:3;2035:11;2032:448;;;2079:1;2104:5;2100:2;2093:17;2149:4;2145:2;2135:19;2219:2;2207:10;2203:19;2200:1;2196:27;2190:4;2186:38;2255:4;2243:10;2240:20;2237:47;;;-1:-1:-1;2278:4:283;2237:47;2333:2;2328:3;2324:12;2321:1;2317:20;2311:4;2307:31;2297:41;;2388:82;2406:2;2399:5;2396:13;2388:82;;;2451:17;;;2432:1;2421:13;2388:82;;;2392:3;;;2032:448;1941:545;;;:::o;2662:1352::-;2782:10;;-1:-1:-1;;;;;2804:30:283;;2801:56;;;2837:18;;:::i;:::-;2866:97;2956:6;2916:38;2948:4;2942:11;2916:38;:::i;:::-;2910:4;2866:97;:::i;:::-;3018:4;;3082:2;3071:14;;3099:1;3094:663;;;;3801:1;3818:6;3815:89;;;-1:-1:-1;3870:19:283;;;3864:26;3815:89;-1:-1:-1;;2619:1:283;2615:11;;;2611:24;2607:29;2597:40;2643:1;2639:11;;;2594:57;3917:81;;3064:944;;3094:663;1888:1;1881:14;;;1925:4;1912:18;;-1:-1:-1;;3130:20:283;;;3248:236;3262:7;3259:1;3256:14;3248:236;;;3351:19;;;3345:26;3330:42;;3443:27;;;;3411:1;3399:14;;;;3278:19;;3248:236;;;3252:3;3512:6;3503:7;3500:19;3497:201;;;3573:19;;;3567:26;-1:-1:-1;;3656:1:283;3652:14;;;3668:3;3648:24;3644:37;3640:42;3625:58;3610:74;;3497:201;-1:-1:-1;;;;;3744:1:283;3728:14;;;3724:22;3711:36;;-1:-1:-1;2662:1352:283:o;:::-;2095:3808:233;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a",
    "sourceMap": "2095:3808:233:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5332:569;;;;;;:::i;:::-;;:::i;:::-;;;2606:25:283;;;2594:2;2579:18;5332:569:233;;;;;;;;2769:18;;;:::i;:::-;;;;;;;:::i;4428:340::-;;;;;;:::i;:::-;;:::i;3718:119::-;;;:::i;4046:193::-;;;;;;:::i;:::-;;:::i;:::-;;;;4039:13:283;;4054:42;4035:62;4017:81;;4154:4;4142:17;;;4136:24;4114:20;;;4107:54;;;;3990:18;4046:193:233;3803:364:283;2879:27:233;;;;;;2194:110;;2246:58;2194:110;;2412:152;;2469:95;2412:152;;2639:38;;;;;;;;;;;;4555:42:283;4543:55;;;4525:74;;4513:2;4498:18;2639:38:233;4354:251:283;3230:274:233;;;;;;:::i;:::-;;:::i;5332:569::-;5713:16;;;;;;;;;;5731:19;;;;;;5678:103;;;2469:95;5678:103;;;5393:25:283;;;;5434:18;;5427:34;;;;5477:18;;;5470:34;5520:18;;;5513:34;;;5596:42;5584:55;;5563:19;;;5556:84;5606:7:233;;;;5365:19:283;;5678:103:233;;;;;;;;;;;;5655:136;;;;;;5629:162;;5808:86;5830:15;5847:46;5876:16;5847:46;;;;;;;;;;:::i;:::-;8677:57:56;;7730:66:283;8677:57:56;;;7718:79:283;7813:11;;;7806:27;;;7849:12;;;7842:28;;;8641:7:56;;7886:12:283;;8677:57:56;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;;5808:86:233;5801:93;5332:569;-1:-1:-1;;;;;;;5332:569:233:o;2769:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4428:340::-;4527:7;4553:208;4592:16;4628:4;4553:208;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4653:15:233;;;:32;;;;;;;;:15;;;;;-1:-1:-1;4653:30:233;;-1:-1:-1;4653:32:233;;;;;-1:-1:-1;4653:32:233;;;;;;:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4735:15;;4700:13;;4735:15;;4553:25;:208::i;:::-;4546:215;4428:340;-1:-1:-1;;4428:340:233:o;3718:119::-;3813:12;:14;;3758:7;;;3813:14;;;:::i;:::-;;;;;3802:26;;;;;;2606:25:283;;2594:2;2579:18;;2460:177;3802:26:233;;;;;;;;;;;;;3792:37;;;;;;3777:53;;3718:119;:::o;4046:193::-;-1:-1:-1;;;;;;;;;;;;;;;;;4176:56:233;;;;;;;;4208:7;4176:56;;;;;;4217:14;:12;:14::i;:::-;4176:56;;4169:63;4046:193;-1:-1:-1;;4046:193:233:o;3230:274::-;3448:23;;3473:22;;;;;3410:86;;3370:7;;3410:86;;2246:58;;3448:23;;3410:86;7289:25:283;;;7362:42;7350:55;;;;7345:2;7330:18;;7323:83;7437:2;7422:18;;7415:34;7277:2;7262:18;;7087:368;3410:86:233;;;;;;;;;;;;;3400:97;;;;;;3393:104;;3230:274;;;:::o;14:163:283:-;82:5;127:2;118:6;113:3;109:16;105:25;102:45;;;143:1;140;133:12;102:45;-1:-1:-1;165:6:283;14:163;-1:-1:-1;14:163:283:o;182:184::-;234:77;231:1;224:88;331:4;328:1;321:15;355:4;352:1;345:15;371:334;442:2;436:9;498:2;488:13;;503:66;484:86;472:99;;601:18;586:34;;622:22;;;583:62;580:88;;;648:18;;:::i;:::-;684:2;677:22;371:334;;-1:-1:-1;371:334:283:o;710:245::-;758:4;791:18;783:6;780:30;777:56;;;813:18;;:::i;:::-;-1:-1:-1;870:2:283;858:15;875:66;854:88;944:4;850:99;;710:245::o;960:462::-;1002:5;1055:3;1048:4;1040:6;1036:17;1032:27;1022:55;;1073:1;1070;1063:12;1022:55;1109:6;1096:20;1140:48;1156:31;1184:2;1156:31;:::i;:::-;1140:48;:::i;:::-;1213:2;1204:7;1197:19;1259:3;1252:4;1247:2;1239:6;1235:15;1231:26;1228:35;1225:55;;;1276:1;1273;1266:12;1225:55;1341:2;1334:4;1326:6;1322:17;1315:4;1306:7;1302:18;1289:55;1389:1;1364:16;;;1382:4;1360:27;1353:38;;;;1368:7;960:462;-1:-1:-1;;;960:462:283:o;1427:196::-;1495:20;;1555:42;1544:54;;1534:65;;1524:93;;1613:1;1610;1603:12;1524:93;1427:196;;;:::o;1628:827::-;1777:6;1785;1793;1801;1809;1862:3;1850:9;1841:7;1837:23;1833:33;1830:53;;;1879:1;1876;1869:12;1830:53;1902:62;1956:7;1945:9;1902:62;:::i;:::-;1892:72;;2015:2;2004:9;2000:18;1987:32;2038:18;2079:2;2071:6;2068:14;2065:34;;;2095:1;2092;2085:12;2065:34;2118:49;2159:7;2150:6;2139:9;2135:22;2118:49;:::i;:::-;2108:59;;2220:2;2209:9;2205:18;2192:32;2176:48;;2249:2;2239:8;2236:16;2233:36;;;2265:1;2262;2255:12;2233:36;;2288:51;2331:7;2320:8;2309:9;2305:24;2288:51;:::i;:::-;2278:61;;;2386:3;2375:9;2371:19;2358:33;2348:43;;2410:39;2444:3;2433:9;2429:19;2410:39;:::i;:::-;2400:49;;1628:827;;;;;;;;:::o;2642:258::-;2714:1;2724:113;2738:6;2735:1;2732:13;2724:113;;;2814:11;;;2808:18;2795:11;;;2788:39;2760:2;2753:10;2724:113;;;2855:6;2852:1;2849:13;2846:48;;;2890:1;2881:6;2876:3;2872:16;2865:27;2846:48;;2642:258;;;:::o;2905:442::-;3054:2;3043:9;3036:21;3017:4;3086:6;3080:13;3129:6;3124:2;3113:9;3109:18;3102:34;3145:66;3204:6;3199:2;3188:9;3184:18;3179:2;3171:6;3167:15;3145:66;:::i;:::-;3263:2;3251:15;3268:66;3247:88;3232:104;;;;3338:2;3228:113;;2905:442;-1:-1:-1;;2905:442:283:o;3352:255::-;3447:6;3500:2;3488:9;3479:7;3475:23;3471:32;3468:52;;;3516:1;3513;3506:12;3468:52;3539:62;3593:7;3582:9;3539:62;:::i;:::-;3529:72;3352:255;-1:-1:-1;;;3352:255:283:o;3612:186::-;3671:6;3724:2;3712:9;3703:7;3699:23;3695:32;3692:52;;;3740:1;3737;3730:12;3692:52;3763:29;3782:9;3763:29;:::i;4610:519::-;4703:6;4756:2;4744:9;4735:7;4731:23;4727:32;4724:52;;;4772:1;4769;4762:12;4724:52;4805:2;4799:9;4847:2;4839:6;4835:15;4916:6;4904:10;4901:22;4880:18;4868:10;4865:34;4862:62;4859:88;;;4927:18;;:::i;:::-;4963:2;4956:22;5002:29;5021:9;5002:29;:::i;:::-;4994:6;4987:45;5093:2;5082:9;5078:18;5065:32;5060:2;5052:6;5048:15;5041:57;5117:6;5107:16;;;4610:519;;;;:::o;5651:437::-;5730:1;5726:12;;;;5773;;;5794:61;;5848:4;5840:6;5836:17;5826:27;;5794:61;5901:2;5893:6;5890:14;5870:18;5867:38;5864:218;;5938:77;5935:1;5928:88;6039:4;6036:1;6029:15;6067:4;6064:1;6057:15;6093:635;6173:6;6226:2;6214:9;6205:7;6201:23;6197:32;6194:52;;;6242:1;6239;6232:12;6194:52;6275:9;6269:16;6308:18;6300:6;6297:30;6294:50;;;6340:1;6337;6330:12;6294:50;6363:22;;6416:4;6408:13;;6404:27;-1:-1:-1;6394:55:283;;6445:1;6442;6435:12;6394:55;6474:2;6468:9;6499:48;6515:31;6543:2;6515:31;:::i;6499:48::-;6570:2;6563:5;6556:17;6610:7;6605:2;6600;6596;6592:11;6588:20;6585:33;6582:53;;;6631:1;6628;6621:12;6582:53;6644:54;6695:2;6690;6683:5;6679:14;6674:2;6670;6666:11;6644:54;:::i;:::-;6717:5;6093:635;-1:-1:-1;;;;;6093:635:283:o;6733:349::-;6772:3;6803:66;6796:5;6793:77;6790:257;;6903:77;6900:1;6893:88;7004:4;7001:1;6994:15;7032:4;7029:1;7022:15;6790:257;-1:-1:-1;7074:1:283;7063:13;;6733:349::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CLAIMABLE_INVITE_TYPEHASH()": "c4fc453d",
    "EIP712_DOMAIN_TYPEHASH()": "c7977be7",
    "consumeNonce()": "34b15118",
    "currentNonce()": "adb610a3",
    "getClaimableInviteStructHash((address,bytes32))": "eb1df626",
    "getClaimableInviteWithNewNonce(address)": "8ebe24e5",
    "getDigest((address,bytes32))": "1c6e7f25",
    "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": "019a4f49",
    "name()": "06fdde03",
    "optimistInviter()": "d1829907"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"_optimistInviter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CLAIMABLE_INVITE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumeNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getClaimableInviteStructHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"getClaimableInviteWithNewNonce\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_version\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_verifyingContract\",\"type\":\"address\"}],\"name\":\"getDigestWithEIP712Domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimistInviter\",\"outputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"consumeNonce()\":{\"returns\":{\"_0\":\"Nonce that should be used as part of ClaimableInvite.\"}},\"getClaimableInviteStructHash((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 typed struct hash.\"}},\"getClaimableInviteWithNewNonce(address)\":{\"params\":{\"_issuer\":\"Issuer to include in the ClaimableInvite.\"},\"returns\":{\"_0\":\"ClaimableInvite that can be hashed & signed.\"}},\"getDigest((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"params\":{\"_chainid\":\"Chain ID to use in the EIP712 domain.\",\"_claimableInvite\":\"ClaimableInvite struct to hash.\",\"_name\":\"Contract name to use in the EIP712 domain.\",\"_verifyingContract\":\"Address to use in the EIP712 domain.\",\"_version\":\"Contract version to use in the EIP712 domain.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLAIMABLE_INVITE_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the ClaimableInvite type.\"},\"EIP712_DOMAIN_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the EIP712Domain type that is included as part of the signature.\"},\"consumeNonce()\":{\"notice\":\"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces.\"},\"currentNonce()\":{\"notice\":\"Keeps track of current nonce to generate new nonces for each invite.\"},\"getClaimableInviteStructHash((address,bytes32))\":{\"notice\":\"Returns the hash of the struct ClaimableInvite.\"},\"getClaimableInviteWithNewNonce(address)\":{\"notice\":\"Returns a ClaimableInvite with the issuer and current nonce.\"},\"getDigest((address,bytes32))\":{\"notice\":\"Computes the EIP712 digest with default correct parameters.\"},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"notice\":\"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail.\"},\"name()\":{\"notice\":\"OptimistInviter contract name. Used to construct the EIP-712 domain.\"},\"optimistInviter()\":{\"notice\":\"Address of OptimistInviter contract we are testing.\"}},\"notice\":\"Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Helpers.sol\":\"OptimistInviterHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x589fc5a5073da3564896a08bb7d719ffd1cb79a79fdb9b298669c719b7843637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e7c665cd88a50dbe86bda89198e598f2dbf00b8605c5de999f2a73e84dc016\",\"dweb:/ipfs/Qmc6nHb2TUPeKYavwdMrM1AhkaRFAaMNEz58wfnfHhkkyx\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3\",\"dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]},\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33\",\"dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9\"]},\"src/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2\",\"dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"test/Helpers.sol\":{\"keccak256\":\"0x25f35581abdd3645dc0fa0dd9f4738f263a017b09406ca0246425d6b8faa5288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50ab3423d93cb48f19236cdcf9d680f5756aa75d3ab3900d1ca442156f063e61\",\"dweb:/ipfs/Qmctn4f3GFBPbxRzsQJm276GMNdixRGyGgu9rAVBbeQDGj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract OptimistInviter",
              "name": "_optimistInviter",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLAIMABLE_INVITE_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EIP712_DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consumeNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getClaimableInviteStructHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getClaimableInviteWithNewNonce",
          "outputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_name",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_version",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_chainid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_verifyingContract",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getDigestWithEIP712Domain",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimistInviter",
          "outputs": [
            {
              "internalType": "contract OptimistInviter",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "consumeNonce()": {
            "returns": {
              "_0": "Nonce that should be used as part of ClaimableInvite."
            }
          },
          "getClaimableInviteStructHash((address,bytes32))": {
            "params": {
              "_claimableInvite": "ClaimableInvite struct to hash."
            },
            "returns": {
              "_0": "EIP-712 typed struct hash."
            }
          },
          "getClaimableInviteWithNewNonce(address)": {
            "params": {
              "_issuer": "Issuer to include in the ClaimableInvite."
            },
            "returns": {
              "_0": "ClaimableInvite that can be hashed & signed."
            }
          },
          "getDigest((address,bytes32))": {
            "params": {
              "_claimableInvite": "ClaimableInvite struct to hash."
            },
            "returns": {
              "_0": "EIP-712 compatible digest."
            }
          },
          "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
            "params": {
              "_chainid": "Chain ID to use in the EIP712 domain.",
              "_claimableInvite": "ClaimableInvite struct to hash.",
              "_name": "Contract name to use in the EIP712 domain.",
              "_verifyingContract": "Address to use in the EIP712 domain.",
              "_version": "Contract version to use in the EIP712 domain."
            },
            "returns": {
              "_0": "EIP-712 compatible digest."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CLAIMABLE_INVITE_TYPEHASH()": {
            "notice": "EIP712 typehash for the ClaimableInvite type."
          },
          "EIP712_DOMAIN_TYPEHASH()": {
            "notice": "EIP712 typehash for the EIP712Domain type that is included as part of the signature."
          },
          "consumeNonce()": {
            "notice": "Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."
          },
          "currentNonce()": {
            "notice": "Keeps track of current nonce to generate new nonces for each invite."
          },
          "getClaimableInviteStructHash((address,bytes32))": {
            "notice": "Returns the hash of the struct ClaimableInvite."
          },
          "getClaimableInviteWithNewNonce(address)": {
            "notice": "Returns a ClaimableInvite with the issuer and current nonce."
          },
          "getDigest((address,bytes32))": {
            "notice": "Computes the EIP712 digest with default correct parameters."
          },
          "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
            "notice": "Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."
          },
          "name()": {
            "notice": "OptimistInviter contract name. Used to construct the EIP-712 domain."
          },
          "optimistInviter()": {
            "notice": "Address of OptimistInviter contract we are testing."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/Helpers.sol": "OptimistInviterHelper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x589fc5a5073da3564896a08bb7d719ffd1cb79a79fdb9b298669c719b7843637",
        "urls": [
          "bzz-raw://17e7c665cd88a50dbe86bda89198e598f2dbf00b8605c5de999f2a73e84dc016",
          "dweb:/ipfs/Qmc6nHb2TUPeKYavwdMrM1AhkaRFAaMNEz58wfnfHhkkyx"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f",
        "urls": [
          "bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3",
          "dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef",
        "urls": [
          "bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33",
          "dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/OptimistInviter.sol": {
        "keccak256": "0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55",
        "urls": [
          "bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2",
          "dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c",
        "urls": [
          "bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268",
          "dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "test/Helpers.sol": {
        "keccak256": "0x25f35581abdd3645dc0fa0dd9f4738f263a017b09406ca0246425d6b8faa5288",
        "urls": [
          "bzz-raw://50ab3423d93cb48f19236cdcf9d680f5756aa75d3ab3900d1ca442156f063e61",
          "dweb:/ipfs/Qmctn4f3GFBPbxRzsQJm276GMNdixRGyGgu9rAVBbeQDGj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 98577,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "optimistInviter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(OptimistInviter)74857"
      },
      {
        "astId": 98580,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 98583,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "currentNonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(OptimistInviter)74857": {
        "encoding": "inplace",
        "label": "contract OptimistInviter",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "CLAIMABLE_INVITE_TYPEHASH()": {
        "notice": "EIP712 typehash for the ClaimableInvite type."
      },
      "EIP712_DOMAIN_TYPEHASH()": {
        "notice": "EIP712 typehash for the EIP712Domain type that is included as part of the signature."
      },
      "consumeNonce()": {
        "notice": "Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."
      },
      "currentNonce()": {
        "notice": "Keeps track of current nonce to generate new nonces for each invite."
      },
      "getClaimableInviteStructHash((address,bytes32))": {
        "notice": "Returns the hash of the struct ClaimableInvite."
      },
      "getClaimableInviteWithNewNonce(address)": {
        "notice": "Returns a ClaimableInvite with the issuer and current nonce."
      },
      "getDigest((address,bytes32))": {
        "notice": "Computes the EIP712 digest with default correct parameters."
      },
      "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
        "notice": "Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."
      },
      "name()": {
        "notice": "OptimistInviter contract name. Used to construct the EIP-712 domain."
      },
      "optimistInviter()": {
        "notice": "Address of OptimistInviter contract we are testing."
      }
    },
    "notice": "Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "consumeNonce()": {
        "returns": {
          "_0": "Nonce that should be used as part of ClaimableInvite."
        }
      },
      "getClaimableInviteStructHash((address,bytes32))": {
        "params": {
          "_claimableInvite": "ClaimableInvite struct to hash."
        },
        "returns": {
          "_0": "EIP-712 typed struct hash."
        }
      },
      "getClaimableInviteWithNewNonce(address)": {
        "params": {
          "_issuer": "Issuer to include in the ClaimableInvite."
        },
        "returns": {
          "_0": "ClaimableInvite that can be hashed & signed."
        }
      },
      "getDigest((address,bytes32))": {
        "params": {
          "_claimableInvite": "ClaimableInvite struct to hash."
        },
        "returns": {
          "_0": "EIP-712 compatible digest."
        }
      },
      "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
        "params": {
          "_chainid": "Chain ID to use in the EIP712 domain.",
          "_claimableInvite": "ClaimableInvite struct to hash.",
          "_name": "Contract name to use in the EIP712 domain.",
          "_verifyingContract": "Address to use in the EIP712 domain.",
          "_version": "Contract version to use in the EIP712 domain."
        },
        "returns": {
          "_0": "EIP-712 compatible digest."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "test/Helpers.sol",
    "id": 98876,
    "exportedSymbols": {
      "AdminFaucetAuthModule": [
        73946
      ],
      "CallRecorder": [
        98520
      ],
      "ECDSA": [
        36545
      ],
      "ECDSAUpgradeable": [
        31682
      ],
      "ERC20": [
        42598
      ],
      "ERC721": [
        43142
      ],
      "FaucetHelper": [
        98875
      ],
      "IERC1271": [
        32093
      ],
      "OptimistInviter": [
        74857
      ],
      "OptimistInviterHelper": [
        98730
      ],
      "Ownable": [
        32001
      ],
      "Reverter": [
        98529
      ],
      "SimpleStorage": [
        98560
      ],
      "TestERC1271Wallet": [
        98774
      ],
      "TestERC20": [
        98442
      ],
      "TestERC721": [
        98475
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9033:233",
    "nodes": [
      {
        "id": 98401,
        "nodeType": "PragmaDirective",
        "src": "32:23:233",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 98403,
        "nodeType": "ImportDirective",
        "src": "57:67:233",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 42599,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98402,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42598,
              "src": "66:5:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98405,
        "nodeType": "ImportDirective",
        "src": "125:69:233",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "@rari-capital/solmate/src/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 43163,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98404,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43142,
              "src": "134:6:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98407,
        "nodeType": "ImportDirective",
        "src": "195:77:233",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 36546,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98406,
              "name": "ECDSA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36545,
              "src": "204:5:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98409,
        "nodeType": "ImportDirective",
        "src": "273:78:233",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/OptimistInviter.sol",
        "file": "../src/periphery/op-nft/OptimistInviter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 74858,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98408,
              "name": "OptimistInviter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74857,
              "src": "282:15:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98411,
        "nodeType": "ImportDirective",
        "src": "352:75:233",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 32094,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98410,
              "name": "IERC1271",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32093,
              "src": "361:8:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98413,
        "nodeType": "ImportDirective",
        "src": "428:69:233",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 32002,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98412,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32001,
              "src": "437:7:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98415,
        "nodeType": "ImportDirective",
        "src": "498:111:233",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 31683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98414,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31682,
              "src": "507:16:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98417,
        "nodeType": "ImportDirective",
        "src": "610:102:233",
        "nodes": [],
        "absolutePath": "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol",
        "file": "../src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 98876,
        "sourceUnit": 73947,
        "symbolAliases": [
          {
            "foreign": {
              "id": 98416,
              "name": "AdminFaucetAuthModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73946,
              "src": "619:21:233",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 98442,
        "nodeType": "ContractDefinition",
        "src": "714:165:233",
        "nodes": [
          {
            "id": 98428,
            "nodeType": "FunctionDefinition",
            "src": "748:42:233",
            "nodes": [],
            "body": {
              "id": 98427,
              "nodeType": "Block",
              "src": "787:3:233",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54455354",
                    "id": 98422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "768:6:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  },
                  {
                    "hexValue": "545354",
                    "id": 98423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "776:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  },
                  {
                    "hexValue": "3138",
                    "id": 98424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "783:2:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 98425,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 98421,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42598,
                  "src": "762:5:233"
                },
                "nodeType": "ModifierInvocation",
                "src": "762:24:233"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:2:233"
            },
            "returnParameters": {
              "id": 98426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:0:233"
            },
            "scope": 98442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98441,
            "nodeType": "FunctionDefinition",
            "src": "796:81:233",
            "nodes": [],
            "body": {
              "id": 98440,
              "nodeType": "Block",
              "src": "844:33:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98436,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98430,
                        "src": "860:2:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98437,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98432,
                        "src": "864:5:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98435,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42569,
                      "src": "854:5:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:16:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98439,
                  "nodeType": "ExpressionStatement",
                  "src": "854:16:233"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "805:4:233",
            "parameters": {
              "id": 98433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98430,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "818:2:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98441,
                  "src": "810:10:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98432,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "830:5:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98441,
                  "src": "822:13:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:27:233"
            },
            "returnParameters": {
              "id": 98434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:233"
            },
            "scope": 98442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98418,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42598,
              "src": "736:5:233"
            },
            "id": 98419,
            "nodeType": "InheritanceSpecifier",
            "src": "736:5:233"
          }
        ],
        "canonicalName": "TestERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98442,
          42598
        ],
        "name": "TestERC20",
        "nameLocation": "723:9:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98475,
        "nodeType": "ContractDefinition",
        "src": "881:257:233",
        "nodes": [
          {
            "id": 98452,
            "nodeType": "FunctionDefinition",
            "src": "917:39:233",
            "nodes": [],
            "body": {
              "id": 98451,
              "nodeType": "Block",
              "src": "953:3:233",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54455354",
                    "id": 98447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "938:6:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  },
                  {
                    "hexValue": "545354",
                    "id": 98448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  }
                ],
                "id": 98449,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 98446,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43142,
                  "src": "931:6:233"
                },
                "nodeType": "ModifierInvocation",
                "src": "931:21:233"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:2:233"
            },
            "returnParameters": {
              "id": 98450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:233"
            },
            "scope": 98475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98465,
            "nodeType": "FunctionDefinition",
            "src": "962:85:233",
            "nodes": [],
            "body": {
              "id": 98464,
              "nodeType": "Block",
              "src": "1012:35:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98454,
                        "src": "1028:2:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98461,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98456,
                        "src": "1032:7:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98459,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43012,
                      "src": "1022:5:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:18:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98463,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:18:233"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "971:4:233",
            "parameters": {
              "id": 98457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98454,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "984:2:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98465,
                  "src": "976:10:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98456,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "996:7:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98465,
                  "src": "988:15:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:29:233"
            },
            "returnParameters": {
              "id": 98458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:233"
            },
            "scope": 98475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98474,
            "nodeType": "FunctionDefinition",
            "src": "1053:83:233",
            "nodes": [],
            "body": {
              "id": 98473,
              "nodeType": "Block",
              "src": "1133:3:233",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              42636
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1062:8:233",
            "overrides": {
              "id": 98469,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1100:8:233"
            },
            "parameters": {
              "id": 98468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98467,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98474,
                  "src": "1071:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:9:233"
            },
            "returnParameters": {
              "id": 98472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98474,
                  "src": "1118:13:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:6:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:15:233"
            },
            "scope": 98475,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98443,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43142,
              "src": "904:6:233"
            },
            "id": 98444,
            "nodeType": "InheritanceSpecifier",
            "src": "904:6:233"
          }
        ],
        "canonicalName": "TestERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98475,
          43142
        ],
        "name": "TestERC721",
        "nameLocation": "890:10:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98520,
        "nodeType": "ContractDefinition",
        "src": "1140:360:233",
        "nodes": [
          {
            "id": 98484,
            "nodeType": "StructDefinition",
            "src": "1168:111:233",
            "nodes": [],
            "canonicalName": "CallRecorder.CallInfo",
            "members": [
              {
                "constant": false,
                "id": 98477,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1202:6:233",
                "nodeType": "VariableDeclaration",
                "scope": 98484,
                "src": "1194:14:233",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 98476,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1194:7:233",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98479,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1224:4:233",
                "nodeType": "VariableDeclaration",
                "scope": 98484,
                "src": "1218:10:233",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 98478,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1218:5:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98481,
                "mutability": "mutable",
                "name": "gas",
                "nameLocation": "1246:3:233",
                "nodeType": "VariableDeclaration",
                "scope": 98484,
                "src": "1238:11:233",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98480,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1238:7:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98483,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1267:5:233",
                "nodeType": "VariableDeclaration",
                "scope": 98484,
                "src": "1259:13:233",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98482,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:7:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CallInfo",
            "nameLocation": "1175:8:233",
            "scope": 98520,
            "visibility": "public"
          },
          {
            "id": 98487,
            "nodeType": "VariableDeclaration",
            "src": "1285:24:233",
            "nodes": [],
            "constant": false,
            "functionSelector": "da516aa9",
            "mutability": "mutable",
            "name": "lastCall",
            "nameLocation": "1301:8:233",
            "scope": 98520,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_CallInfo_$98484_storage",
              "typeString": "struct CallRecorder.CallInfo"
            },
            "typeName": {
              "id": 98486,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 98485,
                "name": "CallInfo",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 98484,
                "src": "1285:8:233"
              },
              "referencedDeclaration": 98484,
              "src": "1285:8:233",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_CallInfo_$98484_storage_ptr",
                "typeString": "struct CallRecorder.CallInfo"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98519,
            "nodeType": "FunctionDefinition",
            "src": "1316:182:233",
            "nodes": [],
            "body": {
              "id": 98518,
              "nodeType": "Block",
              "src": "1349:149:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 98495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98490,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98487,
                        "src": "1359:8:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$98484_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 98492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98477,
                      "src": "1359:15:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 98493,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1377:3:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 98494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1377:10:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1359:28:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 98496,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:28:233"
                },
                {
                  "expression": {
                    "id": 98502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98497,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98487,
                        "src": "1397:8:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$98484_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 98499,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98479,
                      "src": "1397:13:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 98500,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1413:3:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 98501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "src": "1413:8:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "1397:24:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 98503,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:24:233"
                },
                {
                  "expression": {
                    "id": 98509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98504,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98487,
                        "src": "1431:8:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$98484_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 98506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98481,
                      "src": "1431:12:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 98507,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "1446:7:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 98508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1446:9:233",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1431:24:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98510,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:24:233"
                },
                {
                  "expression": {
                    "id": 98516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98511,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98487,
                        "src": "1465:8:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$98484_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 98513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98483,
                      "src": "1465:14:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 98514,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1482:3:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 98515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1482:9:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:26:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98517,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:26:233"
                }
              ]
            },
            "functionSelector": "266cf109",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "record",
            "nameLocation": "1325:6:233",
            "parameters": {
              "id": 98488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:2:233"
            },
            "returnParameters": {
              "id": 98489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1349:0:233"
            },
            "scope": 98520,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CallRecorder",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98520
        ],
        "name": "CallRecorder",
        "nameLocation": "1149:12:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98529,
        "nodeType": "ContractDefinition",
        "src": "1502:102:233",
        "nodes": [
          {
            "id": 98528,
            "nodeType": "FunctionDefinition",
            "src": "1526:76:233",
            "nodes": [],
            "body": {
              "id": 98527,
              "nodeType": "Block",
              "src": "1558:44:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265766572746572207265766572746564",
                        "id": 98524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1575:19:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        },
                        "value": "Reverter reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        }
                      ],
                      "id": 98523,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1568:6:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 98525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:27:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98526,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:27:233"
                }
              ]
            },
            "functionSelector": "afc874d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doRevert",
            "nameLocation": "1535:8:233",
            "parameters": {
              "id": 98521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1543:2:233"
            },
            "returnParameters": {
              "id": 98522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:0:233"
            },
            "scope": 98529,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Reverter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98529
        ],
        "name": "Reverter",
        "nameLocation": "1511:8:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98560,
        "nodeType": "ContractDefinition",
        "src": "1606:262:233",
        "nodes": [
          {
            "id": 98533,
            "nodeType": "VariableDeclaration",
            "src": "1635:37:233",
            "nodes": [],
            "constant": false,
            "functionSelector": "ecf265bc",
            "mutability": "mutable",
            "name": "db",
            "nameLocation": "1670:2:233",
            "scope": 98560,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 98532,
              "keyType": {
                "id": 98530,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1643:7:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1635:27:233",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 98531,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1654:7:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 98547,
            "nodeType": "FunctionDefinition",
            "src": "1679:92:233",
            "nodes": [],
            "body": {
              "id": 98546,
              "nodeType": "Block",
              "src": "1737:34:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 98544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 98540,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98533,
                        "src": "1747:2:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 98542,
                      "indexExpression": {
                        "id": 98541,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98535,
                        "src": "1750:4:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1747:8:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98543,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98537,
                      "src": "1758:6:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1747:17:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 98545,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:17:233"
                }
              ]
            },
            "functionSelector": "f71f7a25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1688:3:233",
            "parameters": {
              "id": 98538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98535,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1700:4:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98547,
                  "src": "1692:12:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98534,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98537,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1714:6:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98547,
                  "src": "1706:14:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98536,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:30:233"
            },
            "returnParameters": {
              "id": 98539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:233"
            },
            "scope": 98560,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98559,
            "nodeType": "FunctionDefinition",
            "src": "1777:89:233",
            "nodes": [],
            "body": {
              "id": 98558,
              "nodeType": "Block",
              "src": "1834:32:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 98554,
                      "name": "db",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98533,
                      "src": "1851:2:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                        "typeString": "mapping(bytes32 => bytes32)"
                      }
                    },
                    "id": 98556,
                    "indexExpression": {
                      "id": 98555,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98549,
                      "src": "1854:4:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1851:8:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98553,
                  "id": 98557,
                  "nodeType": "Return",
                  "src": "1844:15:233"
                }
              ]
            },
            "functionSelector": "8eaa6ac0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nameLocation": "1786:3:233",
            "parameters": {
              "id": 98550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98549,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1798:4:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98559,
                  "src": "1790:12:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1789:14:233"
            },
            "returnParameters": {
              "id": 98553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98559,
                  "src": "1825:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98551,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:9:233"
            },
            "scope": 98560,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98560
        ],
        "name": "SimpleStorage",
        "nameLocation": "1615:13:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98730,
        "nodeType": "ContractDefinition",
        "src": "2095:3808:233",
        "nodes": [
          {
            "id": 98567,
            "nodeType": "VariableDeclaration",
            "src": "2194:110:233",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98562,
              "nodeType": "StructuredDocumentation",
              "src": "2132:57:233",
              "text": "@notice EIP712 typehash for the ClaimableInvite type."
            },
            "functionSelector": "c4fc453d",
            "mutability": "constant",
            "name": "CLAIMABLE_INVITE_TYPEHASH",
            "nameLocation": "2218:25:233",
            "scope": 98730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98563,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2194:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "436c61696d61626c65496e766974652861646472657373206973737565722c62797465733332206e6f6e636529",
                  "id": 98565,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2256:47:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce",
                    "typeString": "literal_string \"ClaimableInvite(address issuer,bytes32 nonce)\""
                  },
                  "value": "ClaimableInvite(address issuer,bytes32 nonce)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce",
                    "typeString": "literal_string \"ClaimableInvite(address issuer,bytes32 nonce)\""
                  }
                ],
                "id": 98564,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2246:9:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98566,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2246:58:233",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98573,
            "nodeType": "VariableDeclaration",
            "src": "2412:152:233",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98568,
              "nodeType": "StructuredDocumentation",
              "src": "2311:96:233",
              "text": "@notice EIP712 typehash for the EIP712Domain type that is included as part of the signature."
            },
            "functionSelector": "c7977be7",
            "mutability": "constant",
            "name": "EIP712_DOMAIN_TYPEHASH",
            "nameLocation": "2436:22:233",
            "scope": 98730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98569,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2412:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 98571,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2479:84:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 98570,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2469:9:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98572,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2469:95:233",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98577,
            "nodeType": "VariableDeclaration",
            "src": "2639:38:233",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98574,
              "nodeType": "StructuredDocumentation",
              "src": "2571:63:233",
              "text": "@notice Address of OptimistInviter contract we are testing."
            },
            "functionSelector": "d1829907",
            "mutability": "mutable",
            "name": "optimistInviter",
            "nameLocation": "2662:15:233",
            "scope": 98730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviter_$74857",
              "typeString": "contract OptimistInviter"
            },
            "typeName": {
              "id": 98576,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 98575,
                "name": "OptimistInviter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74857,
                "src": "2639:15:233"
              },
              "referencedDeclaration": 74857,
              "src": "2639:15:233",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                "typeString": "contract OptimistInviter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98580,
            "nodeType": "VariableDeclaration",
            "src": "2769:18:233",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98578,
              "nodeType": "StructuredDocumentation",
              "src": "2684:80:233",
              "text": "@notice OptimistInviter contract name. Used to construct the EIP-712 domain."
            },
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2783:4:233",
            "scope": 98730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 98579,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2769:6:233",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98583,
            "nodeType": "VariableDeclaration",
            "src": "2879:27:233",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98581,
              "nodeType": "StructuredDocumentation",
              "src": "2794:80:233",
              "text": "@notice Keeps track of current nonce to generate new nonces for each invite."
            },
            "functionSelector": "adb610a3",
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "2894:12:233",
            "scope": 98730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98582,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2879:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98600,
            "nodeType": "FunctionDefinition",
            "src": "2913:140:233",
            "nodes": [],
            "body": {
              "id": 98599,
              "nodeType": "Block",
              "src": "2980:73:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 98593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98591,
                      "name": "optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98577,
                      "src": "2990:15:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98592,
                      "name": "_optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98586,
                      "src": "3008:16:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "src": "2990:34:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "id": 98594,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:34:233"
                },
                {
                  "expression": {
                    "id": 98597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98595,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98580,
                      "src": "3034:4:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98596,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98588,
                      "src": "3041:5:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3034:12:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 98598,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:12:233"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98586,
                  "mutability": "mutable",
                  "name": "_optimistInviter",
                  "nameLocation": "2941:16:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98600,
                  "src": "2925:32:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                    "typeString": "contract OptimistInviter"
                  },
                  "typeName": {
                    "id": 98585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98584,
                      "name": "OptimistInviter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74857,
                      "src": "2925:15:233"
                    },
                    "referencedDeclaration": 74857,
                    "src": "2925:15:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98588,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2973:5:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98600,
                  "src": "2959:19:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98587,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:6:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2924:55:233"
            },
            "returnParameters": {
              "id": 98590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:0:233"
            },
            "scope": 98730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98621,
            "nodeType": "FunctionDefinition",
            "src": "3230:274:233",
            "nodes": [],
            "body": {
              "id": 98620,
              "nodeType": "Block",
              "src": "3383:121:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98612,
                            "name": "CLAIMABLE_INVITE_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98567,
                            "src": "3421:25:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 98613,
                              "name": "_claimableInvite",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98604,
                              "src": "3448:16:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableInvite_$74575_memory_ptr",
                                "typeString": "struct OptimistInviter.ClaimableInvite memory"
                              }
                            },
                            "id": 98614,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issuer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74572,
                            "src": "3448:23:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 98615,
                              "name": "_claimableInvite",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98604,
                              "src": "3473:16:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableInvite_$74575_memory_ptr",
                                "typeString": "struct OptimistInviter.ClaimableInvite memory"
                              }
                            },
                            "id": 98616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74574,
                            "src": "3473:22:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 98610,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3410:3:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3410:10:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 98617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3410:86:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 98609,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3400:9:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 98618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:97:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98608,
                  "id": 98619,
                  "nodeType": "Return",
                  "src": "3393:104:233"
                }
              ]
            },
            "documentation": {
              "id": 98601,
              "nodeType": "StructuredDocumentation",
              "src": "3059:166:233",
              "text": "@notice Returns the hash of the struct ClaimableInvite.\n @param _claimableInvite ClaimableInvite struct to hash.\n @return EIP-712 typed struct hash."
            },
            "functionSelector": "eb1df626",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableInviteStructHash",
            "nameLocation": "3239:28:233",
            "parameters": {
              "id": 98605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98604,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "3307:16:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98621,
                  "src": "3268:55:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$74575_memory_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 98603,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98602,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74575,
                      "src": "3268:31:233"
                    },
                    "referencedDeclaration": 74575,
                    "src": "3268:31:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$74575_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3267:57:233"
            },
            "returnParameters": {
              "id": 98608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98621,
                  "src": "3370:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98606,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:9:233"
            },
            "scope": 98730,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98639,
            "nodeType": "FunctionDefinition",
            "src": "3718:119:233",
            "nodes": [],
            "body": {
              "id": 98638,
              "nodeType": "Block",
              "src": "3767:70:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3813:14:233",
                                "subExpression": {
                                  "id": 98632,
                                  "name": "currentNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98583,
                                  "src": "3813:12:233",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 98630,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3802:3:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 98631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "3802:10:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 98634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3802:26:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 98629,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3792:9:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 98635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:37:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 98628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3784:7:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 98627,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3784:7:233",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 98636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:46:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98626,
                  "id": 98637,
                  "nodeType": "Return",
                  "src": "3777:53:233"
                }
              ]
            },
            "documentation": {
              "id": 98622,
              "nodeType": "StructuredDocumentation",
              "src": "3510:203:233",
              "text": "@notice Returns a bytes32 nonce that should change everytime. In practice, people should use\n         pseudorandom nonces.\n @return Nonce that should be used as part of ClaimableInvite."
            },
            "functionSelector": "34b15118",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consumeNonce",
            "nameLocation": "3727:12:233",
            "parameters": {
              "id": 98623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3739:2:233"
            },
            "returnParameters": {
              "id": 98626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98639,
                  "src": "3758:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98624,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3757:9:233"
            },
            "scope": 98730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98656,
            "nodeType": "FunctionDefinition",
            "src": "4046:193:233",
            "nodes": [],
            "body": {
              "id": 98655,
              "nodeType": "Block",
              "src": "4159:80:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98650,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98642,
                        "src": "4208:7:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 98651,
                          "name": "consumeNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98639,
                          "src": "4217:12:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                            "typeString": "function () returns (bytes32)"
                          }
                        },
                        "id": 98652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4217:14:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 98648,
                        "name": "OptimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74857,
                        "src": "4176:15:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimistInviter_$74857_$",
                          "typeString": "type(contract OptimistInviter)"
                        }
                      },
                      "id": 98649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ClaimableInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74575,
                      "src": "4176:31:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ClaimableInvite_$74575_storage_ptr_$",
                        "typeString": "type(struct OptimistInviter.ClaimableInvite storage pointer)"
                      }
                    },
                    "id": 98653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4176:56:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$74575_memory_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite memory"
                    }
                  },
                  "functionReturnParameters": 98647,
                  "id": 98654,
                  "nodeType": "Return",
                  "src": "4169:63:233"
                }
              ]
            },
            "documentation": {
              "id": 98640,
              "nodeType": "StructuredDocumentation",
              "src": "3843:198:233",
              "text": "@notice Returns a ClaimableInvite with the issuer and current nonce.\n @param _issuer Issuer to include in the ClaimableInvite.\n @return ClaimableInvite that can be hashed & signed."
            },
            "functionSelector": "8ebe24e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableInviteWithNewNonce",
            "nameLocation": "4055:30:233",
            "parameters": {
              "id": 98643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98642,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "4094:7:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98656,
                  "src": "4086:15:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4086:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4085:17:233"
            },
            "returnParameters": {
              "id": 98647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98646,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98656,
                  "src": "4119:38:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$74575_memory_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 98645,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98644,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74575,
                      "src": "4119:31:233"
                    },
                    "referencedDeclaration": 74575,
                    "src": "4119:31:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$74575_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4118:40:233"
            },
            "scope": 98730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98686,
            "nodeType": "FunctionDefinition",
            "src": "4428:340:233",
            "nodes": [],
            "body": {
              "id": 98685,
              "nodeType": "Block",
              "src": "4536:232:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98666,
                        "name": "_claimableInvite",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98660,
                        "src": "4592:16:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98669,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98580,
                            "src": "4628:4:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 98668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4622:5:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 98667,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4622:5:233",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:11:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 98673,
                                "name": "optimistInviter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98577,
                                "src": "4653:15:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                                  "typeString": "contract OptimistInviter"
                                }
                              },
                              "id": 98674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "EIP712_VERSION",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74546,
                              "src": "4653:30:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 98675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4653:32:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 98672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4647:5:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 98671,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4647:5:233",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4647:39:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 98677,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4700:5:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 98678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "4700:13:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98681,
                            "name": "optimistInviter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98577,
                            "src": "4735:15:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                              "typeString": "contract OptimistInviter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimistInviter_$74857",
                              "typeString": "contract OptimistInviter"
                            }
                          ],
                          "id": 98680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4727:7:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4727:7:233",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4727:24:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98665,
                      "name": "getDigestWithEIP712Domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98729,
                      "src": "4553:25:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ClaimableInvite_$74575_calldata_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (struct OptimistInviter.ClaimableInvite calldata,bytes memory,bytes memory,uint256,address) pure returns (bytes32)"
                      }
                    },
                    "id": 98683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4553:208:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98664,
                  "id": 98684,
                  "nodeType": "Return",
                  "src": "4546:215:233"
                }
              ]
            },
            "documentation": {
              "id": 98657,
              "nodeType": "StructuredDocumentation",
              "src": "4245:178:233",
              "text": "@notice Computes the EIP712 digest with default correct parameters.\n @param _claimableInvite ClaimableInvite struct to hash.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "1c6e7f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigest",
            "nameLocation": "4437:9:233",
            "parameters": {
              "id": 98661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98660,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "4488:16:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98686,
                  "src": "4447:57:233",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 98659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98658,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74575,
                      "src": "4447:31:233"
                    },
                    "referencedDeclaration": 74575,
                    "src": "4447:31:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$74575_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4446:59:233"
            },
            "returnParameters": {
              "id": 98664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98686,
                  "src": "4527:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98662,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4527:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4526:9:233"
            },
            "scope": 98730,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98729,
            "nodeType": "FunctionDefinition",
            "src": "5332:569:233",
            "nodes": [],
            "body": {
              "id": 98728,
              "nodeType": "Block",
              "src": "5619:282:233",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98704,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "5637:15:233",
                      "nodeType": "VariableDeclaration",
                      "scope": 98728,
                      "src": "5629:23:233",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 98703,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5629:7:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98708,
                            "name": "EIP712_DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98573,
                            "src": "5689:22:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98710,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98692,
                                "src": "5723:5:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 98709,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5713:9:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 98711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5713:16:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98713,
                                "name": "_version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98694,
                                "src": "5741:8:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 98712,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5731:9:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 98714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5731:19:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 98715,
                            "name": "_chainid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98696,
                            "src": "5752:8:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 98716,
                            "name": "_verifyingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98698,
                            "src": "5762:18:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98706,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5678:3:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5678:10:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 98717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5678:103:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 98705,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5655:9:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 98718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5655:136:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5629:162:233"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98722,
                        "name": "domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98704,
                        "src": "5830:15:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98724,
                            "name": "_claimableInvite",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98690,
                            "src": "5876:16:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                            }
                          ],
                          "id": 98723,
                          "name": "getClaimableInviteStructHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98621,
                          "src": "5847:28:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ClaimableInvite_$74575_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct OptimistInviter.ClaimableInvite memory) pure returns (bytes32)"
                          }
                        },
                        "id": 98725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5847:46:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 98720,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36545,
                        "src": "5808:5:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$36545_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 98721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toTypedDataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36544,
                      "src": "5808:21:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 98726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5808:86:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98702,
                  "id": 98727,
                  "nodeType": "Return",
                  "src": "5801:93:233"
                }
              ]
            },
            "documentation": {
              "id": 98687,
              "nodeType": "StructuredDocumentation",
              "src": "4774:553:233",
              "text": "@notice Computes the EIP712 digest with the given domain parameters.\n         Used for testing that different domain parameters fail.\n @param _claimableInvite   ClaimableInvite struct to hash.\n @param _name              Contract name to use in the EIP712 domain.\n @param _version           Contract version to use in the EIP712 domain.\n @param _chainid           Chain ID to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "019a4f49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigestWithEIP712Domain",
            "nameLocation": "5341:25:233",
            "parameters": {
              "id": 98699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98690,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "5417:16:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5376:57:233",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$74575_calldata_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 98689,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98688,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74575,
                      "src": "5376:31:233"
                    },
                    "referencedDeclaration": 74575,
                    "src": "5376:31:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$74575_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98692,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5456:5:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5443:18:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98691,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5443:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98694,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "5484:8:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5471:21:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98693,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98696,
                  "mutability": "mutable",
                  "name": "_chainid",
                  "nameLocation": "5510:8:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5502:16:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5502:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98698,
                  "mutability": "mutable",
                  "name": "_verifyingContract",
                  "nameLocation": "5536:18:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5528:26:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5528:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5366:194:233"
            },
            "returnParameters": {
              "id": 98702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98729,
                  "src": "5606:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98700,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5606:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5605:9:233"
            },
            "scope": 98730,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OptimistInviterHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 98561,
          "nodeType": "StructuredDocumentation",
          "src": "1870:225:233",
          "text": "@notice Simple helper contract that helps with testing flow and signature for\n         OptimistInviter contract. Made this a separate contract instead of including\n         in OptimistInviter.t.sol for reusability."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98730
        ],
        "name": "OptimistInviterHelper",
        "nameLocation": "2104:21:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98774,
        "nodeType": "ContractDefinition",
        "src": "6125:369:233",
        "nodes": [
          {
            "id": 98745,
            "nodeType": "FunctionDefinition",
            "src": "6179:84:233",
            "nodes": [],
            "body": {
              "id": 98744,
              "nodeType": "Block",
              "src": "6214:49:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98741,
                        "name": "originalOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98737,
                        "src": "6242:13:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98740,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31980,
                      "src": "6224:17:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 98742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6224:32:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98743,
                  "nodeType": "ExpressionStatement",
                  "src": "6224:32:233"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98737,
                  "mutability": "mutable",
                  "name": "originalOwner",
                  "nameLocation": "6199:13:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98745,
                  "src": "6191:21:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6190:23:233"
            },
            "returnParameters": {
              "id": 98739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6214:0:233"
            },
            "scope": 98774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98773,
            "nodeType": "FunctionDefinition",
            "src": "6269:223:233",
            "nodes": [],
            "body": {
              "id": 98772,
              "nodeType": "Block",
              "src": "6382:110:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 98762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 98757,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98747,
                            "src": "6413:4:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 98758,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98749,
                            "src": "6419:9:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 98755,
                            "name": "ECDSA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36545,
                            "src": "6399:5:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ECDSA_$36545_$",
                              "typeString": "type(library ECDSA)"
                            }
                          },
                          "id": 98756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recover",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36294,
                          "src": "6399:13:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory) pure returns (address)"
                          }
                        },
                        "id": 98759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6399:30:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 98760,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31929,
                          "src": "6433:5:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 98761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6433:7:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6399:41:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6483:1:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6476:6:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        },
                        "typeName": {
                          "id": 98766,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6476:6:233",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6476:9:233",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 98770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6399:86:233",
                    "trueExpression": {
                      "expression": {
                        "expression": {
                          "id": 98763,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6443:4:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC1271Wallet_$98774",
                            "typeString": "contract TestERC1271Wallet"
                          }
                        },
                        "id": 98764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValidSignature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98773,
                        "src": "6443:21:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                        }
                      },
                      "id": 98765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "6443:30:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 98754,
                  "id": 98771,
                  "nodeType": "Return",
                  "src": "6392:93:233"
                }
              ]
            },
            "baseFunctions": [
              32092
            ],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "6278:16:233",
            "overrides": {
              "id": 98751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6345:8:233"
            },
            "parameters": {
              "id": 98750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98747,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "6303:4:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98773,
                  "src": "6295:12:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98746,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6295:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98749,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "6322:9:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98773,
                  "src": "6309:22:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6309:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6294:38:233"
            },
            "returnParameters": {
              "id": 98754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98753,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "6370:10:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98773,
                  "src": "6363:17:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 98752,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:6:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6362:19:233"
            },
            "scope": 98774,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98732,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32001,
              "src": "6155:7:233"
            },
            "id": 98733,
            "nodeType": "InheritanceSpecifier",
            "src": "6155:7:233"
          },
          {
            "baseName": {
              "id": 98734,
              "name": "IERC1271",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32093,
              "src": "6164:8:233"
            },
            "id": 98735,
            "nodeType": "InheritanceSpecifier",
            "src": "6164:8:233"
          }
        ],
        "canonicalName": "TestERC1271Wallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 98731,
          "nodeType": "StructuredDocumentation",
          "src": "5905:220:233",
          "text": "@notice Simple ERC1271 wallet that can be used to test the ERC1271 signature checker.\n @notice https://github.com/OpenZeppelin/openzeppelin-contracts/\n         blob/master/contracts/mocks/ERC1271WalletMock.sol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98774,
          32093,
          32001,
          35857
        ],
        "name": "TestERC1271Wallet",
        "nameLocation": "6134:17:233",
        "scope": 98876,
        "usedErrors": []
      },
      {
        "id": 98875,
        "nodeType": "ContractDefinition",
        "src": "6576:2488:233",
        "nodes": [
          {
            "id": 98781,
            "nodeType": "VariableDeclaration",
            "src": "6656:103:233",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98776,
              "nodeType": "StructuredDocumentation",
              "src": "6604:47:233",
              "text": "@notice EIP712 typehash for the Proof type."
            },
            "functionSelector": "8b3e3bf6",
            "mutability": "constant",
            "name": "PROOF_TYPEHASH",
            "nameLocation": "6680:14:233",
            "scope": 98875,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98777,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6656:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50726f6f66286164647265737320726563697069656e742c62797465733332206e6f6e63652c6279746573333220696429",
                  "id": 98779,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6707:51:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  },
                  "value": "Proof(address recipient,bytes32 nonce,bytes32 id)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  }
                ],
                "id": 98778,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6697:9:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98780,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6697:62:233",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98787,
            "nodeType": "VariableDeclaration",
            "src": "6867:152:233",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 98782,
              "nodeType": "StructuredDocumentation",
              "src": "6766:96:233",
              "text": "@notice EIP712 typehash for the EIP712Domain type that is included as part of the signature."
            },
            "functionSelector": "c7977be7",
            "mutability": "constant",
            "name": "EIP712_DOMAIN_TYPEHASH",
            "nameLocation": "6891:22:233",
            "scope": 98875,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 98783,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6867:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 98785,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6934:84:233",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 98784,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6924:9:233",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 98786,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6924:95:233",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98790,
            "nodeType": "VariableDeclaration",
            "src": "7109:27:233",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 98788,
              "nodeType": "StructuredDocumentation",
              "src": "7026:78:233",
              "text": "@notice Keeps track of current nonce to generate new nonces for each drip."
            },
            "functionSelector": "adb610a3",
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "7124:12:233",
            "scope": 98875,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98789,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7109:7:233",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 98808,
            "nodeType": "FunctionDefinition",
            "src": "7351:119:233",
            "nodes": [],
            "body": {
              "id": 98807,
              "nodeType": "Block",
              "src": "7400:70:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "7446:14:233",
                                "subExpression": {
                                  "id": 98801,
                                  "name": "currentNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 98790,
                                  "src": "7446:12:233",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 98799,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7435:3:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 98800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "7435:10:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 98803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7435:26:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 98798,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7425:9:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 98804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7425:37:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 98797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7417:7:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 98796,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7417:7:233",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 98805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:46:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98795,
                  "id": 98806,
                  "nodeType": "Return",
                  "src": "7410:53:233"
                }
              ]
            },
            "documentation": {
              "id": 98791,
              "nodeType": "StructuredDocumentation",
              "src": "7143:203:233",
              "text": "@notice Returns a bytes32 nonce that should change everytime. In practice, people should use\n         pseudorandom nonces.\n @return Nonce that should be used as part of drip parameters."
            },
            "functionSelector": "34b15118",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consumeNonce",
            "nameLocation": "7360:12:233",
            "parameters": {
              "id": 98792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7372:2:233"
            },
            "returnParameters": {
              "id": 98795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98808,
                  "src": "7391:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98793,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7391:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7390:9:233"
            },
            "scope": 98875,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98831,
            "nodeType": "FunctionDefinition",
            "src": "7617:205:233",
            "nodes": [],
            "body": {
              "id": 98830,
              "nodeType": "Block",
              "src": "7718:104:233",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98820,
                            "name": "PROOF_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98781,
                            "src": "7756:14:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 98821,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98812,
                              "src": "7772:6:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 98822,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73886,
                            "src": "7772:16:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 98823,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98812,
                              "src": "7790:6:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 98824,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73888,
                            "src": "7790:12:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 98825,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98812,
                              "src": "7804:6:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 98826,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73890,
                            "src": "7804:9:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 98818,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7745:3:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7745:10:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 98827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7745:69:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 98817,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7735:9:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 98828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:80:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98816,
                  "id": 98829,
                  "nodeType": "Return",
                  "src": "7728:87:233"
                }
              ]
            },
            "documentation": {
              "id": 98809,
              "nodeType": "StructuredDocumentation",
              "src": "7476:136:233",
              "text": "@notice Returns the hash of the struct Proof.\n @param _proof Proof struct to hash.\n @return EIP-712 typed struct hash."
            },
            "functionSelector": "796dfbfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofStructHash",
            "nameLocation": "7626:18:233",
            "parameters": {
              "id": 98813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98812,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "7680:6:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98831,
                  "src": "7645:41:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                    "typeString": "struct AdminFaucetAuthModule.Proof"
                  },
                  "typeName": {
                    "id": 98811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98810,
                      "name": "AdminFaucetAuthModule.Proof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73891,
                      "src": "7645:27:233"
                    },
                    "referencedDeclaration": 73891,
                    "src": "7645:27:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$73891_storage_ptr",
                      "typeString": "struct AdminFaucetAuthModule.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7644:43:233"
            },
            "returnParameters": {
              "id": 98816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98831,
                  "src": "7709:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7709:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7708:9:233"
            },
            "scope": 98875,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98874,
            "nodeType": "FunctionDefinition",
            "src": "8518:544:233",
            "nodes": [],
            "body": {
              "id": 98873,
              "nodeType": "Block",
              "src": "8789:273:233",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98849,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "8807:15:233",
                      "nodeType": "VariableDeclaration",
                      "scope": 98873,
                      "src": "8799:23:233",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 98848,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8799:7:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98864,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98853,
                            "name": "EIP712_DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98787,
                            "src": "8859:22:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98855,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98837,
                                "src": "8893:5:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 98854,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8883:9:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 98856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8883:16:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98858,
                                "name": "_version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98839,
                                "src": "8911:8:233",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 98857,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8901:9:233",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 98859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8901:19:233",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 98860,
                            "name": "_chainid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98841,
                            "src": "8922:8:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 98861,
                            "name": "_verifyingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98843,
                            "src": "8932:18:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98851,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8848:3:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8848:10:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 98862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8848:103:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 98850,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8825:9:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 98863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8825:136:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8799:162:233"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98867,
                        "name": "domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98849,
                        "src": "9011:15:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98869,
                            "name": "_proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98835,
                            "src": "9047:6:233",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                              "typeString": "struct AdminFaucetAuthModule.Proof memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                              "typeString": "struct AdminFaucetAuthModule.Proof memory"
                            }
                          ],
                          "id": 98868,
                          "name": "getProofStructHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98831,
                          "src": "9028:18:233",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$73891_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct AdminFaucetAuthModule.Proof memory) pure returns (bytes32)"
                          }
                        },
                        "id": 98870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9028:26:233",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 98865,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31682,
                        "src": "8978:16:233",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$31682_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 98866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toTypedDataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31681,
                      "src": "8978:32:233",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 98871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8978:77:233",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 98847,
                  "id": 98872,
                  "nodeType": "Return",
                  "src": "8971:84:233"
                }
              ]
            },
            "documentation": {
              "id": 98832,
              "nodeType": "StructuredDocumentation",
              "src": "7828:685:233",
              "text": "@notice Computes the EIP712 digest with the given domain parameters.\n         Used for testing that different domain parameters fail.\n @param _proof             Proof struct to hash.\n @param _name              Contract name to use in the EIP712 domain.\n @param _version           Contract version to use in the EIP712 domain.\n @param _chainid           Chain ID to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "b163a6b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigestWithEIP712Domain",
            "nameLocation": "8527:25:233",
            "parameters": {
              "id": 98844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98835,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "8597:6:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8562:41:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$73891_memory_ptr",
                    "typeString": "struct AdminFaucetAuthModule.Proof"
                  },
                  "typeName": {
                    "id": 98834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98833,
                      "name": "AdminFaucetAuthModule.Proof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73891,
                      "src": "8562:27:233"
                    },
                    "referencedDeclaration": 73891,
                    "src": "8562:27:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$73891_storage_ptr",
                      "typeString": "struct AdminFaucetAuthModule.Proof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98837,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8626:5:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8613:18:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98836,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8613:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98839,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "8654:8:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8641:21:233",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98838,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:5:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98841,
                  "mutability": "mutable",
                  "name": "_chainid",
                  "nameLocation": "8680:8:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8672:16:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8672:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98843,
                  "mutability": "mutable",
                  "name": "_verifyingContract",
                  "nameLocation": "8706:18:233",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8698:26:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8698:7:233",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8552:178:233"
            },
            "returnParameters": {
              "id": 98847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98874,
                  "src": "8776:7:233",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98845,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:233",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8775:9:233"
            },
            "scope": 98875,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FaucetHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 98775,
          "nodeType": "StructuredDocumentation",
          "src": "6496:80:233",
          "text": "@notice Simple helper contract that helps with testing the Faucet contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          98875
        ],
        "name": "FaucetHelper",
        "nameLocation": "6585:12:233",
        "scope": 98876,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 233
}