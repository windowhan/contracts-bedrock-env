{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputeProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        }
      ],
      "name": "DisputeGameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        }
      ],
      "name": "ImplementationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "outputRoot",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "l2OutputIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "l2BlockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "l1Timestamp",
          "type": "uint256"
        }
      ],
      "name": "OutputProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prevNextOutputIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newNextOutputIndex",
          "type": "uint256"
        }
      ],
      "name": "OutputsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "opaqueData",
          "type": "bytes"
        }
      ],
      "name": "TransactionDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Claim",
          "name": "_claim",
          "type": "bytes32"
        },
        {
          "internalType": "VMStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "changeClaimStatus",
      "outputs": [
        {
          "internalType": "Claim",
          "name": "out_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposeAnotherOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "testFuzz_create_noImpl_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "testFuzz_create_sameUUID_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "testFuzz_create_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextBlockNumber",
          "type": "uint256"
        }
      ],
      "name": "warpToProposeTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60008054600160ff1991821681178355600480549092168117909155601b805460806001600160a01b03199182168117909255601c80546101009083168117909155601d80546102009316831790559184905260a092909252606460c05260e09290925261c350909152602061014052600861016052674e4f4e5f5a45524f60c01b610180526060610120527fced1f90d33a6ca7cfbe479a1c2415c4287f559420415e3188c786e36414529be601e5560405260226101a0818152906200ccc56101c039601f90620000d29082620001eb565b50602380546001600160a01b03199081167342000000000000000000000000000000000000161790915560248054821661abba1790556025805490911661acdc179055610708602655600260275560c86028556103e860295562093a80602a553480156200013f57600080fd5b50620002b7565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017157607f821691505b6020821081036200019257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e657600081815260208120601f850160051c81016020861015620001c15750805b601f850160051c820191505b81811015620001e257828155600101620001cd565b5050505b505050565b81516001600160401b0381111562000207576200020762000146565b6200021f816200021884546200015c565b8462000198565b602080601f8311600181146200025757600084156200023e5750858301515b600019600386901b1c1916600185901b178555620001e2565b600085815260208120601f198616915b82811015620002885788860151825594840194600190910190840162000267565b5085821015620002a75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161c9d8620002ed600039600050506000505060005050600050506000505061c9d86000f3fe60806040523480156200001157600080fd5b5060043610620001325760003560e01c8063abbd4aac11620000c0578063bcfceff2116200008b578063e20c9f71116200006e578063e20c9f711462000274578063ea9085c2146200027e578063fa7626d4146200029557600080fd5b8063bcfceff21462000212578063bd3300c9146200022957600080fd5b8063abbd4aac14620001cc578063b5508aa914620001d6578063b9bc906714620001e0578063ba414fa614620001f757600080fd5b806366d9a9a0116200010157806366d9a9a0146200017957806385226c811462000192578063916a17c614620001ab578063a8cc665714620001b557600080fd5b80630a9254e414620001375780631ed7831c14620001435780633e5e3c2314620001655780633f7286f4146200016f575b600080fd5b62000141620002a3565b005b6200014d620005bc565b6040516200015c919062003458565b60405180910390f35b6200014d6200062d565b6200014d6200069c565b620001836200070b565b6040516200015c9190620034b4565b6200019c62000820565b6040516200015c91906200362d565b62000183620008fa565b62000141620001c6366004620036c4565b62000a06565b6200014162000bfd565b6200019c62001083565b62000141620001f1366004620036c4565b6200115d565b6200020162001711565b60405190151581526020016200015c565b620001416200022336600462003754565b6200187b565b620002656200023a3660046200376e565b60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff919091161790565b6040519081526020016200015c565b6200014d62001990565b620001416200028f366004620036c4565b620019ff565b600054620002019060ff1681565b620002ad62001ebc565b600030604051620002be9062003405565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f080158015620002f8573d6000803e3d6000fd5b50905060006040516200030b9062003413565b604051809103906000f08015801562000328573d6000803e3d6000fd5b50604080513060248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc4d66de80000000000000000000000000000000000000000000000000000000017905290517f4f1ef28600000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff841691634f1ef28691620003e791859190600401620037a1565b6000604051808303816000875af115801562000407573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200044f919081019062003809565b50602d80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155604080517fc657c71800000000000000000000000000000000000000000000000000000000815260048101929092526024820152601760448201527f4469737075746547616d65466163746f727950726f78790000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200052e57600080fd5b505af115801562000543573d6000803e3d6000fd5b50505050604051620005559062003421565b604051809103906000f08015801562000572573d6000803e3d6000fd5b50602e80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200062357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620005f7575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015620006235760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620005f7575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015620006235760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620005f7575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156200081757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015620007fe57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620007aa5790505b505050505081525050815260200190600101906200072f565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015620008175783829060005260206000200180546200086690620038e0565b80601f01602080910402602001604051908101604052809291908181526020018280546200089490620038e0565b8015620008e55780601f10620008b957610100808354040283529160200191620008e5565b820191906000526020600020905b815481529060010190602001808311620008c757829003601f168201915b50505050508152602001906001019062000844565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156200081757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015620009ed57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620009995790505b505050505081525050815260200190600101906200091e565b600062000a1a8560ff1660006002620025c4565b6040805160ff831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f44265d6f0000000000000000000000000000000000000000000000000000000017905290517ff28dceb30000000000000000000000000000000000000000000000000000000081527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff969096167f01000000000000000000000000000000000000000000000000000000000000001795919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39162000b1d9160040162003935565b600060405180830381600087803b15801562000b3857600080fd5b505af115801562000b4d573d6000803e3d6000fd5b5050602d546040517f3142e55e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169250633142e55e915062000baf9084908890889088906004016200394a565b6020604051808303816000875af115801562000bcf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf59190620039cb565b505050505050565b6040805160008082526020808301808552835181206021547fdcec3348000000000000000000000000000000000000000000000000000000009092529451929373ffffffffffffffffffffffffffffffffffffffff9091169263dcec3348926024808401939192918290030181865afa15801562000c7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca59190620039eb565b90506000602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636abcf5636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d17573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d3d9190620039eb565b905062000d4a826200187b565b602154604080517f4599c788000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691634599c7889160048083019260209291908290030181865afa15801562000dbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000de19190620039eb565b905062000dfe836026548362000df8919062003a34565b6200261d565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f3062000e2585600162003a34565b6040518263ffffffff1660e01b815260040162000e4491815260200190565b600060405180830381600087803b15801562000e5f57600080fd5b505af115801562000e74573d6000803e3d6000fd5b50506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063491cc7c29150608401600060405180830381600087803b15801562000ef457600080fd5b505af115801562000f09573d6000803e3d6000fd5b505050508282857fa7aaf2512769da4e444e3de247be2564225c2e7a8f74cfe528e46e17d24868e24260405162000f4291815260200190565b60405180910390a4602480546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa79101600060405180830381600087803b15801562000fc957600080fd5b505af115801562000fde573d6000803e3d6000fd5b50506021546040517f9aaab6480000000000000000000000000000000000000000000000000000000081526004810188905260248101879052600060448201819052606482015273ffffffffffffffffffffffffffffffffffffffff9091169250639aaab6489150608401600060405180830381600087803b1580156200106457600080fd5b505af115801562001079573d6000803e3d6000fd5b5050505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000817578382906000526020600020018054620010c990620038e0565b80601f0160208091040260200160405190810160405280929190818152602001828054620010f790620038e0565b8015620011485780601f106200111c5761010080835404028352916020019162001148565b820191906000526020600020905b8154815290600101906020018083116200112a57829003601f168201915b505050505081526020019060010190620010a7565b6000620011718560ff1660006002620025c4565b90507f01000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617935060005b60038160ff1610156200127157602d54602e546040517f45583b7a00000000000000000000000000000000000000000000000000000000815260ff8416600482015273ffffffffffffffffffffffffffffffffffffffff91821660248201529116906345583b7a90604401600060405180830381600087803b1580156200124257600080fd5b505af115801562001257573d6000803e3d6000fd5b505050508080620012689062003a4f565b915050620011bc565b506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260006004820181905260016024830181905260448301526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b158015620012ee57600080fd5b505af115801562001303573d6000803e3d6000fd5b505060405186925060ff841691506000907ffad0599ff449d8d9685eadecca8cb9e00924c5fd8367c1c09469824939e1ffec908290a4602d546040517f3142e55e00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690633142e55e90620013989085908990899089906004016200394a565b6020604051808303816000875af1158015620013b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013de9190620039cb565b602d546040517fc49d5271000000000000000000000000000000000000000000000000000000008152919250600091829173ffffffffffffffffffffffffffffffffffffffff169063c49d527190620014429087908b908b908b906004016200394a565b6040805180830381865afa1580156200145f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001485919062003a8a565b9150915062001495828462002733565b620014ab8167ffffffffffffffff16426200261d565b602d546040517f26daafbe000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3917f014f6fe5000000000000000000000000000000000000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff16906326daafbe9062001545908a908e908e908e906004016200394a565b602060405180830381865afa15801562001563573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015899190620039eb565b6040516024016200159c91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e084901b90921682526200162e9160040162003935565b600060405180830381600087803b1580156200164957600080fd5b505af11580156200165e573d6000803e3d6000fd5b5050602d546040517f3142e55e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169250633142e55e9150620016c09087908b908b908b906004016200394a565b6020604051808303816000875af1158015620016e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017069190620039cb565b505050505050505050565b60008054610100900460ff1615620017325750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620018765760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091620017da917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003ac4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620018149162003b0e565b6000604051808303816000865af19150503d806000811462001853576040519150601f19603f3d011682016040523d82523d6000602084013e62001858565b606091505b509150508080602001905181019062001872919062003b2c565b9150505b919050565b6021546040517fd1de856c00000000000000000000000000000000000000000000000000000000815260048101839052737109709ecfa91a80626ff3989d68f67f5b1dd12d9163e5d6bf029173ffffffffffffffffffffffffffffffffffffffff9091169063d1de856c90602401602060405180830381865afa15801562001907573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200192d9190620039eb565b6200193a90600162003a34565b6040518263ffffffff1660e01b81526004016200195991815260200190565b600060405180830381600087803b1580156200197457600080fd5b505af115801562001989573d6000803e3d6000fd5b5050505050565b6060600c805480602002602001604051908101604052809291908181526020018280548015620006235760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620005f7575050505050905090565b600062001a138560ff1660006002620025c4565b90507f01000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851617935060005b60038160ff16101562001b1357602d54602e546040517f45583b7a00000000000000000000000000000000000000000000000000000000815260ff8416600482015273ffffffffffffffffffffffffffffffffffffffff91821660248201529116906345583b7a90604401600060405180830381600087803b15801562001ae457600080fd5b505af115801562001af9573d6000803e3d6000fd5b50505050808062001b0a9062003a4f565b91505062001a5e565b506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260006004820181905260016024830181905260448301526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b15801562001b9057600080fd5b505af115801562001ba5573d6000803e3d6000fd5b505060405186925060ff841691506000907ffad0599ff449d8d9685eadecca8cb9e00924c5fd8367c1c09469824939e1ffec908290a4602d546040517f3142e55e00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690633142e55e9062001c3a9085908990899089906004016200394a565b6020604051808303816000875af115801562001c5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c809190620039cb565b602d546040517fc49d5271000000000000000000000000000000000000000000000000000000008152919250600091829173ffffffffffffffffffffffffffffffffffffffff169063c49d52719062001ce49087908b908b908b906004016200394a565b6040805180830381865afa15801562001d01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d27919062003a8a565b9150915062001d37828462002733565b62001d4d8167ffffffffffffffff16426200261d565b602d54604080517f4d1975b4000000000000000000000000000000000000000000000000000000008152905162001dee9273ffffffffffffffffffffffffffffffffffffffff1691634d1975b49160048083019260209291908290030181865afa15801562001dc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001de69190620039eb565b60016200261d565b602d546040517fbb8aa1fc00000000000000000000000000000000000000000000000000000000815260006004820181905291829173ffffffffffffffffffffffffffffffffffffffff9091169063bb8aa1fc90602401606060405180830381865afa15801562001e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e89919062003b50565b925092505062001e9a818662002733565b62001eb08267ffffffffffffffff16426200261d565b50505050505050505050565b62001ec66200285f565b62001f066040518060400160405280600881526020017f677561726469616e00000000000000000000000000000000000000000000000081525062002d9f565b602b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905560295462001f5b90600162003a34565b602c8190556040517fe5d6bf020000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b15801562001fc857600080fd5b505af115801562001fdd573d6000803e3d6000fd5b50506028546040517f1f7b4f300000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b1580156200204c57600080fd5b505af115801562002061573d6000803e3d6000fd5b50505050602654602754602a546040516200207c906200342e565b92835260208301919091526040820152606001604051809103906000f080158015620020ac573d6000803e3d6000fd5b50602280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055601d546040516000929190911690620021079062003405565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f08015801562002141573d6000803e3d6000fd5b50601d546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620021c557600080fd5b505af1158015620021da573d6000803e3d6000fd5b50506022546028546029546024805460255460405192830194909452604482019290925273ffffffffffffffffffffffffffffffffffffffff918216606482015291811660848301528581169450634f1ef28693509091169060a401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f019e272900000000000000000000000000000000000000000000000000000000179052517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152620022e6929190600401620037a1565b6000604051808303816000875af115801562002306573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200234e919081019062003809565b50602180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517fc657c71800000000000000000000000000000000000000000000000000000000815260048101929092526024820152600e60448201527f4c324f75747075744f7261636c650000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200242d57600080fd5b505af115801562002442573d6000803e3d6000fd5b5050604051737109709ecfa91a80626ff3989d68f67f5b1dd12d925063b4d6c78291507342000000000000000000000000000000000000169062002486906200343c565b604051809103906000f080158015620024a3573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b8152600401620024f5929190620037a1565b600060405180830381600087803b1580156200251057600080fd5b505af115801562002525573d6000803e3d6000fd5b5050604080517fc657c71800000000000000000000000000000000000000000000000000000000815273420000000000000000000000000000000000001660048201526024810191909152601360448201527f4c32546f4c314d657373616765506173736572000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c718915060840162001959565b6000620025d384848462002db3565b9050620026166040518060400160405280600c81526020017f426f756e6420526573756c740000000000000000000000000000000000000000815250826200301d565b9392505050565b8082146200272f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620026ab9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620026e4919062003ba0565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200271d919062003bec565b60405180910390a16200272f62003116565b5050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146200272f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620027ed9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162002826919062003c2a565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200271d919062003c8c565b601b546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152620100006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620028e857600080fd5b505af1158015620028fd573d6000803e3d6000fd5b5050601c546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152620100006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200298a57600080fd5b505af11580156200299f573d6000803e3d6000fd5b5050601d546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152620100006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b15801562002a2c57600080fd5b505af115801562002a41573d6000803e3d6000fd5b5050601b54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600560448201527f616c6963650000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562002af857600080fd5b505af115801562002b0d573d6000803e3d6000fd5b5050601c54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600360448201527f626f6200000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562002bc457600080fd5b505af115801562002bd9573d6000803e3d6000fd5b5050601d54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600860448201527f6d756c74697369670000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562002c9057600080fd5b505af115801562002ca5573d6000803e3d6000fd5b50506040517f39b37ab0000000000000000000000000000000000000000000000000000000008152633b9aca006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506339b37ab09150602401600060405180830381600087803b15801562002d1357600080fd5b505af115801562002d28573d6000803e3d6000fd5b5050505060405162002d3a906200344a565b604051809103906000f08015801562002d57573d6000803e3d6000fd5b50602080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600062002dac8262003299565b5092915050565b60008183111562002e4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b82841015801562002e5b5750818411155b1562002e6957508262002616565b600062002e77848462003cca565b62002e8490600162003a34565b90506003851115801562002e9757508481115b1562002eb25762002ea9858562003a34565b91505062002616565b62002edf60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff62003cca565b851015801562002f19575062002f16857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff62003cca565b81115b1562002f575762002f4b857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff62003cca565b62002ea9908462003cca565b8285111562002fb957600062002f6e848762003cca565b9050600062002f7e838362003ce4565b90508060000362002f955784935050505062002616565b600162002fa3828862003a34565b62002faf919062003cca565b9350505062003015565b838510156200301557600062002fd0868662003cca565b9050600062002fe0838362003ce4565b90508060000362002ff75785935050505062002616565b62003003818662003cca565b6200301090600162003a34565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016200305692919062003d20565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905251620030d9919062003b0e565b600060405180830381855afa9150503d806000811462000bf5576040519150601f19603f3d011682016040523d82523d6000602084013e62000bf5565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200326b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620031e8929160200162003ac4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620032229162003b0e565b6000604051808303816000865af19150503d806000811462003261576040519150601f19603f3d011682016040523d82523d6000602084013e62003266565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b60008082604051602001620032af919062003b0e565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa1580156200334f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033759190620039cb565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620033cc9085908790600401620037a1565b600060405180830381600087803b158015620033e757600080fd5b505af1158015620033fc573d6000803e3d6000fd5b50505050915091565b61091f8062003d4583390190565b6112f1806200466483390190565b6059806200595583390190565b6118ae80620059ae83390190565b6106f3806200725c83390190565b61507d806200794f83390190565b6020808252825182820181905260009190848201906040850190845b81811015620034a857835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162003474565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200359f578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620035895783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062003545565b50978a01979550505091870191600101620034dc565b50919998505050505050505050565b60005b83811015620035cb578181015183820152602001620035b1565b83811115620035db576000848401525b50505050565b60008151808452620035fb816020860160208601620035ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620036a4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845262003691858351620035e1565b9450928501929085019060010162003654565b5092979650505050505050565b60ff81168114620036c157600080fd5b50565b60008060008060608587031215620036db57600080fd5b8435620036e881620036b1565b935060208501359250604085013567ffffffffffffffff808211156200370d57600080fd5b818701915087601f8301126200372257600080fd5b8135818111156200373257600080fd5b8860208285010111156200374557600080fd5b95989497505060200194505050565b6000602082840312156200376757600080fd5b5035919050565b600080604083850312156200378257600080fd5b8235915060208301356200379681620036b1565b809150509250929050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000620037d26040830184620035e1565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156200381c57600080fd5b815167ffffffffffffffff808211156200383557600080fd5b818401915084601f8301126200384a57600080fd5b8151818111156200385f576200385f620037da565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715620038a857620038a8620037da565b81604052828152876020848701011115620038c257600080fd5b620038d5836020830160208801620035ae565b979650505050505050565b600181811c90821680620038f557607f821691505b6020821081036200392f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b602081526000620026166020830184620035e1565b60ff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114620036c157600080fd5b600060208284031215620039de57600080fd5b81516200261681620039a8565b600060208284031215620039fe57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111562003a4a5762003a4a62003a05565b500190565b600060ff821660ff810362003a685762003a6862003a05565b60010192915050565b805167ffffffffffffffff811681146200187657600080fd5b6000806040838503121562003a9e57600080fd5b825162003aab81620039a8565b915062003abb6020840162003a71565b90509250929050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162003b00816004850160208701620035ae565b919091016004019392505050565b6000825162003b22818460208701620035ae565b9190910192915050565b60006020828403121562003b3f57600080fd5b815180151581146200261657600080fd5b60008060006060848603121562003b6657600080fd5b835162003b7381620036b1565b925062003b836020850162003a71565b9150604084015162003b9581620039a8565b809150509250925092565b60408152600062003bde60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b60408152600062003bde60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60408152600062003c6860408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b60408152600062003c6860408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60008282101562003cdf5762003cdf62003a05565b500390565b60008262003d1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60408152600062003d356040830185620035e1565b9050826020830152939250505056fe608060405234801561001057600080fd5b5060405161091f38038061091f83398101604081905261002f916100b5565b6100388161003e565b506100e5565b60006100566000805160206108ff8339815191525490565b6000805160206108ff833981519152838155604080516001600160a01b0380851682528616602082015292935090917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f910160405180910390a1505050565b6000602082840312156100c757600080fd5b81516001600160a01b03811681146100de57600080fd5b9392505050565b61080b806100f46000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100be5780638f283970146100f8578063f851a440146101185761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61012d565b005b61006b61012d565b34801561008157600080fd5b5061006b6100903660046106dd565b610224565b6100a86100a33660046106f8565b610296565b6040516100b5919061077b565b60405180910390f35b3480156100ca57600080fd5b506100d3610419565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b5565b34801561010457600080fd5b5061006b6101133660046106dd565b6104b0565b34801561012457600080fd5b506100d3610517565b60006101577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905073ffffffffffffffffffffffffffffffffffffffff8116610201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f50726f78793a20696d706c656d656e746174696f6e206e6f7420696e6974696160448201527f6c697a656400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8061021e573d6000fd5b503d6000f35b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061027d575033155b1561028e5761028b816105a3565b50565b61028b61012d565b60606102c07fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102f7575033155b1561040a57610305846105a3565b6000808573ffffffffffffffffffffffffffffffffffffffff16858560405161032f9291906107ee565b600060405180830381855af49150503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b509150915081610401576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f50726f78793a2064656c656761746563616c6c20746f206e657720696d706c6560448201527f6d656e746174696f6e20636f6e7472616374206661696c65640000000000000060648201526084016101f8565b91506104129050565b61041261012d565b9392505050565b60006104437fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061047a575033155b156104a557507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6104ad61012d565b90565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610509575033155b1561028e5761028b8161060c565b60006105417fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610578575033155b156104a557507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81815560405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b60006106367fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038381556040805173ffffffffffffffffffffffffffffffffffffffff80851682528616602082015292935090917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f910160405180910390a1505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106d857600080fd5b919050565b6000602082840312156106ef57600080fd5b610412826106b4565b60008060006040848603121561070d57600080fd5b610716846106b4565b9250602084013567ffffffffffffffff8082111561073357600080fd5b818601915086601f83011261074757600080fd5b81358181111561075657600080fd5b87602082850101111561076857600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156107a85785810183015185820160400152820161078c565b818111156107ba576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b818382376000910190815291905056fea164736f6c634300080f000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360806040523480156200001157600080fd5b506200001e600062000024565b62000292565b600054610100900460ff1615808015620000455750600054600160ff909116105b8062000075575062000062306200016260201b6200097e1760201c565b15801562000075575060005460ff166001145b620000de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000102576000805461ff0019166101001790555b6200010c62000171565b6200011782620001d9565b80156200015e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620001cd5760405162461bcd60e51b815260206004820152602b6024820152600080516020620012d183398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d5565b620001d76200022b565b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620002875760405162461bcd60e51b815260206004820152602b6024820152600080516020620012d183398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d5565b620001d733620001d9565b61102f80620002a26000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063c4d66de81161005b578063c4d66de8146102e8578063dfa162d3146102fb578063f2fde38b1461033157600080fd5b80638da5cb5b14610231578063bb8aa1fc1461024f578063c49d5271146102a057600080fd5b80634d1975b4116100b25780634d1975b4146101d857806354fd4d50146101e0578063715018a61461022957600080fd5b806326daafbe146100d95780633142e55e1461018b57806345583b7a146101c3575b600080fd5b6101786100e7366004610d45565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0810180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0830180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08086018051988652968352606087529451609f0190941683209190925291905291905290565b6040519081526020015b60405180910390f35b61019e610199366004610e2e565b610344565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610182565b6101d66101d1366004610ed7565b6105a6565b005b606754610178565b61021c6040518060400160405280600581526020017f302e302e3600000000000000000000000000000000000000000000000000000081525081565b6040516101829190610f0e565b6101d661062d565b60335473ffffffffffffffffffffffffffffffffffffffff1661019e565b61026261025d366004610f81565b610641565b6040805160ff909416845267ffffffffffffffff909216602084015273ffffffffffffffffffffffffffffffffffffffff1690820152606001610182565b6102b36102ae366004610e2e565b6106a3565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835267ffffffffffffffff909116602083015201610182565b6101d66102f6366004610f9a565b61072b565b61019e610309366004610fbe565b60656020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d661033f366004610f9a565b6108c7565b60ff841660009081526065602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103ae576040517f44265d6f00000000000000000000000000000000000000000000000000000000815260ff871660048201526024015b60405180910390fd5b6104118585856040516020016103c693929190610fd9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905273ffffffffffffffffffffffffffffffffffffffff83169061099a565b91508173ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b5050505060006104b6878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100e792505050565b60008181526066602052604090205490915015610502576040517f014f6fe5000000000000000000000000000000000000000000000000000000008152600481018290526024016103a5565b60004260b81b60f889901b178417600083815260666020526040808220839055606780546001810182559083527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0183905551919250889160ff8b169173ffffffffffffffffffffffffffffffffffffffff8816917ffad0599ff449d8d9685eadecca8cb9e00924c5fd8367c1c09469824939e1ffec9190a4505050949350505050565b6105ae610ace565b60ff821660008181526065602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155905190917f623713f72f6e427a8044bb8b3bd6834357cf285decbaa21bcc73c1d0632c4d8491a35050565b610635610ace565b61063f6000610b4f565b565b60008060006106966067858154811061065c5761065c610ff3565b906000526020600020015460f881901c9167ffffffffffffffff60b883901c169173ffffffffffffffffffffffffffffffffffffffff1690565b9196909550909350915050565b60008060006106e9878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100e792505050565b60009081526066602052604090205473ffffffffffffffffffffffffffffffffffffffff81169860b89190911c67ffffffffffffffff16975095505050505050565b600054610100900460ff161580801561074b5750600054600160ff909116105b806107655750303b158015610765575060005460ff166001145b6107f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103a5565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561084f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610857610bc6565b61086082610b4f565b80156108c357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6108cf610ace565b73ffffffffffffffffffffffffffffffffffffffff8116610972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103a5565b61097b81610b4f565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60006002825101603f8101600a81036040518360581b8260e81b177f6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d7300001781528660601b601e8201527f5af43d3d93803e603357fd5bf300000000000000000000000000000000000000603282015285519150603f8101602087015b60208410610a5257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09093019260209182019101610a15565b517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602085900360031b1b16815260f085901b9083015282816000f0945084610abf577febfef1880000000000000000000000000000000000000000000000000000000060005260206000fd5b90910160405250909392505050565b60335473ffffffffffffffffffffffffffffffffffffffff16331461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a5565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610c5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103a5565b61063f600054610100900460ff16610cf7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103a5565b61063f33610b4f565b803560ff81168114610d1157600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215610d5a57600080fd5b610d6384610d00565b925060208401359150604084013567ffffffffffffffff80821115610d8757600080fd5b818601915086601f830112610d9b57600080fd5b813581811115610dad57610dad610d16565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610df357610df3610d16565b81604052828152896020848701011115610e0c57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060008060608587031215610e4457600080fd5b610e4d85610d00565b935060208501359250604085013567ffffffffffffffff80821115610e7157600080fd5b818701915087601f830112610e8557600080fd5b813581811115610e9457600080fd5b886020828501011115610ea657600080fd5b95989497505060200194505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461097b57600080fd5b60008060408385031215610eea57600080fd5b610ef383610d00565b91506020830135610f0381610eb5565b809150509250929050565b600060208083528351808285015260005b81811015610f3b57858101830151858201604001528201610f1f565b81811115610f4d576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060208284031215610f9357600080fd5b5035919050565b600060208284031215610fac57600080fd5b8135610fb781610eb5565b9392505050565b600060208284031215610fd057600080fd5b610fb782610d00565b838152818360208301376000910160200190815292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696080604052348015600f57600080fd5b50603c80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b00fea164736f6c634300080f000a60e06040523480156200001157600080fd5b50604051620018ae380380620018ae8339810160408190526200003491620002f3565b60008211620000b05760405162461bcd60e51b815260206004820152603460248201527f4c324f75747075744f7261636c653a204c3220626c6f636b2074696d65206d7560448201527f73742062652067726561746572207468616e203000000000000000000000000060648201526084015b60405180910390fd5b60008311620001285760405162461bcd60e51b815260206004820152603a60248201527f4c324f75747075744f7261636c653a207375626d697373696f6e20696e74657260448201527f76616c206d7573742062652067726561746572207468616e20300000000000006064820152608401620000a7565b608083905260a082905260c08190526200014660008080806200014f565b50505062000322565b600054600290610100900460ff1615801562000172575060005460ff8083169116105b620001d75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000a7565b6000805461ffff191660ff83161761010017905542841115620002715760405162461bcd60e51b8152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201526374696d6560e01b608482015260a401620000a7565b60028490556001859055600580546001600160a01b038581166001600160a01b03199283161790925560048054928516929091169190911790556000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6000806000606084860312156200030957600080fd5b8351925060208401519150604084015190509250925092565b60805160a05160c0516115326200037c600039600081816104b3015281816105710152610beb0152600081816101a1015281816103b9015261127401526000818161021f0152818161053b01526112c201526115326000f3fe60806040526004361061018a5760003560e01c806389c44cbb116100d6578063ce5db8d61161007f578063dcec334811610059578063dcec334814610517578063e1a41bcf1461052c578063f4daa2911461055f57600080fd5b8063ce5db8d6146104a4578063cf8e5cf0146104d7578063d1de856c146104f757600080fd5b8063a25ae557116100b0578063a25ae557146103f0578063a8e4fb901461044c578063bffa7f0f1461047957600080fd5b806389c44cbb1461038a57806393991af3146103aa5780639aaab648146103dd57600080fd5b806369f16eec1161013857806370872aa51161011257806370872aa51461033e5780637f00642014610354578063887862721461037457600080fd5b806369f16eec146102e95780636abcf563146102fe5780636b4d98dd1461031357600080fd5b8063529933df11610169578063529933df1461020d578063534db0e21461024157806354fd4d501461029357600080fd5b80622134cc1461018f578063019e2729146101d65780634599c788146101f8575b600080fd5b34801561019b57600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b3480156101e257600080fd5b506101f66101f136600461131c565b610593565b005b34801561020457600080fd5b506101c36107f2565b34801561021957600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b34801561024d57600080fd5b5060045461026e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101cd565b34801561029f57600080fd5b506102dc6040518060400160405280600581526020017f312e352e3100000000000000000000000000000000000000000000000000000081525081565b6040516101cd9190611362565b3480156102f557600080fd5b506101c3610865565b34801561030a57600080fd5b506003546101c3565b34801561031f57600080fd5b5060045473ffffffffffffffffffffffffffffffffffffffff1661026e565b34801561034a57600080fd5b506101c360015481565b34801561036057600080fd5b506101c361036f3660046113d5565b610877565b34801561038057600080fd5b506101c360025481565b34801561039657600080fd5b506101f66103a53660046113d5565b610a8b565b3480156103b657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101c3565b6101f66103eb3660046113ee565b610d43565b3480156103fc57600080fd5b5061041061040b3660046113d5565b6111a4565b60408051825181526020808401516fffffffffffffffffffffffffffffffff9081169183019190915292820151909216908201526060016101cd565b34801561045857600080fd5b5060055461026e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561048557600080fd5b5060055473ffffffffffffffffffffffffffffffffffffffff1661026e565b3480156104b057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101c3565b3480156104e357600080fd5b506104106104f23660046113d5565b611238565b34801561050357600080fd5b506101c36105123660046113d5565b611270565b34801561052357600080fd5b506101c36112be565b34801561053857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101c3565b34801561056b57600080fd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b600054600290610100900460ff161580156105b5575060005460ff8083169116105b610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff8316176101001790554284111561072e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201527f74696d6500000000000000000000000000000000000000000000000000000000608482015260a40161063d565b600284905560018590556005805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179092556004805492851692909116919091179055600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6003546000901561085c576003805461080d9060019061144f565b8154811061081d5761081d611466565b600091825260209091206002909102016001015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16919050565b6001545b905090565b6003546000906108609060019061144f565b60006108816107f2565b821115610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f7420666f72206120626c6f636b207468617420686173206e6f74206265656e2060648201527f70726f706f736564000000000000000000000000000000000000000000000000608482015260a40161063d565b6003546109eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f74206173206e6f206f7574707574732068617665206265656e2070726f706f7360648201527f6564207965740000000000000000000000000000000000000000000000000000608482015260a40161063d565b6003546000905b80821015610a845760006002610a088385611495565b610a1291906114ad565b90508460038281548110610a2857610a28611466565b600091825260209091206002909102016001015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff161015610a7a57610a73816001611495565b9250610a7e565b8091505b506109f2565b5092915050565b60045473ffffffffffffffffffffffffffffffffffffffff163314610b32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f4c324f75747075744f7261636c653a206f6e6c7920746865206368616c6c656e60448201527f67657220616464726573732063616e2064656c657465206f7574707574730000606482015260840161063d565b6003548110610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4c324f75747075744f7261636c653a2063616e6e6f742064656c657465206f7560448201527f747075747320616674657220746865206c6174657374206f757470757420696e60648201527f6465780000000000000000000000000000000000000000000000000000000000608482015260a40161063d565b7f000000000000000000000000000000000000000000000000000000000000000060038281548110610c1d57610c1d611466565b6000918252602090912060016002909202010154610c4d906fffffffffffffffffffffffffffffffff164261144f565b10610d00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f4c324f75747075744f7261636c653a2063616e6e6f742064656c657465206f7560448201527f74707574732074686174206861766520616c7265616479206265656e2066696e60648201527f616c697a65640000000000000000000000000000000000000000000000000000608482015260a40161063d565b6000610d0b60035490565b90508160035581817f4ee37ac2c786ec85e87592d3c5c8a1dd66f8496dda3f125d9ea8ca5f657629b660405160405180910390a35050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610e10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f4c324f75747075744f7261636c653a206f6e6c79207468652070726f706f736560448201527f7220616464726573732063616e2070726f706f7365206e6577206f757470757460648201527f7300000000000000000000000000000000000000000000000000000000000000608482015260a40161063d565b610e186112be565b8314610ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f4c324f75747075744f7261636c653a20626c6f636b206e756d626572206d757360448201527f7420626520657175616c20746f206e65787420657870656374656420626c6f6360648201527f6b206e756d626572000000000000000000000000000000000000000000000000608482015260a40161063d565b42610ed684611270565b10610f63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4c324f75747075744f7261636c653a2063616e6e6f742070726f706f7365204c60448201527f32206f757470757420696e207468652066757475726500000000000000000000606482015260840161063d565b83610ff0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4c324f75747075744f7261636c653a204c32206f75747075742070726f706f7360448201527f616c2063616e6e6f7420626520746865207a65726f2068617368000000000000606482015260840161063d565b81156110ac57818140146110ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604960248201527f4c324f75747075744f7261636c653a20626c6f636b206861736820646f65732060448201527f6e6f74206d61746368207468652068617368206174207468652065787065637460648201527f6564206865696768740000000000000000000000000000000000000000000000608482015260a40161063d565b826110b660035490565b857fa7aaf2512769da4e444e3de247be2564225c2e7a8f74cfe528e46e17d24868e2426040516110e891815260200190565b60405180910390a45050604080516060810182529283526fffffffffffffffffffffffffffffffff4281166020850190815292811691840191825260038054600181018255600091909152935160029094027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810194909455915190518216700100000000000000000000000000000000029116177fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c90910155565b6040805160608101825260008082526020820181905291810191909152600382815481106111d4576111d4611466565b600091825260209182902060408051606081018252600290930290910180548352600101546fffffffffffffffffffffffffffffffff8082169484019490945270010000000000000000000000000000000090049092169181019190915292915050565b6040805160608101825260008082526020820181905291810191909152600361126083610877565b815481106111d4576111d4611466565b60007f0000000000000000000000000000000000000000000000000000000000000000600154836112a1919061144f565b6112ab91906114e8565b6002546112b89190611495565b92915050565b60007f00000000000000000000000000000000000000000000000000000000000000006112e96107f2565b6108609190611495565b803573ffffffffffffffffffffffffffffffffffffffff8116811461131757600080fd5b919050565b6000806000806080858703121561133257600080fd5b8435935060208501359250611349604086016112f3565b9150611357606086016112f3565b905092959194509250565b600060208083528351808285015260005b8181101561138f57858101830151858201604001528201611373565b818111156113a1576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000602082840312156113e757600080fd5b5035919050565b6000806000806080858703121561140457600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561146157611461611420565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082198211156114a8576114a8611420565b500190565b6000826114e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561152057611520611420565b50029056fea164736f6c634300080f000a608060405234801561001057600080fd5b506106d3806100206000396000f3fe6080604052600436106100695760003560e01c806382e3702d1161004357806382e3702d1461012a578063c2b3e5ac1461016a578063ecc704281461017d57600080fd5b80633f827a5a1461009257806344df8e70146100bf57806354fd4d50146100d457600080fd5b3661008d5761008b33620186a0604051806020016040528060008152506101e2565b005b600080fd5b34801561009e57600080fd5b506100a7600181565b60405161ffff90911681526020015b60405180910390f35b3480156100cb57600080fd5b5061008b6103a6565b3480156100e057600080fd5b5061011d6040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100b691906104d1565b34801561013657600080fd5b5061015a6101453660046104eb565b60006020819052908152604090205460ff1681565b60405190151581526020016100b6565b61008b610178366004610533565b6101e2565b34801561018957600080fd5b506101d46001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016100b6565b60006102786040518060c0016040528061023c6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b815233602082015273ffffffffffffffffffffffffffffffffffffffff871660408201523460608201526080810186905260a0018490526103de565b600081815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055905073ffffffffffffffffffffffffffffffffffffffff8416336103136001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b7f02a52367d10742d8032712c1bb8e0144ff1ec5ffda1ed7d70bb05a2744955054348787876040516103489493929190610637565b60405180910390a45050600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168301167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b476103b08161042b565b60405181907f7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f90600090a250565b80516020808301516040808501516060860151608087015160a0880151935160009761040e979096959101610667565b604051602081830303815290604052805190602001209050919050565b806040516104389061045a565b6040518091039082f0905080158015610455573d6000803e3d6000fd5b505050565b6008806106bf83390190565b6000815180845260005b8181101561048c57602081850181015186830182015201610470565b8181111561049e576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006104e46020830184610466565b9392505050565b6000602082840312156104fd57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561054857600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461056c57600080fd5b925060208401359150604084013567ffffffffffffffff8082111561059057600080fd5b818601915086601f8301126105a457600080fd5b8135818111156105b6576105b6610504565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105fc576105fc610504565b8160405282815289602084870101111561061557600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b8481528360208201526080604082015260006106566080830185610466565b905082606083015295945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a08301526106b260c0830184610466565b9897505050505050505056fe608060405230fffea164736f6c634300080f000a608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506150408061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101765760003560e01c806383dbaa03116100d8578063ba414fa61161008c578063e20c9f7111610066578063e20c9f7114610314578063fa7626d41461031c578063fc6773921461032957600080fd5b8063ba414fa6146102d6578063c21e8865146102ee578063dcf5edef1461030157600080fd5b80638ccece97116100bd5780638ccece97146102b3578063916a17c6146102c6578063b5508aa9146102ce57600080fd5b806383dbaa031461028b57806385226c811461029e57600080fd5b8063498a3c021161012f57806366d9a9a01161011457806366d9a9a0146102325780637e577a1b146102475780637f26c48c1461026a57600080fd5b8063498a3c02146101ea578063526dc9551461020a57600080fd5b80631ed7831c116101605780631ed7831c146101c55780633e5e3c23146101da5780633f7286f4146101e257600080fd5b8062ec31a61461017b5780631aac97c1146101a1575b600080fd5b61018e610189366004614319565b61033c565b6040519081526020015b60405180910390f35b6101b46101af366004614393565b6109d1565b604051610198959493929190614530565b6101cd61108e565b604051610198919061455b565b6101cd6110fd565b6101cd61116a565b6101fd6101f8366004614319565b6111d7565b60405161019891906145b5565b61021d6102183660046145c8565b611860565b60408051928352602083019190915201610198565b61023a611ac4565b60405161019891906145e1565b61025a6102553660046146d7565b611bd5565b6040516101989493929190614720565b61027d610278366004614773565b611e54565b6040516101989291906147c7565b61027d6102993660046147e0565b61233d565b6102a6612682565b6040516101989190614813565b61018e6102c13660046148ab565b612752565b61023a612efe565b6102a6613006565b6102de6130d6565b6040519015158152602001610198565b61018e6102fc366004614319565b613236565b61018e61030f36600461493e565b6132e9565b6101cd61351b565b6000546102de9060ff1681565b6101fd610337366004614970565b613588565b6040805160088082526101208201909252600091829190816020015b6060815260200190600190039081610358579050509050604051806060016040528060318152602001614f9e603191398160008151811061039b5761039b6149ac565b60200260200101819052506040518060400160405280601681526020017f6861736843726f7373446f6d61696e4d65737361676500000000000000000000815250816001815181106103ef576103ef6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101899052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104a99190810190614a0b565b816002815181106104bc576104bc6149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610545573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261058b9190810190614a0b565b8160038151811061059e5761059e6149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261066d9190810190614a0b565b81600481518110610680576106806149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101869052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156106f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261073a9190810190614a0b565b8160058151811061074d5761074d6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101859052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156107c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108079190810190614a0b565b8160068151811061081a5761081a6149ac565b60209081029190910101526040517f71aad10d000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371aad10d906108759086906004016145b5565b600060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108d89190810190614a0b565b816007815181106108eb576108eb6149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790610949908590600401614813565b6000604051808303816000875af1158015610968573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109ae9190810190614a74565b9050808060200190518101906109c49190614aa9565b9998505050505050505050565b60008080806060816008604051908082528060200260200182016040528015610a0e57816020015b60608152602001906001900390816109f95790505b509050604051806060016040528060318152602001614f9e6031913981600081518110610a3d57610a3d6149ac565b60200260200101819052506040518060600160405280602381526020016150116023913981600181518110610a7457610a746149ac565b602090810291909101015286516040517f6900a3ae0000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015610aeb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b319190810190614a0b565b81600281518110610b4457610b446149ac565b6020908102919091018101919091528701516040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c1b9190810190614a0b565b81600381518110610c2e57610c2e6149ac565b602090810291909101015260408781015190517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d039190810190614a0b565b81600481518110610d1657610d166149ac565b602090810291909101015260608701516040517f6900a3ae0000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015610d90573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610dd69190810190614a0b565b81600581518110610de957610de96149ac565b602090810291909101015260808701516040517f6900a3ae0000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015610e63573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ea99190810190614a0b565b81600681518110610ebc57610ebc6149ac565b602090810291909101015260a08701516040517f71aad10d000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d916371aad10d91610f1b91906004016145b5565b600060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f7e9190810190614a0b565b81600781518110610f9157610f916149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790610fef908590600401614813565b6000604051808303816000875af115801561100e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110549190810190614a74565b90506000806000806000858060200190518101906110729190614b61565b939f50919d509b50995097505050505050505091939590929450565b6060600d8054806020026020016040519081016040528092919081815260200182805480156110f357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110c8575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156110f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110c8575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156110f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110c8575050505050905090565b604080516008808252610120820190925260609160009190816020015b60608152602001906001900390816111f4579050509050604051806060016040528060318152602001614f9e6031913981600081518110611237576112376149ac565b60200260200101819052506040518060400160405280601881526020017f656e636f646543726f7373446f6d61696e4d65737361676500000000000000008152508160018151811061128b5761128b6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101899052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156112ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113459190810190614a0b565b81600281518110611358576113586149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa1580156113e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526114279190810190614a0b565b8160038151811061143a5761143a6149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa1580156114c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115099190810190614a0b565b8160048151811061151c5761151c6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101869052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115d69190810190614a0b565b816005815181106115e9576115e96149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101859052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561165d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526116a39190810190614a0b565b816006815181106116b6576116b66149ac565b60209081029190910101526040517f71aad10d000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371aad10d906117119086906004016145b5565b600060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117749190810190614a0b565b81600781518110611787576117876149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906389160467906117e5908590600401614813565b6000604051808303816000875af1158015611804573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261184a9190810190614a74565b9050808060200190518101906109c49190614a74565b6040805160038082526080820190925260009182918291816020015b606081526020019060019003908161187c579050509050604051806060016040528060318152602001614f9e60319139816000815181106118bf576118bf6149ac565b60200260200101819052506040518060400160405280601481526020017f6465636f646556657273696f6e65644e6f6e636500000000000000000000000081525081600181518110611913576119136149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101859052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015611987573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526119cd9190810190614a0b565b816002815181106119e0576119e06149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790611a3e908590600401614813565b6000604051808303816000875af1158015611a5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611aa39190810190614a74565b905080806020019051810190611ab99190614bc5565b935093505050915091565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015611bcc57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015611bb457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411611b615790505b50505050508152505081526020019060010190611ae8565b50505050905090565b60408051600580825260c08201909252600091606091829182918591816020015b6060815260200190600190039081611bf65790505090506040518060400160405280601a81526020017f2e2f746573742d636173652d67656e657261746f722f66757a7a00000000000081525081600081518110611c5657611c566149ac565b60200260200101819052506040518060400160405280600281526020017f2d6d00000000000000000000000000000000000000000000000000000000000081525081600181518110611caa57611caa6149ac565b60200260200101819052506040518060400160405280600481526020017f747269650000000000000000000000000000000000000000000000000000000081525081600281518110611cfe57611cfe6149ac565b60200260200101819052506040518060400160405280600281526020017f2d7600000000000000000000000000000000000000000000000000000000000081525081600381518110611d5257611d526149ac565b60200260200101819052508581600481518110611d7157611d716149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790611dcc908490600401614813565b6000604051808303816000875af1158015611deb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611e319190810190614a74565b806020019051810190611e449190614be9565b9450945094509450509193509193565b60408051600680825260e082019092526000916060918391816020015b6060815260200190600190039081611e71579050509050604051806060016040528060318152602001614f9e6031913981600081518110611eb457611eb46149ac565b60200260200101819052506040518060400160405280601181526020017f63616e6e6f6e4d656d6f727950726f6f6600000000000000000000000000000081525081600181518110611f0857611f086149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff88166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015611f81573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611fc79190810190614a0b565b81600281518110611fda57611fda6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff87166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015612053573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526120999190810190614a0b565b816003815181106120ac576120ac6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff86166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015612125573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261216b9190810190614a0b565b8160048151811061217e5761217e6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156121f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261223d9190810190614a0b565b81600581518110612250576122506149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906389160467906122ae908590600401614813565b6000604051808303816000875af11580156122cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526123139190810190614a74565b90506000808280602001905181019061232c9190614c7b565b909b909a5098505050505050505050565b60408051600480825260a082019092526000916060918391816020015b606081526020019060019003908161235a579050509050604051806060016040528060318152602001614f9e603191398160008151811061239d5761239d6149ac565b60200260200101819052506040518060400160405280601181526020017f63616e6e6f6e4d656d6f727950726f6f66000000000000000000000000000000815250816001815181106123f1576123f16149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff86166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561246a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526124b09190810190614a0b565b816002815181106124c3576124c36149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815263ffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561253c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526125829190810190614a0b565b81600381518110612595576125956149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906389160467906125f3908590600401614813565b6000604051808303816000875af1158015612612573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526126589190810190614a74565b9050600080828060200190518101906126719190614c7b565b9096509450505050505b9250929050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015611bcc5783829060005260206000200180546126c590614cc2565b80601f01602080910402602001604051908101604052809291908181526020018280546126f190614cc2565b801561273e5780601f106127135761010080835404028352916020019161273e565b820191906000526020600020905b81548152906001019060200180831161272157829003601f168201915b5050505050815260200190600101906126a6565b60408051600a8082526101608201909252600091829190816020015b606081526020019060019003908161276e579050509050604051806060016040528060318152602001614f9e60319139816000815181106127b1576127b16149ac565b60200260200101819052506040518060400160405280601681526020017f686173684465706f7369745472616e73616374696f6e0000000000000000000081525081600181518110612805576128056149ac565b6020026020010181905250604051806080016040528060428152602001614fcf604291398160028151811061283c5761283c6149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156128b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526128ff9190810190614a0b565b81600381518110612912576129126149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa15801561299b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526129e19190810190614a0b565b816004815181106129f4576129f46149ac565b60209081029190910101526040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015612a7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612ac39190810190614a0b565b81600581518110612ad657612ad66149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101889052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015612b4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612b909190810190614a0b565b81600681518110612ba357612ba36149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101879052737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015612c17573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612c5d9190810190614a0b565b81600781518110612c7057612c706149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff86166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015612ced573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612d339190810190614a0b565b81600881518110612d4657612d466149ac565b60209081029190910101526040517f71aad10d000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371aad10d90612da19087906004016145b5565b600060405180830381865afa158015612dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612e049190810190614a0b565b81600981518110612e1757612e176149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790612e75908590600401614813565b6000604051808303816000875af1158015612e94573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612eda9190810190614a74565b905080806020019051810190612ef09190614aa9565b9a9950505050505050505050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015611bcc57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015612fee57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411612f9b5790505b50505050508152505081526020019060010190612f22565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015611bcc57838290600052602060002001805461304990614cc2565b80601f016020809104026020016040519081016040528092919081815260200182805461307590614cc2565b80156130c25780601f10613097576101008083540402835291602001916130c2565b820191906000526020600020905b8154815290600101906020018083116130a557829003601f168201915b50505050508152602001906001019061302a565b60008054610100900460ff16156130f65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156132315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909161319b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001614d15565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526131d391614d5d565b6000604051808303816000865af19150503d8060008114613210576040519150601f19603f3d011682016040523d82523d6000602084013e613215565b606091505b509150508080602001905181019061322d9190614d8a565b9150505b919050565b6040805160088082526101208201909252600091829190816020015b6060815260200190600190039081613252579050509050604051806060016040528060318152602001614f9e6031913981600081518110613295576132956149ac565b60200260200101819052506040518060400160405280600e81526020017f686173685769746864726177616c000000000000000000000000000000000000815250816001815181106103ef576103ef6149ac565b60408051600680825260e08201909252600091829190816020015b6060815260200190600190039081613304579050509050604051806060016040528060318152602001614f9e6031913981600081518110613347576133476149ac565b60200260200101819052506040518060400160405280601381526020017f686173684f7574707574526f6f7450726f6f66000000000000000000000000008152508160018151811061339b5761339b6149ac565b60209081029190910101526133af86613ef1565b816002815181106133c2576133c26149ac565b60209081029190910101526133d685613ef1565b816003815181106133e9576133e96149ac565b60209081029190910101526133fd84613ef1565b81600481518110613410576134106149ac565b602090810291909101015261342483613ef1565b81600581518110613437576134376149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790613495908590600401614813565b6000604051808303816000875af11580156134b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526134fa9190810190614a74565b9050808060200190518101906135109190614aa9565b979650505050505050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156110f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116110c8575050505050905090565b60408051600b808252610180820190925260609160009190816020015b60608152602001906001900390816135a5579050509050604051806060016040528060318152602001614f9e60319139816000815181106135e8576135e86149ac565b60200260200101819052506040518060400160405280601881526020017f656e636f64654465706f7369745472616e73616374696f6e00000000000000008152508160018151811061363c5761363c6149ac565b602090810291909101810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e9061367390860186614da7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381865afa1580156136dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526137229190810190614a0b565b81600281518110613735576137356149ac565b60200260200101819052507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff166356ca623e8460200160208101906137929190614da7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381865afa1580156137fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526138419190810190614a0b565b81600381518110613854576138546149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260608401356004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa1580156138cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526139119190810190614a0b565b81600481518110613924576139246149ac565b60209081029190910101526040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260808401356004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561399b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526139e19190810190614a0b565b816005815181106139f4576139f46149ac565b6020908102919091010152737109709ecfa91a80626ff3989d68f67f5b1dd12d636900a3ae613a2960c0860160a08701614dc2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815267ffffffffffffffff9091166004820152602401600060405180830381865afa158015613a86573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613acc9190810190614a0b565b81600681518110613adf57613adf6149ac565b6020908102919091010152737109709ecfa91a80626ff3989d68f67f5b1dd12d6371dce7da613b146060860160408701614ddd565b6040518263ffffffff1660e01b8152600401613b34911515815260200190565b600060405180830381865afa158015613b51573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613b979190810190614a0b565b81600781518110613baa57613baa6149ac565b6020908102919091010152737109709ecfa91a80626ff3989d68f67f5b1dd12d6371aad10d613bdc60c0860186614dfa565b6040518363ffffffff1660e01b8152600401613bf9929190614e5f565b600060405180830381865afa158015613c16573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613c5c9190810190614a0b565b81600881518110613c6f57613c6f6149ac565b60209081029190910101526040517fb11a19e800000000000000000000000000000000000000000000000000000000815260e08401356004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063b11a19e890602401600060405180830381865afa158015613ce6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613d2c9190810190614a0b565b81600981518110613d3f57613d3f6149ac565b60209081029190910101526040517f6900a3ae0000000000000000000000000000000000000000000000000000000081526101008401356004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa158015613db7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613dfd9190810190614a0b565b81600a81518110613e1057613e106149ac565b60209081029190910101526040517f89160467000000000000000000000000000000000000000000000000000000008152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790613e6e908590600401614813565b6000604051808303816000875af1158015613e8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613ed39190810190614a74565b905080806020019051810190613ee99190614a74565b949350505050565b606081600003613f3457505060408051808201909152600481527f3078303000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613f575780613f4881614edb565b915050600882901c9150613f38565b613ee9848260606000613f6b836002614f13565b613f76906002614f50565b67ffffffffffffffff811115613f8e57613f8e6141ce565b6040519080825280601f01601f191660200182016040528015613fb8576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110613fef57613fef6149ac565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110614052576140526149ac565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061408e846002614f13565b614099906001614f50565b90505b6001811115614136577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106140da576140da6149ac565b1a60f81b8282815181106140f0576140f06149ac565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361412f81614f68565b905061409c565b5083156141a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461323157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715614220576142206141ce565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561426d5761426d6141ce565b604052919050565b600067ffffffffffffffff82111561428f5761428f6141ce565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006142ce6142c984614275565b614226565b90508281528383830111156142e257600080fd5b828260208301376000602084830101529392505050565b600082601f83011261430a57600080fd5b6141a3838335602085016142bb565b60008060008060008060c0878903121561433257600080fd5b86359550614342602088016141aa565b9450614350604088016141aa565b9350606087013592506080870135915060a087013567ffffffffffffffff81111561437a57600080fd5b61438689828a016142f9565b9150509295509295509295565b6000602082840312156143a557600080fd5b813567ffffffffffffffff808211156143bd57600080fd5b9083019060c082860312156143d157600080fd5b6143d96141fd565b823581526143e9602084016141aa565b60208201526143fa604084016141aa565b6040820152606083013560608201526080830135608082015260a08301358281111561442557600080fd5b614431878286016142f9565b60a08301525095945050505050565b60005b8381101561445b578181015183820152602001614443565b8381111561446a576000848401525b50505050565b60008151808452614488816020860160208601614440565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015614523577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952614511838351614470565b988401989250908301906001016144d7565b5090979650505050505050565b85815284602082015283604082015282606082015260a06080820152600061351060a08301846144ba565b6020808252825182820181905260009190848201906040850190845b818110156145a957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101614577565b50909695505050505050565b6020815260006141a36020830184614470565b6000602082840312156145da57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156146c8578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156146b35783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190614671565b50978a01979550505091870191600101614609565b50919998505050505050505050565b6000602082840312156146e957600080fd5b813567ffffffffffffffff81111561470057600080fd5b8201601f8101841361471157600080fd5b613ee9848235602084016142bb565b8481526080602082015260006147396080830186614470565b828103604084015261474b8186614470565b9050828103606084015261351081856144ba565b803563ffffffff8116811461323157600080fd5b6000806000806080858703121561478957600080fd5b6147928561475f565b93506147a06020860161475f565b92506147ae6040860161475f565b91506147bc6060860161475f565b905092959194509250565b828152604060208201526000613ee96040830184614470565b600080604083850312156147f357600080fd5b6147fc8361475f565b915061480a6020840161475f565b90509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614886577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452614874858351614470565b9450928501929085019060010161483a565b5092979650505050505050565b803567ffffffffffffffff8116811461323157600080fd5b600080600080600080600060e0888a0312156148c657600080fd5b6148cf886141aa565b96506148dd602089016141aa565b955060408801359450606088013593506148f960808901614893565b925060a088013567ffffffffffffffff81111561491557600080fd5b6149218a828b016142f9565b92505061493060c08901614893565b905092959891949750929550565b6000806000806080858703121561495457600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561498257600080fd5b813567ffffffffffffffff81111561499957600080fd5b820161012081850312156141a357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006149e96142c984614275565b90508281528383830111156149fd57600080fd5b6141a3836020830184614440565b600060208284031215614a1d57600080fd5b815167ffffffffffffffff811115614a3457600080fd5b8201601f81018413614a4557600080fd5b613ee9848251602084016149db565b600082601f830112614a6557600080fd5b6141a3838351602085016149db565b600060208284031215614a8657600080fd5b815167ffffffffffffffff811115614a9d57600080fd5b613ee984828501614a54565b600060208284031215614abb57600080fd5b5051919050565b600082601f830112614ad357600080fd5b8151602067ffffffffffffffff80831115614af057614af06141ce565b8260051b614aff838201614226565b9384528581018301938381019088861115614b1957600080fd5b84880192505b85831015614b5557825184811115614b375760008081fd5b614b458a87838c0101614a54565b8352509184019190840190614b1f565b98975050505050505050565b600080600080600060a08688031215614b7957600080fd5b85519450602086015193506040860151925060608601519150608086015167ffffffffffffffff811115614bac57600080fd5b614bb888828901614ac2565b9150509295509295909350565b60008060408385031215614bd857600080fd5b505080516020909101519092909150565b60008060008060808587031215614bff57600080fd5b84519350602085015167ffffffffffffffff80821115614c1e57600080fd5b614c2a88838901614a54565b94506040870151915080821115614c4057600080fd5b614c4c88838901614a54565b93506060870151915080821115614c6257600080fd5b50614c6f87828801614ac2565b91505092959194509250565b60008060408385031215614c8e57600080fd5b82519150602083015167ffffffffffffffff811115614cac57600080fd5b614cb885828601614a54565b9150509250929050565b600181811c90821680614cd657607f821691505b602082108103614d0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251614d4f816004850160208701614440565b919091016004019392505050565b60008251614d6f818460208701614440565b9190910192915050565b8015158114614d8757600080fd5b50565b600060208284031215614d9c57600080fd5b81516141a381614d79565b600060208284031215614db957600080fd5b6141a3826141aa565b600060208284031215614dd457600080fd5b6141a382614893565b600060208284031215614def57600080fd5b81356141a381614d79565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112614e2f57600080fd5b83018035915067ffffffffffffffff821115614e4a57600080fd5b60200191503681900382131561267b57600080fd5b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614f0c57614f0c614eac565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614f4b57614f4b614eac565b500290565b60008219821115614f6357614f63614eac565b500190565b600081614f7757614f77614eac565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fe736372697074732f646966666572656e7469616c2d74657374696e672f646966666572656e7469616c2d74657374696e6730783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303067657450726f76655769746864726177616c5472616e73616374696f6e496e70757473a164736f6c634300080f000aa164736f6c634300080f000a0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff0000",
    "sourceMap": "1572:26:1:-:0;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;3161:44:5;;;;;;;;;;;2452:28:216;;;2476:3;-1:-1:-1;;;;;;2452:28:216;;;;;;;;2486:26;;;1572::1;2486::216;;;;;;;;2518:31;;;2545:3;2518:31;;;;;;2556:43;;;;2605:47;;;;;2693:3;2658:38;;2702:32;;;;;2777:5;2740:42;;;216:2:283;2820:22:216;198:21:283;255:1;235:18;228:29;-1:-1:-1;;;273:18:283;266:38;2820:22:216;1276:4091:224;2820:22:216;2810:33;2788:55;;-1:-1:-1;2849:95:216;;321:18:283;2849:95:216;;;321:18:283;2849:95:216;;;;;;;;;:::i;:::-;-1:-1:-1;4137:100:216;;;-1:-1:-1;;;;;;4137:100:216;;;312:42:166;4137:100:216;;;;4273:70;;;;;4301:42;4273:70;;;4349:67;;;;;;4374:42;4349:67;;;4460:4;4422:42;;4501:1;4470:32;;4547:3;4508:42;;4593:4;4556:41;;4648:6;4603:51;;1276:4091:224;;;;;;;;;;;;350:127:283;411:10;406:3;402:20;399:1;392:31;442:4;439:1;432:15;466:4;463:1;456:15;482:380;561:1;557:12;;;;604;;;625:61;;679:4;671:6;667:17;657:27;;625:61;732:2;724:6;721:14;701:18;698:38;695:161;;778:10;773:3;769:20;766:1;759:31;813:4;810:1;803:15;841:4;838:1;831:15;695:161;;482:380;;;:::o;992:544::-;1093:2;1088:3;1085:11;1082:448;;;1129:1;1154:5;1150:2;1143:17;1199:4;1195:2;1185:19;1269:2;1257:10;1253:19;1250:1;1246:27;1240:4;1236:38;1305:4;1293:10;1290:20;1287:47;;;-1:-1:-1;1328:4:283;1287:47;1383:2;1378:3;1374:12;1371:1;1367:20;1361:4;1357:31;1347:41;;1438:82;1456:2;1449:5;1446:13;1438:82;;;1501:17;;;1482:1;1471:13;1438:82;;;1442:3;;;1082:448;992:544;;;:::o;1712:1349::-;1831:10;;-1:-1:-1;;;;;1853:30:283;;1850:56;;;1886:18;;:::i;:::-;1915:96;2004:6;1964:38;1996:4;1990:11;1964:38;:::i;:::-;1958:4;1915:96;:::i;:::-;2066:4;;2130:2;2119:14;;2147:1;2142:662;;;;2848:1;2865:6;2862:89;;;-1:-1:-1;2917:19:283;;;2911:26;2862:89;-1:-1:-1;;1669:1:283;1665:11;;;1661:24;1657:29;1647:40;1693:1;1689:11;;;1644:57;2964:81;;2112:943;;2142:662;939:1;932:14;;;976:4;963:18;;-1:-1:-1;;2178:20:283;;;2295:236;2309:7;2306:1;2303:14;2295:236;;;2398:19;;;2392:26;2377:42;;2490:27;;;;2458:1;2446:14;;;;2325:19;;2295:236;;;2299:3;2559:6;2550:7;2547:19;2544:201;;;2620:19;;;2614:26;-1:-1:-1;;2703:1:283;2699:14;;;2715:3;2695:24;2691:37;2687:42;2672:58;2657:74;;2544:201;-1:-1:-1;;;;;2791:1:283;2775:14;;;2771:22;2758:36;;-1:-1:-1;1712:1349:283:o;:::-;1276:4091:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1276:4091:224:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:493;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;2983:563:224:-;;;;;;:::i;:::-;;:::i;5259:741:216:-;;;:::i;1866:141:8:-;;;:::i;3659:1496:224:-;;;;;;:::i;:::-;;:::i;1819:584:1:-;;;:::i;:::-;;;4958:14:283;;4951:22;4933:41;;4921:2;4906:18;1819:584:1;4793:187:283;5069:133:216;;;;;;:::i;:::-;;:::i;5161:204:224:-;;;;;;:::i;:::-;5335:3;5331:17;5301:19;5297:32;;;;5294:55;;5161:204;;;;5718:25:283;;;5706:2;5691:18;5161:204:224;5545::283;2013:142:8;;;:::i;1500:1348:224:-;;;;;;:::i;:::-;;:::i;1572:26:1:-;;;;;;;;;779:493:224;830:13;:11;:13::i;:::-;854:11;886:4;868:24;;;;;:::i;:::-;5930:42:283;5918:55;;;5900:74;;5888:2;5873:18;868:24:224;;;;;;;;;;;;;;;;;;;;;;;854:38;;902:23;928:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1051:48:224;;;1092:4;1051:48;;;;5900:74:283;;;;1051:48:224;;;;;;;;;;5873:18:283;;;;1051:48:224;;;;;;;;;;;;;963:147;;;;;902:50;;-1:-1:-1;963:22:224;;;;;;:147;;902:50;;1051:48;963:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1120:7:224;:44;;;;;;;;;;;;;1174:53;;;;;;;;;7676:74:283;;;;7766:18;;;7759:30;7825:2;7805:18;;;7798:30;7864:25;7844:18;;;7837:53;1174:8:224;;;;7907:19:283;;1174:53:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1238:9:224;:27;;;;;;;;;;;;;;;-1:-1:-1;;779:493:224:o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2983:563:224;3200:11;3234:21;3240:8;3234:21;;3250:1;3253;3234:5;:21::i;:::-;3435:53;;;8583:4:283;8571:17;;3435:53:224;;;;8553:36:283;;;;3435:53:224;;;;;;;;;;8526:18:283;;;;3435:53:224;;;;;;;;;3458:25;3435:53;;;3419:70;;;;;5301:19;5297:32;;;;5331:17;5294:55;;3200:57;;-1:-1:-1;3419:15:224;;;;:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3499:7:224;;:40;;;;;:7;;;;;-1:-1:-1;3499:14:224;;-1:-1:-1;3499:40:224;;3514:2;;3518:9;;3529;;;;3499:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3089:457;2983:563;;;;:::o;5259:741:216:-;5344:12;;;5308:23;5344:12;;;;;;;;;;5334:23;;;;5393:6;;:24;;;;;;5308:23;;5393:6;;;;;:22;;:24;;;;;5344:12;;5393:24;;;;;;:6;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5367:50;;5427:23;5453:6;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5427:50;;5487:34;5505:15;5487:17;:34::i;:::-;5556:6;;:26;;;;;;;;5531:22;;5556:6;;;:24;;:26;;;;;;;;;;;;;;:6;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5531:51;;5646:62;5655:15;5689:18;;5672:14;:35;;;;:::i;:::-;5646:8;:62::i;:::-;5719:7;;5727:19;:15;5745:1;5727:19;:::i;:::-;5719:28;;;;;;;;;;;;;5718:25:283;;5706:2;5691:18;;5545:204;5719:28:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5758:37:216;;;;;5772:4;5758:37;;;10851:41:283;;;10908:18;;;10901:50;;;10967:18;;;10960:50;;;11026:18;;;11019:50;5758:13:216;;-1:-1:-1;5758:13:216;;-1:-1:-1;10823:19:283;;5758:37:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:15;5842;5825;5810:82;5876:15;5810:82;;;;5718:25:283;;5706:2;5691:18;;5545:204;5810:82:216;;;;;;;;5912:8;;;5903:18;;;;;:8;5912;;;5903:18;;;5900:74:283;5903:8:216;;;;5873:18:283;5903::216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5931:6:216;;:62;;;;;;;;11327:25:283;;;11368:18;;;11361:34;;;5931:6:216;11411:18:283;;;11404:34;;;11454:18;;;11447:34;5931:6:216;;;;;-1:-1:-1;5931:22:216;;-1:-1:-1;11299:19:283;;5931:62:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5298:702;;;;5259:741::o;1866:141:8:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:1496:224;3878:11;3912:21;3918:8;3912:21;;3928:1;3931;3912:5;:21::i;:::-;3878:57;-1:-1:-1;5331:17:224;5301:19;5297:32;;5294:55;4026:60;;4177:7;4172:128;4190:1;4186;:5;;;4172:128;;;4212:7;;4277:9;;4212:77;;;;;11746:4:283;11734:17;;4212:77:224;;;11716:36:283;4212:7:224;4277:9;;;11768:18:283;;;11761:83;4212:7:224;;;:25;;11689:18:283;;4212:77:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4193:3;;;;;:::i;:::-;;;;4172:128;;;-1:-1:-1;4374:39:224;;;;;309:37:2;4374:39:224;;;10851:41:283;;;4395:4:224;10908:18:283;;;10901:50;;;10967:18;;;10960:50;11026:18;;;11019:50;4374:13:224;;;;10823:19:283;;4374:39:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4428:45:224;;4463:9;;-1:-1:-1;4428:45:224;;;;-1:-1:-1;4455:1:224;;4428:45;;4455:1;;4428:45;4504:7;;:40;;;;;4483:18;;4504:7;;;:14;;:40;;4519:2;;4523:9;;4534;;;;4504:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4598:7;;:39;;;;;4483:61;;-1:-1:-1;4556:17:224;;;;4598:7;;;:13;;:39;;4612:2;;4616:9;;4627;;;;4598:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4555:82;;;;4731:39;4748:4;4763:5;4731:8;:39::i;:::-;4780:54;4806:9;4780:54;;4818:15;4780:8;:54::i;:::-;5042:7;;:45;;;;;4962:15;;;;5014:26;;4962:15;5042:7;;:19;;:45;;5062:2;;5066:9;;5077;;;;5042:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4991:97;;;;;;5718:25:283;;5706:2;5691:18;;5545:204;4991:97:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:136;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5108:7:224;;:40;;;;;:7;;;;;-1:-1:-1;5108:14:224;;-1:-1:-1;5108:40:224;;5123:2;;5127:9;;5138;;;;5108:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3767:1388;;;;3659:1496;;;;:::o;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;13267:74:283;;;2221:17:1;13357:18:283;;;13350:34;2196:43:1;;;;;;;;;13240:18:283;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;5069:133:216:-;5147:6;;:43;;;;;;;;5718:25:283;;;5139:7:216;;;;;5147:6;;;;:25;;5691:18:283;;5147:43:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;5193:1;5147:47;:::i;:::-;5139:56;;;;;;;;;;;;;5718:25:283;;5706:2;5691:18;;5545:204;5139:56:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5069:133;:::o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1500:1348:224:-;1711:11;1745:21;1751:8;1745:21;;1761:1;1764;1745:5;:21::i;:::-;1711:57;-1:-1:-1;5331:17:224;5301:19;5297:32;;5294:55;1859:60;;2010:7;2005:128;2023:1;2019;:5;;;2005:128;;;2045:7;;2110:9;;2045:77;;;;;11746:4:283;11734:17;;2045:77:224;;;11716:36:283;2045:7:224;2110:9;;;11768:18:283;;;11761:83;2045:7:224;;;:25;;11689:18:283;;2045:77:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:3;;;;;:::i;:::-;;;;2005:128;;;-1:-1:-1;2143:39:224;;;;;309:37:2;2143:39:224;;;10851:41:283;;;2164:4:224;10908:18:283;;;10901:50;;;10967:18;;;10960:50;11026:18;;;11019:50;2143:13:224;;;;10823:19:283;;2143:39:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2197:45:224;;2232:9;;-1:-1:-1;2197:45:224;;;;-1:-1:-1;2224:1:224;;2197:45;;2224:1;;2197:45;2273:7;;:40;;;;;2252:18;;2273:7;;;:14;;:40;;2288:2;;2292:9;;2303;;;;2273:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2367:7;;:39;;;;;2252:61;;-1:-1:-1;2325:17:224;;;;2367:7;;;:13;;:39;;2381:2;;2385:9;;2396;;;;2367:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2324:82;;;;2501:39;2518:4;2533:5;2501:8;:39::i;:::-;2550:54;2576:9;2550:54;;2588:15;2550:8;:54::i;:::-;2623:7;;:19;;;;;;;;2614:32;;2623:7;;;:17;;:19;;;;;;;;;;;;;;:7;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2644:1;2614:8;:32::i;:::-;2704:7;;:22;;;;;2660:20;2704:22;;;5718:25:283;;;2660:20:224;;;2704:7;;;;;:19;;5691:18:283;;2704:22:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2657:69;;;;;2736:40;2753:5;2769;2736:8;:40::i;:::-;2786:55;2812:10;2786:55;;2825:15;2786:8;:55::i;:::-;1600:1248;;;;;;1500:1348;;;;:::o;6006:1276:216:-;6057:13;:11;:13::i;:::-;6091:20;;;;;;;;;;;;;;;;;;:8;:20::i;:::-;6080:8;:31;;;;;;;;;;;;;;;6302:17;;:21;;-1:-1:-1;6302:21:216;:::i;:::-;6289:10;:34;;;6333:19;;;;;;;;5718:25:283;;;;6333:7:216;;;;5691:18:283;;6333:19:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6370:19:216;;6362:28;;;;;;;;5718:25:283;;;;6362:7:216;;-1:-1:-1;6362:7:216;;-1:-1:-1;5691:18:283;;6362:28:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6543:18;;6589:11;;6642:25;;6489:189;;;;;:::i;:::-;15363:25:283;;;15419:2;15404:18;;15397:34;;;;15462:2;15447:18;;15440:34;15351:2;15336:18;6489:189:216;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6476:10:216;:202;;;;;;;;;;;6712:8;;6702:19;;-1:-1:-1;;6712:8:216;;;;;6702:19;;;:::i;:::-;5930:42:283;5918:55;;;5900:74;;5888:2;5873:18;6702:19:216;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6740:8:216;;6731:18;;;;;:8;6740;;;6731:18;;;5900:74:283;6688:33:216;;-1:-1:-1;6731:8:216;;;;5873:18:283;;6731::216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6803:10:216;;6871:19;;6892:17;;6911:8;;;6921:5;;6828:100;;;;;15716:25:283;;;;15757:18;;;15750:34;;;;6759:22:216;6911:8;;;15861:18:283;;;15854:43;6921:5:216;;;15913:18:283;;;15906:43;6759:22:216;;;;-1:-1:-1;6759:22:216;;-1:-1:-1;6803:10:216;;;;15688:19:283;;6828:100:216;;;;;;;;;;;;;;;;;;;;;;;;6759:179;;6828:100;6759:179;;;;;;;;;6828:100;6759:179;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6948:6:216;:39;;;;;;;;;;;;;6997:43;;;;;;;;;16172:74:283;;;;16262:18;;;16255:30;16321:2;16301:18;;;16294:30;16360:16;16340:18;;;16333:44;6997:8:216;;;;16394:19:283;;6997:43:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7165:25:216;;7113:7;;-1:-1:-1;7113:7:216;;-1:-1:-1;312:42:166;;7165:25:216;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7157:39;;;;;;;;;;;;;;;;;;;;;;;;;7113:84;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7208:67:216;;;;;;312:42:166;7208:67:216;;;16636:74:283;16726:18;;;16719:30;;;;16785:2;16765:18;;;16758:30;16824:21;16804:18;;;16797:49;7208:8:216;;-1:-1:-1;7208:8:216;;-1:-1:-1;16863:19:283;;7208:67:216;16424:464:283;2815:190:13;2898:14;2933:19;2940:1;2943:3;2948;2933:6;:19::i;:::-;2924:28;;2962:36;;;;;;;;;;;;;;;;;;2991:6;2962:12;:36::i;:::-;2815:190;;;;;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;17095:2:283;17077:21;;;17134:2;17114:18;;;17107:30;17173:34;17168:2;17153:18;;17146:62;17244:4;17239:2;17224:18;;17217:32;17281:3;17266:19;;16893:398;5293:41:1;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;3685:6;;:1;:6;;;3681:212;;3712:44;;;;;18532:2:283;18514:21;;;18571:2;18551:18;;;18544:30;18610:34;18605:2;18590:18;;18583:62;18681:7;18676:2;18661:18;;18654:35;18721:3;18706:19;;18330:401;3712:44:1;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;3244:396:216:-;3333:5;;3325:23;;;;;:7;3333:5;;;3325:23;;;13267:74:283;3340:7:216;13357:18:283;;;13350:34;3325:7:216;;;;13240:18:283;;3325:23:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3366:3:216;;3358:21;;;;;:7;3366:3;;;3358:21;;;13267:74:283;3371:7:216;13357:18:283;;;13350:34;3358:7:216;;-1:-1:-1;3358:7:216;;-1:-1:-1;13240:18:283;;3358:21:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3397:8:216;;3389:26;;;;;:7;3397:8;;;3389:26;;;13267:74:283;3407:7:216;13357:18:283;;;13350:34;3389:7:216;;-1:-1:-1;3389:7:216;;-1:-1:-1;13240:18:283;;3389:26:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3435:5:216;;3426:24;;;;;;:8;3435:5;;;3426:24;;;20066:74:283;20156:18;;;20149:30;20215:1;20195:18;;;20188:29;20253:7;20233:18;;;20226:35;3426:8:216;;-1:-1:-1;3426:8:216;;-1:-1:-1;20278:19:283;;3426:24:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3469:3:216;;3460:20;;;;;;:8;3469:3;;;3460:20;;;20520:74:283;20610:18;;;20603:30;20669:1;20649:18;;;20642:29;20707:5;20687:18;;;20680:33;3460:8:216;;-1:-1:-1;3460:8:216;;-1:-1:-1;20730:19:283;;3460:20:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3499:8:216;;3490:30;;;;;;:8;3499;;;3490:30;;;20972:74:283;21062:18;;;21055:30;21121:1;21101:18;;;21094:29;21159:10;21139:18;;;21132:38;3490:8:216;;-1:-1:-1;3490:8:216;;-1:-1:-1;21187:19:283;;3490:30:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3580:18:216;;;;;3587:10;3580:18;;;5718:25:283;3580:6:216;;-1:-1:-1;3580:6:216;;-1:-1:-1;5691:18:283;;3580::216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3615;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3609:3:216;:24;;;;;;;;;;;;;;;3244:396::o;16415:125:6:-;16479:12;16513:20;16528:4;16513:14;:20::i;:::-;-1:-1:-1;16503:30:6;16415:125;-1:-1:-1;;16415:125:6:o;1546:1263:13:-;1630:14;1671:3;1664;:10;;1656:85;;;;;;;21618:2:283;1656:85:13;;;21600:21:283;21657:2;21637:18;;;21630:30;21696:34;21676:18;;;21669:62;21767:32;21747:18;;;21740:60;21817:19;;1656:85:13;;;;;;;;1975:3;1970:1;:8;;:20;;;;;1987:3;1982:1;:8;;1970:20;1966:34;;;-1:-1:-1;1999:1:13;1992:8;;1966:34;2011:12;2026:9;2032:3;2026;:9;:::i;:::-;:13;;2038:1;2026:13;:::i;:::-;2011:28;;2234:1;2229;:6;;:18;;;;;2246:1;2239:4;:8;2229:18;2225:38;;;2256:7;2262:1;2256:3;:7;:::i;:::-;2249:14;;;;;2225:38;2282:15;2296:1;1042:78;2282:15;:::i;:::-;2277:1;:20;;:46;;;;-1:-1:-1;2308:15:13;2322:1;1042:78;2308:15;:::i;:::-;2301:4;:22;2277:46;2273:82;;;2339:15;2353:1;1042:78;2339:15;:::i;:::-;2332:23;;:3;:23;:::i;2273:82::-;2459:3;2455:1;:7;2451:352;;;2478:12;2493:7;2497:3;2493:1;:7;:::i;:::-;2478:22;-1:-1:-1;2514:11:13;2528;2535:4;2478:22;2528:11;:::i;:::-;2514:25;;2557:3;2564:1;2557:8;2553:24;;2574:3;2567:10;;;;;;;2553:24;2612:1;2600:9;2606:3;2600;:9;:::i;:::-;:13;;;;:::i;:::-;2591:22;;2464:160;;2451:352;;;2638:3;2634:1;:7;2630:173;;;2657:12;2672:7;2678:1;2672:3;:7;:::i;:::-;2657:22;-1:-1:-1;2693:11:13;2707;2714:4;2657:22;2707:11;:::i;:::-;2693:25;;2736:3;2743:1;2736:8;2732:24;;2753:3;2746:10;;;;;;;2732:24;2779:9;2785:3;2779;:9;:::i;:::-;:13;;2791:1;2779:13;:::i;:::-;2770:22;;2643:160;;2630:173;1646:1163;1546:1263;;;;;:::o;10096:207::-;10172:11;679:42;10188:36;;10272:2;10276;10225:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;10188:92;;;10225:54;10188:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:432:1;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;22746:74:283;;;2677:17:1;22836:18:283;;;22829:34;;;;2712:4:1;22879:18:283;;;22872:34;2489:11:1;;1671:64;2586:43;;22719:18:283;;2652:67:1;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;;;;;;;2409:432::o;16134:242:6:-;16204:12;16218:18;16296:4;16279:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;16269:33;;16279:22;16269:33;;;;16320:19;;;;;;5718:25:283;;;16269:33:6;-1:-1:-1;16320:7:6;;;;5691:18:283;;16320:19:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16349:20;;;;;16313:26;;-1:-1:-1;16349:8:6;;;;:20;;16313:26;;16364:4;;16349:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16134:242;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:681:283:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:283;;14:681;-1:-1:-1;;;;;;14:681:283:o;700:1695::-;902:4;931:2;971;960:9;956:18;1001:2;990:9;983:21;1024:6;1059;1053:13;1090:6;1082;1075:22;1116:2;1106:12;;1149:2;1138:9;1134:18;1127:25;;1211:2;1201:6;1198:1;1194:14;1183:9;1179:30;1175:39;1249:2;1241:6;1237:15;1270:1;1291;1301:1065;1317:6;1312:3;1309:15;1301:1065;;;1386:22;;;1410:66;1382:95;1370:108;;1501:13;;1588:9;;1599:42;1584:58;1569:74;;1682:11;;1676:18;1714:15;;;1707:27;;;1795:19;;1541:15;;;1827:24;;;1917:21;;;;1962:1;;1885:2;1873:15;;;1976:282;1992:8;1987:3;1984:17;1976:282;;;2073:15;;2090:66;2069:88;2055:103;;2227:17;;;;2020:1;2011:11;;;;;2184:14;;;;1976:282;;;-1:-1:-1;2344:12:283;;;;2281:5;-1:-1:-1;;;2309:15:283;;;;1343:1;1334:11;1301:1065;;;-1:-1:-1;2383:6:283;;700:1695;-1:-1:-1;;;;;;;;;700:1695:283:o;2400:258::-;2472:1;2482:113;2496:6;2493:1;2490:13;2482:113;;;2572:11;;;2566:18;2553:11;;;2546:39;2518:2;2511:10;2482:113;;;2613:6;2610:1;2607:13;2604:48;;;2648:1;2639:6;2634:3;2630:16;2623:27;2604:48;;2400:258;;;:::o;2663:317::-;2705:3;2743:5;2737:12;2770:6;2765:3;2758:19;2786:63;2842:6;2835:4;2830:3;2826:14;2819:4;2812:5;2808:16;2786:63;:::i;:::-;2894:2;2882:15;2899:66;2878:88;2869:98;;;;2969:4;2865:109;;2663:317;-1:-1:-1;;2663:317:283:o;2985:862::-;3147:4;3176:2;3216;3205:9;3201:18;3246:2;3235:9;3228:21;3269:6;3304;3298:13;3335:6;3327;3320:22;3373:2;3362:9;3358:18;3351:25;;3435:2;3425:6;3422:1;3418:14;3407:9;3403:30;3399:39;3385:53;;3473:2;3465:6;3461:15;3494:1;3504:314;3518:6;3515:1;3512:13;3504:314;;;3607:66;3595:9;3587:6;3583:22;3579:95;3574:3;3567:108;3698:40;3731:6;3722;3716:13;3698:40;:::i;:::-;3688:50;-1:-1:-1;3796:12:283;;;;3761:15;;;;3540:1;3533:9;3504:314;;;-1:-1:-1;3835:6:283;;2985:862;-1:-1:-1;;;;;;;2985:862:283:o;3852:114::-;3936:4;3929:5;3925:16;3918:5;3915:27;3905:55;;3956:1;3953;3946:12;3905:55;3852:114;:::o;3971:817::-;4084:6;4092;4100;4108;4161:2;4149:9;4140:7;4136:23;4132:32;4129:52;;;4177:1;4174;4167:12;4129:52;4216:9;4203:23;4235:29;4258:5;4235:29;:::i;:::-;4283:5;-1:-1:-1;4335:2:283;4320:18;;4307:32;;-1:-1:-1;4390:2:283;4375:18;;4362:32;4413:18;4443:14;;;4440:34;;;4470:1;4467;4460:12;4440:34;4508:6;4497:9;4493:22;4483:32;;4553:7;4546:4;4542:2;4538:13;4534:27;4524:55;;4575:1;4572;4565:12;4524:55;4615:2;4602:16;4641:2;4633:6;4630:14;4627:34;;;4657:1;4654;4647:12;4627:34;4702:7;4697:2;4688:6;4684:2;4680:15;4676:24;4673:37;4670:57;;;4723:1;4720;4713:12;4670:57;3971:817;;;;-1:-1:-1;;4754:2:283;4746:11;;-1:-1:-1;;;3971:817:283:o;4985:180::-;5044:6;5097:2;5085:9;5076:7;5072:23;5068:32;5065:52;;;5113:1;5110;5103:12;5065:52;-1:-1:-1;5136:23:283;;4985:180;-1:-1:-1;4985:180:283:o;5170:370::-;5295:6;5303;5356:2;5344:9;5335:7;5331:23;5327:32;5324:52;;;5372:1;5369;5362:12;5324:52;5408:9;5395:23;5385:33;;5468:2;5457:9;5453:18;5440:32;5481:29;5504:5;5481:29;:::i;:::-;5529:5;5519:15;;;5170:370;;;;;:::o;5985:338::-;6172:42;6164:6;6160:55;6149:9;6142:74;6252:2;6247;6236:9;6232:18;6225:30;6123:4;6272:45;6313:2;6302:9;6298:18;6290:6;6272:45;:::i;:::-;6264:53;5985:338;-1:-1:-1;;;;5985:338:283:o;6328:184::-;6380:77;6377:1;6370:88;6477:4;6474:1;6467:15;6501:4;6498:1;6491:15;6517:942;6596:6;6649:2;6637:9;6628:7;6624:23;6620:32;6617:52;;;6665:1;6662;6655:12;6617:52;6698:9;6692:16;6727:18;6768:2;6760:6;6757:14;6754:34;;;6784:1;6781;6774:12;6754:34;6822:6;6811:9;6807:22;6797:32;;6867:7;6860:4;6856:2;6852:13;6848:27;6838:55;;6889:1;6886;6879:12;6838:55;6918:2;6912:9;6940:2;6936;6933:10;6930:36;;;6946:18;;:::i;:::-;7080:2;7074:9;7142:4;7134:13;;6985:66;7130:22;;;7154:2;7126:31;7122:40;7110:53;;;7178:18;;;7198:22;;;7175:46;7172:72;;;7224:18;;:::i;:::-;7264:10;7260:2;7253:22;7299:2;7291:6;7284:18;7339:7;7334:2;7329;7325;7321:11;7317:20;7314:33;7311:53;;;7360:1;7357;7350:12;7311:53;7373:55;7425:2;7420;7412:6;7408:15;7403:2;7399;7395:11;7373:55;:::i;:::-;7447:6;6517:942;-1:-1:-1;;;;;;;6517:942:283:o;7937:437::-;8016:1;8012:12;;;;8059;;;8080:61;;8134:4;8126:6;8122:17;8112:27;;8080:61;8187:2;8179:6;8176:14;8156:18;8153:38;8150:218;;8224:77;8221:1;8214:88;8325:4;8322:1;8315:15;8353:4;8350:1;8343:15;8150:218;;7937:437;;;:::o;8600:218::-;8747:2;8736:9;8729:21;8710:4;8767:45;8808:2;8797:9;8793:18;8785:6;8767:45;:::i;8823:658::-;9103:4;9095:6;9091:17;9080:9;9073:36;9145:6;9140:2;9129:9;9125:18;9118:34;9188:2;9183;9172:9;9168:18;9161:30;9227:6;9222:2;9211:9;9207:18;9200:34;9285:6;9277;9271:3;9260:9;9256:19;9243:49;9342:1;9312:22;;;9336:3;9308:32;;;9301:43;;;;9396:2;9384:15;;;9401:66;9380:88;9365:104;9361:114;;8823:658;-1:-1:-1;;;8823:658:283:o;9486:168::-;9586:42;9579:5;9575:54;9568:5;9565:65;9555:93;;9644:1;9641;9634:12;9659:287;9751:6;9804:2;9792:9;9783:7;9779:23;9775:32;9772:52;;;9820:1;9817;9810:12;9772:52;9852:9;9846:16;9871:45;9910:5;9871:45;:::i;9951:184::-;10021:6;10074:2;10062:9;10053:7;10049:23;10045:32;10042:52;;;10090:1;10087;10080:12;10042:52;-1:-1:-1;10113:16:283;;9951:184;-1:-1:-1;9951:184:283:o;10140:::-;10192:77;10189:1;10182:88;10289:4;10286:1;10279:15;10313:4;10310:1;10303:15;10329:128;10369:3;10400:1;10396:6;10393:1;10390:13;10387:39;;;10406:18;;:::i;:::-;-1:-1:-1;10442:9:283;;10329:128::o;11855:175::-;11892:3;11936:4;11929:5;11925:16;11965:4;11956:7;11953:17;11950:43;;11973:18;;:::i;:::-;12022:1;12009:15;;11855:175;-1:-1:-1;;11855:175:283:o;12035:199::-;12137:13;;12190:18;12179:30;;12169:41;;12159:69;;12224:1;12221;12214:12;12239:426;12371:6;12379;12432:2;12420:9;12411:7;12407:23;12403:32;12400:52;;;12448:1;12445;12438:12;12400:52;12480:9;12474:16;12499:45;12538:5;12499:45;:::i;:::-;12563:5;-1:-1:-1;12587:72:283;12655:2;12640:18;;12587:72;:::i;:::-;12577:82;;12239:426;;;;;:::o;13395:417::-;13592:66;13584:6;13580:79;13575:3;13568:92;13550:3;13689:6;13683:13;13705:61;13759:6;13755:1;13750:3;13746:11;13739:4;13731:6;13727:17;13705:61;:::i;:::-;13786:16;;;;13804:1;13782:24;;13395:417;-1:-1:-1;;;13395:417:283:o;13817:274::-;13946:3;13984:6;13978:13;14000:53;14046:6;14041:3;14034:4;14026:6;14022:17;14000:53;:::i;:::-;14069:16;;;;;13817:274;-1:-1:-1;;13817:274:283:o;14096:277::-;14163:6;14216:2;14204:9;14195:7;14191:23;14187:32;14184:52;;;14232:1;14229;14222:12;14184:52;14264:9;14258:16;14317:5;14310:13;14303:21;14296:5;14293:32;14283:60;;14339:1;14336;14329:12;14568:588;14739:6;14747;14755;14808:2;14796:9;14787:7;14783:23;14779:32;14776:52;;;14824:1;14821;14814:12;14776:52;14856:9;14850:16;14875:29;14898:5;14875:29;:::i;:::-;14923:5;-1:-1:-1;14947:72:283;15015:2;15000:18;;14947:72;:::i;:::-;14937:82;;15064:2;15053:9;15049:18;15043:25;15077:47;15116:7;15077:47;:::i;:::-;15143:7;15133:17;;;14568:588;;;;;:::o;17460:348::-;17690:2;17679:9;17672:21;17653:4;17710:49;17755:2;17744:9;17740:18;17373:2;17361:15;;17408:12;17401:4;17392:14;;17385:36;17446:2;17437:12;;17296:159;17710:49;17702:57;;17795:6;17790:2;17779:9;17775:18;17768:34;17460:348;;;;:::o;17977:::-;18207:2;18196:9;18189:21;18170:4;18227:49;18272:2;18261:9;18257:18;17890:2;17878:15;;17925:12;17918:4;17909:14;;17902:36;17963:2;17954:12;;17813:159;18736:397;18966:2;18955:9;18948:21;18929:4;18986:49;19031:2;19020:9;19016:18;17373:2;17361:15;;17408:12;17401:4;17392:14;;17385:36;17446:2;17437:12;;17296:159;18986:49;18978:57;;19083:42;19075:6;19071:55;19066:2;19055:9;19051:18;19044:83;18736:397;;;;:::o;19138:::-;19368:2;19357:9;19350:21;19331:4;19388:49;19433:2;19422:9;19418:18;17890:2;17878:15;;17925:12;17918:4;17909:14;;17902:36;17963:2;17954:12;;17813:159;21847:125;21887:4;21915:1;21912;21909:8;21906:34;;;21920:18;;:::i;:::-;-1:-1:-1;21957:9:283;;21847:125::o;21977:266::-;22009:1;22035;22025:189;;22070:77;22067:1;22060:88;22171:4;22168:1;22161:15;22199:4;22196:1;22189:15;22025:189;-1:-1:-1;22228:9:283;;21977:266::o;22248:291::-;22425:2;22414:9;22407:21;22388:4;22445:45;22486:2;22475:9;22471:18;22463:6;22445:45;:::i;:::-;22437:53;;22526:6;22521:2;22510:9;22506:18;22499:34;22248:291;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "changeClaimStatus(bytes32,uint8)": "bd3300c9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "proposeAnotherOutput()": "abbd4aac",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFuzz_create_noImpl_reverts(uint8,bytes32,bytes)": "a8cc6657",
    "testFuzz_create_sameUUID_reverts(uint8,bytes32,bytes)": "b9bc9067",
    "testFuzz_create_succeeds(uint8,bytes32,bytes)": "ea9085c2",
    "warpToProposeTime(uint256)": "bcfceff2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputeProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"}],\"name\":\"DisputeGameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"}],\"name\":\"ImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"outputRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"l2OutputIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"l2BlockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"l1Timestamp\",\"type\":\"uint256\"}],\"name\":\"OutputProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prevNextOutputIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newNextOutputIndex\",\"type\":\"uint256\"}],\"name\":\"OutputsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"opaqueData\",\"type\":\"bytes\"}],\"name\":\"TransactionDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Claim\",\"name\":\"_claim\",\"type\":\"bytes32\"},{\"internalType\":\"VMStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeClaimStatus\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"out_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposeAnotherOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"testFuzz_create_noImpl_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"testFuzz_create_sameUUID_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"testFuzz_create_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextBlockNumber\",\"type\":\"uint256\"}],\"name\":\"warpToProposeTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"proposeAnotherOutput()\":{\"details\":\"Helper function to propose an output.\"},\"testFuzz_create_noImpl_reverts(uint8,bytes32,bytes)\":{\"details\":\"Tests that the `create` function reverts when there is no implementation      set for the given `GameType`.\"},\"testFuzz_create_sameUUID_reverts(uint8,bytes32,bytes)\":{\"details\":\"Tests that the `create` function reverts when there exists a dispute game with the same UUID.\"},\"testFuzz_create_succeeds(uint8,bytes32,bytes)\":{\"details\":\"Tests that the `create` function succeeds when creating a new dispute game      with a `GameType` that has an implementation set.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/DisputeGameFactory.t.sol\":\"DisputeGameFactory_Create_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol\":{\"keccak256\":\"0x220db41bfceb0146f86e9be87d3d954fd1d52eadcb3bbfc5cd89e5543a46fd1e\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://19155470db05e2e67a8c14f21cc903bb4833d8e5d248c2183073320c8a595705\",\"dweb:/ipfs/QmTchpXE8MMH1XcYxaZvx64UiVzBatbWy7Sw5HFhVJJjxi\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/L1CrossDomainMessenger.sol\":{\"keccak256\":\"0x1b6886b0037e6b35660b0db6aa7615b71340f23657c2b4db120378a742c72faf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://642e6e822ca1f35f7d1e63266ea632ebd7eb622edc9acef5233bcd842faa15a9\",\"dweb:/ipfs/QmU3nyCfxLvAKjxQkAFyCQSC25UZkkbyJ4QtCA7iNhbaMs\"]},\"src/L1/L1ERC721Bridge.sol\":{\"keccak256\":\"0xa943baf4fcddd41b0da5b3b3392875bb5d30b8bfabc0722f32c573dca9ea408e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6f541b46cec9cceb15d8609776d2ff1fb985df4d5cca3555e7a87872fbc5dde\",\"dweb:/ipfs/QmbvEQv7z6W1V6mVgzyu2Tk3SooiLt3A2dYrwHnQxS7DHm\"]},\"src/L1/L1StandardBridge.sol\":{\"keccak256\":\"0x35ae2b447592626550716957af070496dd4e0f0cc6440b58543fb72171ef1c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://add2df5575449afd798310d9785ac5c671b847b0e042ffe07616bf72a6f1204e\",\"dweb:/ipfs/QmTxPNKweCM5YZfTfF3kLqf9yggrdDDBENPcEp2izYzqP7\"]},\"src/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x42b2cc7e3810271a89265e8da623beeaee56454fea43e01e9ad9b27d2801f8a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://689bc5efdfe5defbd8615965f0fbaa5563454743de776cfda4cc01e8f3298f13\",\"dweb:/ipfs/QmVuNL1wdmD5z5JWor75EBTCJgP3yGHk6hXq3SG7kpFN8Z\"]},\"src/L1/OptimismPortal.sol\":{\"keccak256\":\"0xff8d10e6bae6e2cee376ae994c251c111b4e3db8a38f9b410218b7cd112de789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23d17cffb103277316cf97c434ff7d11df6107ca4bbba828398dc2c0914610b0\",\"dweb:/ipfs/QmehYAEVSSZnDtF56aoBWZQMsVeLvRMMQ5Mkji7uxK7nVm\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x7e0f0834172d2b4d69c97a4038eb9c1750a2a169f2aa99b5d5e5f878cfd1d144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bceb459b8c56334e8d26ed1cb069eebaa99c349571a8338b5d744aa95c93d134\",\"dweb:/ipfs/QmYdiHw7VpXQL6joqneakfAhTKjGYo5BDPZWSRaCk1tUZv\"]},\"src/L2/L2CrossDomainMessenger.sol\":{\"keccak256\":\"0xd5b45c5535f2c9e1744743304a106abf19448a7e2085bdbbd885f1c3a6245b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b20a79c0ea53699a8381f3e0addcc24fd4a4ffbfd730a2831df955c5385add7d\",\"dweb:/ipfs/QmaspRqrCKgw3ucD1jAfX4YXEr31TpFVLTBW35GTPzc3rb\"]},\"src/L2/L2ERC721Bridge.sol\":{\"keccak256\":\"0xcc0de3ee4e726fe4a0a52a0684fc30454a49190d600c7cbeade798ae020d70f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfa81e6c23f59237794bce97ad55cca091980c3db50bb295f836ab20cb58e4c8\",\"dweb:/ipfs/QmSpfckbZeoCEAASqxWdFm7t8q6Rqkqwk2jQFSCKEBXEVs\"]},\"src/L2/L2StandardBridge.sol\":{\"keccak256\":\"0xcfe651b949f47aa1b9b733e8c1058020107bafaed56608eb7ced48995323d370\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6265eadc6399ffd9743d2929862af4eff515a6bbd11a672cd45e8a83d75dbe3\",\"dweb:/ipfs/Qmd3gygBde6Nqimuc53CDZNqyLVcNPMBDfXkNE1TkVJ39d\"]},\"src/L2/L2ToL1MessagePasser.sol\":{\"keccak256\":\"0x67f440defc45e97bf1494274a9061876cbdcb10625707c534a0cb04b1c057e21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47900ccfcd1e4506d50dd3b14069da285eeb5f783020a0c74f58181b4c011460\",\"dweb:/ipfs/QmNUtEAxiwXT8QDbCHsX3uT4h2fh6k9f8LvMrmRK2N7K61\"]},\"src/L2/SequencerFeeVault.sol\":{\"keccak256\":\"0x09e9fd3796772cfc70c88a056ef76d832b2923560853532ada929bc837412077\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc667a6558cab037a38f8bec02c2f4e715b9dcffdce7addb22de6abc3aa304e\",\"dweb:/ipfs/QmTEJiqoxAfZQXZPy5Z5qWXiWJp4dzdXExdbcp4DBTAzyV\"]},\"src/dispute/DisputeGameFactory.sol\":{\"keccak256\":\"0xb2db064d41020f43a185ed72d763dd0effd518b72cf77564f6a2dce95448a460\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de0b42901f7e17493f40db3dd7b42c2d2d8cfe406076f85c5430cb9bbeb6f5bb\",\"dweb:/ipfs/QmXjMpLet6vTdtq6KuEVxo5Xm45wixsb4pTGyf3Et8iBK3\"]},\"src/dispute/interfaces/IBondManager.sol\":{\"keccak256\":\"0x31db84bf7a701125719c0bdaed316c8ec3d32e774a70b9bac3045d3ed272da8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35ef3970234b9a2d85ca800c5257398fd92a6959b0daa088b402a493ebf18d88\",\"dweb:/ipfs/QmWr1ZCBjRJPTUWyNcDv3G2Jb72cYG2p4rQA55WuUPUjao\"]},\"src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0xd9cebb758474716504ba281e8c9e007ead5be676a835729c236afec47dfb1e7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fba945be8dbca576b6765fccc5fe8e31109562b0f2e9f943fc8b6c65fffc9829\",\"dweb:/ipfs/QmTWcBnmMhb3odqu2kkJbKZK7HNeiE7SvfD9tjKv8F4qWF\"]},\"src/dispute/interfaces/IDisputeGameFactory.sol\":{\"keccak256\":\"0x9e525966fe0583cc20376a654542eec946ebd86a2802456678b5dc837c0ebf1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26eeb1479653eabbb00318dd4d9c46fdf76fe93b6c8ba7420c793b69a3cc871\",\"dweb:/ipfs/QmVq6Zvv5SVK8pYxvfjyi7nK2jtxmQmupix3TNeaMcBJ6g\"]},\"src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0xf021b03c9e887e227102b037595e0917b76546e796bec7aa4fdced61090267ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfbad382815e37355b7cc318fa333b9b5b08223d4315951fd0881430ab8d3df\",\"dweb:/ipfs/QmRng31WWpYeApQUcXJXhSdqL797drdtBwvUD6D9giCyy2\"]},\"src/dispute/lib/LibClock.sol\":{\"keccak256\":\"0x4599b150b8a3d53a9db22698666320e62261765e3ad5b58105bc93097b1a4690\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ab2d277fd4607510a5cafb91235a0fc3e47c3c0cdb45b2c185188ce888a1c5\",\"dweb:/ipfs/QmQ2bM3YmZCbN8uhKigSBh6j9VKrfxg61tjihwY7fdpARs\"]},\"src/dispute/lib/LibGameId.sol\":{\"keccak256\":\"0xa61b8562def4834607b733240e8eb4f924a75250df45852c9af1aea628f6b58d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2853075b45f634db083ea5f495f0cb9c28eb2401e2c18fd5fb7bce2500ed78ad\",\"dweb:/ipfs/QmaJpEg5z6tZ3niZY6N3f8AZ89FRnUVZJHNUDs66sq97j6\"]},\"src/dispute/lib/LibHashing.sol\":{\"keccak256\":\"0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920\",\"dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq\"]},\"src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0xf85659fff6f178903482bc12b9e908440dca33fbcda2258b1a665d1746a03c33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e51fb85a9f43c1b50c601d2e5cf343874ce3cb28d7823bea3f1ba5f23c28a9e\",\"dweb:/ipfs/QmcWQZsARwq6cfstzmCw8GnueH3QAkaPgdRpi7guQpKB6Q\"]},\"src/legacy/AddressManager.sol\":{\"keccak256\":\"0x1fcb990df6473f7fa360d5924d62d39ce2ca97d45668e3901e5405cfbe598b19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d08358b60dea54dbc32e988a1bb7ea909488063eaae3c5ae28a322f125c9b34\",\"dweb:/ipfs/QmZPQwdjLh9gaamNAoTUmWwwbRKj3yHovBYfnTPnfuKvUt\"]},\"src/legacy/L1ChugSplashProxy.sol\":{\"keccak256\":\"0xdde5626645fa217ad3a37805c4c3012e4251de01df868aae73b986f5d03cdb23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99fd0ec440c17c826465001dc88c5185dd41dc72396254fdd3cdfcc84aeae8c\",\"dweb:/ipfs/QmStHuecN89zBL8FH9SUK1TtkyYwfzMY2KkQaFJLHZLuyA\"]},\"src/legacy/LegacyERC20ETH.sol\":{\"keccak256\":\"0xc5849c3a3dd07b6883c2907c95971419e57d4cf480e68d959d6350a9d87479df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840447e39490ce5a69016e7089de82f221ab210322efabbf4b6869a2128b7dae\",\"dweb:/ipfs/QmTa2U8KPxVpQ2pfeneZV44LAWzMHiErypm9WCbSWVwBcr\"]},\"src/legacy/LegacyMintableERC20.sol\":{\"keccak256\":\"0x0b2dbfdc7425be6444be2894cdd0565f8da6cab59e1bbcfec7e7566898d9bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463d34adcc4003d1b421c61a53bb8290c18f2f239f5f4b7ea9e41444b460800f\",\"dweb:/ipfs/QmbwpbPZ2wfVJQ4bKKjNsHibkBo28E5H6vbJFhRAvLPrpK\"]},\"src/legacy/ResolvedDelegateProxy.sol\":{\"keccak256\":\"0x33425509c2982627f1e88977d76637096322954c474217bd4d03a3244814f332\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cb3702c3c280ebf65e636b2d2fd8533aebae69014304014353afee129415c53\",\"dweb:/ipfs/QmYpcVwF8hzwCcPqv535oENbars988N21MVvvDw9eQNaSf\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359\",\"dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd\"]},\"src/libraries/DisputeErrors.sol\":{\"keccak256\":\"0x2f9f090414125ee22bacf5926f8631445136385827f29764614920dcfbabc51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6d3b4b75fcb09d24e58b0187280fd2ff95e397d2a0bac8365800292616e106b\",\"dweb:/ipfs/QmSb2gBm8Us7gJ4xJgPveq9x8w18DDuWYcNWxo3vCph5iW\"]},\"src/libraries/DisputeTypes.sol\":{\"keccak256\":\"0x23c8fbebc8a9fbe0b170ce45405cec5ec9bd71380d0e30f0a07144f420e9fdf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fa6ad5d232e12fe7c575b86b00ff4164a0539bb017c0c7efea94d5a96013e05\",\"dweb:/ipfs/QmXoPqtjX4wJhikz7zjK7QQgjEB59ikxgPgM9wCBfJQbTE\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/Predeploys.sol\":{\"keccak256\":\"0x5af3a849f68f7c9108858ebac5c769da8f1c0309b5c0cb42eb5cbb15e3fe6058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ffe76429a96d274577be66627eddad5cd05ad36d0cb6b9b3c3f9fa8a609dd7e\",\"dweb:/ipfs/QmVhWnB7Avg684TEQ9BExWqSN1YfLehUTWoqpjymeQEQHm\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723\",\"dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x4302ae78bcafde2737d4048bbf8fdb3dd4cd7254c015b91dfa14fdaafd412f4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78d3d1823ad4e1fba15921a0a361b452c85d111e2d53cbbed11a8632782ea8f3\",\"dweb:/ipfs/QmVc2rTRpn7g7WAUxDShSuy6dY5zmtbJ7hHC6sT9PcD3Gj\"]},\"src/universal/ERC721Bridge.sol\":{\"keccak256\":\"0x1aba1c039fa759d7d081e0d60c5d742e8d3147f0eda19af5c17cf291b4f53213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3581c48036bf901da4dd823f4b2fc65870414a116b32ed042d89778a2027e3f\",\"dweb:/ipfs/QmVqTCMR6NroWCQzjc1vkznHp1XbNFSYXNDgrvXUDEuZoA\"]},\"src/universal/FeeVault.sol\":{\"keccak256\":\"0x6996d8043a3c9c512ef65dfecc8b7c5e807512a9d04403512ae168922ac90fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0648011f448c9c8e5df8b5a53d761523b0b15d2a7717a5f010338f0a8ebc5a3f\",\"dweb:/ipfs/QmPXvHPcAKXSmdkc41g2RJqufGqe9H4iRnvSJ5ochV7Jj6\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/IOptimismMintableERC721.sol\":{\"keccak256\":\"0xb3a65b067e67a9e1fa0493401c8d247970377c6725eba4e7b02ce8099c4f4f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86bb6864027560ade2f4ced6a6e34213cbff8002977dc365377e5a0b473cf17b\",\"dweb:/ipfs/QmQvjtodTK27as1g1PzsYk9NyJJ3X6a6251o1vrBwx7DPT\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174\",\"dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED\"]},\"src/universal/OptimismMintableERC20Factory.sol\":{\"keccak256\":\"0xe687be38f16bbb750c465bce30021a548b5b468b30c69920e09cd153f576f845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4803497b0b872da068805f067152b6e423ef07c6bbdecaf2ce78266597ce871\",\"dweb:/ipfs/QmU8RmENdSNwvUN8nizQbPA57ubZiQktoECTdS7nbf2DkS\"]},\"src/universal/OptimismMintableERC721.sol\":{\"keccak256\":\"0x0fd12c5762ef09b4def9d959531853fd8b471a3bbd1d23c3816eb0b8e7fba095\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89f57a3cf0293961c295f88354fc45ff0f554cf8d67a414a236b7f4497de2d30\",\"dweb:/ipfs/QmawdJegtUm3NV3E2SoDc1u3RKXAVeJ8uHJ4n5ubzw9cRA\"]},\"src/universal/OptimismMintableERC721Factory.sol\":{\"keccak256\":\"0xb2114ea511413096c8a1429537d4e2739eebf036748f4df85ac5af7c0a58c2cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25742d0fa56027b38eca76d46a0d7ea971b4b7bc6798567735802558227443cc\",\"dweb:/ipfs/QmPB7vVmDazYQcVhU6AF3Qd288Q7HGFUBA2NmyMwn11KKX\"]},\"src/universal/Proxy.sol\":{\"keccak256\":\"0xc56de5e39cd44eaeb93f0f8705dd07f4a89f66d5c186522532cf899a104cdbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1b595148fa62a798343a23e3330e79fef7d747f039d664482044be9ec0ccf3\",\"dweb:/ipfs/QmeAft6H9wbc9zZZ3prtRaBGGzcPy9yExKAhZHjp1iZ8UF\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0xd40e4671833946d92723217c4f3d6259f8cc705a5ed25e5529754046d575a411\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04336535438c2763da63ddb04a853ccefb4874c6087bd701988c46d4f0c044f2\",\"dweb:/ipfs/QmZr2AMxSwGc4srRvduswe75vmaWe9qq5x7E3EoQknnDtr\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]},\"test/CommonTest.t.sol\":{\"keccak256\":\"0x6a5991713efa4c385f94ee209afcdcf03c8fc85e2556d95e4fb9d5b17fa9a495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e23c296b85d9ce7c1f0ddbaafd57b25032a7984784b042666f065a463e2efdbf\",\"dweb:/ipfs/QmV1wDzVceY7SLf2HhxgHzPAA2UjjKuKrETz72Eym3izD5\"]},\"test/DisputeGameFactory.t.sol\":{\"keccak256\":\"0x8da01fd16e152c5fa2f32c38c546095050f2bbed50e98006ae5a2e25560e2db0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://471860932ee4bca574fbae0dcd999c9ca12b939cd4c50a9c7b6bf7010c27ddf8\",\"dweb:/ipfs/QmQuUXdHXWQZrRiouD9o3VmsLep19RdncarexXKa6Ppr8t\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "disputeProxy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "GameType",
              "name": "gameType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "Claim",
              "name": "rootClaim",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DisputeGameCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "impl",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "GameType",
              "name": "gameType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "outputRoot",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "l2OutputIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "l2BlockNumber",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "l1Timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OutputProposed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "prevNextOutputIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newNextOutputIndex",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OutputsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "opaqueData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Claim",
              "name": "_claim",
              "type": "bytes32"
            },
            {
              "internalType": "VMStatus",
              "name": "_status",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "changeClaimStatus",
          "outputs": [
            {
              "internalType": "Claim",
              "name": "out_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeAnotherOutput"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "gameType",
              "type": "uint8"
            },
            {
              "internalType": "Claim",
              "name": "rootClaim",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_create_noImpl_reverts"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "gameType",
              "type": "uint8"
            },
            {
              "internalType": "Claim",
              "name": "rootClaim",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_create_sameUUID_reverts"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "gameType",
              "type": "uint8"
            },
            {
              "internalType": "Claim",
              "name": "rootClaim",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_create_succeeds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_nextBlockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "warpToProposeTime"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "proposeAnotherOutput()": {
            "details": "Helper function to propose an output."
          },
          "testFuzz_create_noImpl_reverts(uint8,bytes32,bytes)": {
            "details": "Tests that the `create` function reverts when there is no implementation      set for the given `GameType`."
          },
          "testFuzz_create_sameUUID_reverts(uint8,bytes32,bytes)": {
            "details": "Tests that the `create` function reverts when there exists a dispute game with the same UUID."
          },
          "testFuzz_create_succeeds(uint8,bytes32,bytes)": {
            "details": "Tests that the `create` function succeeds when creating a new dispute game      with a `GameType` that has an implementation set."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/DisputeGameFactory.t.sol": "DisputeGameFactory_Create_Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol": {
        "keccak256": "0x220db41bfceb0146f86e9be87d3d954fd1d52eadcb3bbfc5cd89e5543a46fd1e",
        "urls": [
          "bzz-raw://19155470db05e2e67a8c14f21cc903bb4833d8e5d248c2183073320c8a595705",
          "dweb:/ipfs/QmTchpXE8MMH1XcYxaZvx64UiVzBatbWy7Sw5HFhVJJjxi"
        ],
        "license": "BSD"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/L1CrossDomainMessenger.sol": {
        "keccak256": "0x1b6886b0037e6b35660b0db6aa7615b71340f23657c2b4db120378a742c72faf",
        "urls": [
          "bzz-raw://642e6e822ca1f35f7d1e63266ea632ebd7eb622edc9acef5233bcd842faa15a9",
          "dweb:/ipfs/QmU3nyCfxLvAKjxQkAFyCQSC25UZkkbyJ4QtCA7iNhbaMs"
        ],
        "license": "MIT"
      },
      "src/L1/L1ERC721Bridge.sol": {
        "keccak256": "0xa943baf4fcddd41b0da5b3b3392875bb5d30b8bfabc0722f32c573dca9ea408e",
        "urls": [
          "bzz-raw://a6f541b46cec9cceb15d8609776d2ff1fb985df4d5cca3555e7a87872fbc5dde",
          "dweb:/ipfs/QmbvEQv7z6W1V6mVgzyu2Tk3SooiLt3A2dYrwHnQxS7DHm"
        ],
        "license": "MIT"
      },
      "src/L1/L1StandardBridge.sol": {
        "keccak256": "0x35ae2b447592626550716957af070496dd4e0f0cc6440b58543fb72171ef1c6a",
        "urls": [
          "bzz-raw://add2df5575449afd798310d9785ac5c671b847b0e042ffe07616bf72a6f1204e",
          "dweb:/ipfs/QmTxPNKweCM5YZfTfF3kLqf9yggrdDDBENPcEp2izYzqP7"
        ],
        "license": "MIT"
      },
      "src/L1/L2OutputOracle.sol": {
        "keccak256": "0x42b2cc7e3810271a89265e8da623beeaee56454fea43e01e9ad9b27d2801f8a5",
        "urls": [
          "bzz-raw://689bc5efdfe5defbd8615965f0fbaa5563454743de776cfda4cc01e8f3298f13",
          "dweb:/ipfs/QmVuNL1wdmD5z5JWor75EBTCJgP3yGHk6hXq3SG7kpFN8Z"
        ],
        "license": "MIT"
      },
      "src/L1/OptimismPortal.sol": {
        "keccak256": "0xff8d10e6bae6e2cee376ae994c251c111b4e3db8a38f9b410218b7cd112de789",
        "urls": [
          "bzz-raw://23d17cffb103277316cf97c434ff7d11df6107ca4bbba828398dc2c0914610b0",
          "dweb:/ipfs/QmehYAEVSSZnDtF56aoBWZQMsVeLvRMMQ5Mkji7uxK7nVm"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x7e0f0834172d2b4d69c97a4038eb9c1750a2a169f2aa99b5d5e5f878cfd1d144",
        "urls": [
          "bzz-raw://bceb459b8c56334e8d26ed1cb069eebaa99c349571a8338b5d744aa95c93d134",
          "dweb:/ipfs/QmYdiHw7VpXQL6joqneakfAhTKjGYo5BDPZWSRaCk1tUZv"
        ],
        "license": "MIT"
      },
      "src/L2/L2CrossDomainMessenger.sol": {
        "keccak256": "0xd5b45c5535f2c9e1744743304a106abf19448a7e2085bdbbd885f1c3a6245b5c",
        "urls": [
          "bzz-raw://b20a79c0ea53699a8381f3e0addcc24fd4a4ffbfd730a2831df955c5385add7d",
          "dweb:/ipfs/QmaspRqrCKgw3ucD1jAfX4YXEr31TpFVLTBW35GTPzc3rb"
        ],
        "license": "MIT"
      },
      "src/L2/L2ERC721Bridge.sol": {
        "keccak256": "0xcc0de3ee4e726fe4a0a52a0684fc30454a49190d600c7cbeade798ae020d70f6",
        "urls": [
          "bzz-raw://bfa81e6c23f59237794bce97ad55cca091980c3db50bb295f836ab20cb58e4c8",
          "dweb:/ipfs/QmSpfckbZeoCEAASqxWdFm7t8q6Rqkqwk2jQFSCKEBXEVs"
        ],
        "license": "MIT"
      },
      "src/L2/L2StandardBridge.sol": {
        "keccak256": "0xcfe651b949f47aa1b9b733e8c1058020107bafaed56608eb7ced48995323d370",
        "urls": [
          "bzz-raw://b6265eadc6399ffd9743d2929862af4eff515a6bbd11a672cd45e8a83d75dbe3",
          "dweb:/ipfs/Qmd3gygBde6Nqimuc53CDZNqyLVcNPMBDfXkNE1TkVJ39d"
        ],
        "license": "MIT"
      },
      "src/L2/L2ToL1MessagePasser.sol": {
        "keccak256": "0x67f440defc45e97bf1494274a9061876cbdcb10625707c534a0cb04b1c057e21",
        "urls": [
          "bzz-raw://47900ccfcd1e4506d50dd3b14069da285eeb5f783020a0c74f58181b4c011460",
          "dweb:/ipfs/QmNUtEAxiwXT8QDbCHsX3uT4h2fh6k9f8LvMrmRK2N7K61"
        ],
        "license": "MIT"
      },
      "src/L2/SequencerFeeVault.sol": {
        "keccak256": "0x09e9fd3796772cfc70c88a056ef76d832b2923560853532ada929bc837412077",
        "urls": [
          "bzz-raw://6cc667a6558cab037a38f8bec02c2f4e715b9dcffdce7addb22de6abc3aa304e",
          "dweb:/ipfs/QmTEJiqoxAfZQXZPy5Z5qWXiWJp4dzdXExdbcp4DBTAzyV"
        ],
        "license": "MIT"
      },
      "src/dispute/DisputeGameFactory.sol": {
        "keccak256": "0xb2db064d41020f43a185ed72d763dd0effd518b72cf77564f6a2dce95448a460",
        "urls": [
          "bzz-raw://de0b42901f7e17493f40db3dd7b42c2d2d8cfe406076f85c5430cb9bbeb6f5bb",
          "dweb:/ipfs/QmXjMpLet6vTdtq6KuEVxo5Xm45wixsb4pTGyf3Et8iBK3"
        ],
        "license": "MIT"
      },
      "src/dispute/interfaces/IBondManager.sol": {
        "keccak256": "0x31db84bf7a701125719c0bdaed316c8ec3d32e774a70b9bac3045d3ed272da8b",
        "urls": [
          "bzz-raw://35ef3970234b9a2d85ca800c5257398fd92a6959b0daa088b402a493ebf18d88",
          "dweb:/ipfs/QmWr1ZCBjRJPTUWyNcDv3G2Jb72cYG2p4rQA55WuUPUjao"
        ],
        "license": "MIT"
      },
      "src/dispute/interfaces/IDisputeGame.sol": {
        "keccak256": "0xd9cebb758474716504ba281e8c9e007ead5be676a835729c236afec47dfb1e7f",
        "urls": [
          "bzz-raw://fba945be8dbca576b6765fccc5fe8e31109562b0f2e9f943fc8b6c65fffc9829",
          "dweb:/ipfs/QmTWcBnmMhb3odqu2kkJbKZK7HNeiE7SvfD9tjKv8F4qWF"
        ],
        "license": "MIT"
      },
      "src/dispute/interfaces/IDisputeGameFactory.sol": {
        "keccak256": "0x9e525966fe0583cc20376a654542eec946ebd86a2802456678b5dc837c0ebf1f",
        "urls": [
          "bzz-raw://e26eeb1479653eabbb00318dd4d9c46fdf76fe93b6c8ba7420c793b69a3cc871",
          "dweb:/ipfs/QmVq6Zvv5SVK8pYxvfjyi7nK2jtxmQmupix3TNeaMcBJ6g"
        ],
        "license": "MIT"
      },
      "src/dispute/interfaces/IInitializable.sol": {
        "keccak256": "0xf021b03c9e887e227102b037595e0917b76546e796bec7aa4fdced61090267ce",
        "urls": [
          "bzz-raw://bcfbad382815e37355b7cc318fa333b9b5b08223d4315951fd0881430ab8d3df",
          "dweb:/ipfs/QmRng31WWpYeApQUcXJXhSdqL797drdtBwvUD6D9giCyy2"
        ],
        "license": "MIT"
      },
      "src/dispute/lib/LibClock.sol": {
        "keccak256": "0x4599b150b8a3d53a9db22698666320e62261765e3ad5b58105bc93097b1a4690",
        "urls": [
          "bzz-raw://a0ab2d277fd4607510a5cafb91235a0fc3e47c3c0cdb45b2c185188ce888a1c5",
          "dweb:/ipfs/QmQ2bM3YmZCbN8uhKigSBh6j9VKrfxg61tjihwY7fdpARs"
        ],
        "license": "MIT"
      },
      "src/dispute/lib/LibGameId.sol": {
        "keccak256": "0xa61b8562def4834607b733240e8eb4f924a75250df45852c9af1aea628f6b58d",
        "urls": [
          "bzz-raw://2853075b45f634db083ea5f495f0cb9c28eb2401e2c18fd5fb7bce2500ed78ad",
          "dweb:/ipfs/QmaJpEg5z6tZ3niZY6N3f8AZ89FRnUVZJHNUDs66sq97j6"
        ],
        "license": "MIT"
      },
      "src/dispute/lib/LibHashing.sol": {
        "keccak256": "0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b",
        "urls": [
          "bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920",
          "dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq"
        ],
        "license": "MIT"
      },
      "src/dispute/lib/LibPosition.sol": {
        "keccak256": "0xf85659fff6f178903482bc12b9e908440dca33fbcda2258b1a665d1746a03c33",
        "urls": [
          "bzz-raw://0e51fb85a9f43c1b50c601d2e5cf343874ce3cb28d7823bea3f1ba5f23c28a9e",
          "dweb:/ipfs/QmcWQZsARwq6cfstzmCw8GnueH3QAkaPgdRpi7guQpKB6Q"
        ],
        "license": "MIT"
      },
      "src/legacy/AddressManager.sol": {
        "keccak256": "0x1fcb990df6473f7fa360d5924d62d39ce2ca97d45668e3901e5405cfbe598b19",
        "urls": [
          "bzz-raw://9d08358b60dea54dbc32e988a1bb7ea909488063eaae3c5ae28a322f125c9b34",
          "dweb:/ipfs/QmZPQwdjLh9gaamNAoTUmWwwbRKj3yHovBYfnTPnfuKvUt"
        ],
        "license": "MIT"
      },
      "src/legacy/L1ChugSplashProxy.sol": {
        "keccak256": "0xdde5626645fa217ad3a37805c4c3012e4251de01df868aae73b986f5d03cdb23",
        "urls": [
          "bzz-raw://a99fd0ec440c17c826465001dc88c5185dd41dc72396254fdd3cdfcc84aeae8c",
          "dweb:/ipfs/QmStHuecN89zBL8FH9SUK1TtkyYwfzMY2KkQaFJLHZLuyA"
        ],
        "license": "MIT"
      },
      "src/legacy/LegacyERC20ETH.sol": {
        "keccak256": "0xc5849c3a3dd07b6883c2907c95971419e57d4cf480e68d959d6350a9d87479df",
        "urls": [
          "bzz-raw://840447e39490ce5a69016e7089de82f221ab210322efabbf4b6869a2128b7dae",
          "dweb:/ipfs/QmTa2U8KPxVpQ2pfeneZV44LAWzMHiErypm9WCbSWVwBcr"
        ],
        "license": "MIT"
      },
      "src/legacy/LegacyMintableERC20.sol": {
        "keccak256": "0x0b2dbfdc7425be6444be2894cdd0565f8da6cab59e1bbcfec7e7566898d9bec5",
        "urls": [
          "bzz-raw://463d34adcc4003d1b421c61a53bb8290c18f2f239f5f4b7ea9e41444b460800f",
          "dweb:/ipfs/QmbwpbPZ2wfVJQ4bKKjNsHibkBo28E5H6vbJFhRAvLPrpK"
        ],
        "license": "MIT"
      },
      "src/legacy/ResolvedDelegateProxy.sol": {
        "keccak256": "0x33425509c2982627f1e88977d76637096322954c474217bd4d03a3244814f332",
        "urls": [
          "bzz-raw://2cb3702c3c280ebf65e636b2d2fd8533aebae69014304014353afee129415c53",
          "dweb:/ipfs/QmYpcVwF8hzwCcPqv535oENbars988N21MVvvDw9eQNaSf"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Bytes.sol": {
        "keccak256": "0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859",
        "urls": [
          "bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782",
          "dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19",
        "urls": [
          "bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359",
          "dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd"
        ],
        "license": "MIT"
      },
      "src/libraries/DisputeErrors.sol": {
        "keccak256": "0x2f9f090414125ee22bacf5926f8631445136385827f29764614920dcfbabc51a",
        "urls": [
          "bzz-raw://b6d3b4b75fcb09d24e58b0187280fd2ff95e397d2a0bac8365800292616e106b",
          "dweb:/ipfs/QmSb2gBm8Us7gJ4xJgPveq9x8w18DDuWYcNWxo3vCph5iW"
        ],
        "license": "MIT"
      },
      "src/libraries/DisputeTypes.sol": {
        "keccak256": "0x23c8fbebc8a9fbe0b170ce45405cec5ec9bd71380d0e30f0a07144f420e9fdf0",
        "urls": [
          "bzz-raw://9fa6ad5d232e12fe7c575b86b00ff4164a0539bb017c0c7efea94d5a96013e05",
          "dweb:/ipfs/QmXoPqtjX4wJhikz7zjK7QQgjEB59ikxgPgM9wCBfJQbTE"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/Predeploys.sol": {
        "keccak256": "0x5af3a849f68f7c9108858ebac5c769da8f1c0309b5c0cb42eb5cbb15e3fe6058",
        "urls": [
          "bzz-raw://6ffe76429a96d274577be66627eddad5cd05ad36d0cb6b9b3c3f9fa8a609dd7e",
          "dweb:/ipfs/QmVhWnB7Avg684TEQ9BExWqSN1YfLehUTWoqpjymeQEQHm"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778",
        "urls": [
          "bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723",
          "dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c",
        "urls": [
          "bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74",
          "dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288",
        "urls": [
          "bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681",
          "dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x4302ae78bcafde2737d4048bbf8fdb3dd4cd7254c015b91dfa14fdaafd412f4a",
        "urls": [
          "bzz-raw://78d3d1823ad4e1fba15921a0a361b452c85d111e2d53cbbed11a8632782ea8f3",
          "dweb:/ipfs/QmVc2rTRpn7g7WAUxDShSuy6dY5zmtbJ7hHC6sT9PcD3Gj"
        ],
        "license": "MIT"
      },
      "src/universal/ERC721Bridge.sol": {
        "keccak256": "0x1aba1c039fa759d7d081e0d60c5d742e8d3147f0eda19af5c17cf291b4f53213",
        "urls": [
          "bzz-raw://a3581c48036bf901da4dd823f4b2fc65870414a116b32ed042d89778a2027e3f",
          "dweb:/ipfs/QmVqTCMR6NroWCQzjc1vkznHp1XbNFSYXNDgrvXUDEuZoA"
        ],
        "license": "MIT"
      },
      "src/universal/FeeVault.sol": {
        "keccak256": "0x6996d8043a3c9c512ef65dfecc8b7c5e807512a9d04403512ae168922ac90fb3",
        "urls": [
          "bzz-raw://0648011f448c9c8e5df8b5a53d761523b0b15d2a7717a5f010338f0a8ebc5a3f",
          "dweb:/ipfs/QmPXvHPcAKXSmdkc41g2RJqufGqe9H4iRnvSJ5ochV7Jj6"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC721.sol": {
        "keccak256": "0xb3a65b067e67a9e1fa0493401c8d247970377c6725eba4e7b02ce8099c4f4f52",
        "urls": [
          "bzz-raw://86bb6864027560ade2f4ced6a6e34213cbff8002977dc365377e5a0b473cf17b",
          "dweb:/ipfs/QmQvjtodTK27as1g1PzsYk9NyJJ3X6a6251o1vrBwx7DPT"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b",
        "urls": [
          "bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174",
          "dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20Factory.sol": {
        "keccak256": "0xe687be38f16bbb750c465bce30021a548b5b468b30c69920e09cd153f576f845",
        "urls": [
          "bzz-raw://d4803497b0b872da068805f067152b6e423ef07c6bbdecaf2ce78266597ce871",
          "dweb:/ipfs/QmU8RmENdSNwvUN8nizQbPA57ubZiQktoECTdS7nbf2DkS"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC721.sol": {
        "keccak256": "0x0fd12c5762ef09b4def9d959531853fd8b471a3bbd1d23c3816eb0b8e7fba095",
        "urls": [
          "bzz-raw://89f57a3cf0293961c295f88354fc45ff0f554cf8d67a414a236b7f4497de2d30",
          "dweb:/ipfs/QmawdJegtUm3NV3E2SoDc1u3RKXAVeJ8uHJ4n5ubzw9cRA"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC721Factory.sol": {
        "keccak256": "0xb2114ea511413096c8a1429537d4e2739eebf036748f4df85ac5af7c0a58c2cc",
        "urls": [
          "bzz-raw://25742d0fa56027b38eca76d46a0d7ea971b4b7bc6798567735802558227443cc",
          "dweb:/ipfs/QmPB7vVmDazYQcVhU6AF3Qd288Q7HGFUBA2NmyMwn11KKX"
        ],
        "license": "MIT"
      },
      "src/universal/Proxy.sol": {
        "keccak256": "0xc56de5e39cd44eaeb93f0f8705dd07f4a89f66d5c186522532cf899a104cdbca",
        "urls": [
          "bzz-raw://cd1b595148fa62a798343a23e3330e79fef7d747f039d664482044be9ec0ccf3",
          "dweb:/ipfs/QmeAft6H9wbc9zZZ3prtRaBGGzcPy9yExKAhZHjp1iZ8UF"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0xd40e4671833946d92723217c4f3d6259f8cc705a5ed25e5529754046d575a411",
        "urls": [
          "bzz-raw://04336535438c2763da63ddb04a853ccefb4874c6087bd701988c46d4f0c044f2",
          "dweb:/ipfs/QmZr2AMxSwGc4srRvduswe75vmaWe9qq5x7E3EoQknnDtr"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      },
      "test/CommonTest.t.sol": {
        "keccak256": "0x6a5991713efa4c385f94ee209afcdcf03c8fc85e2556d95e4fb9d5b17fa9a495",
        "urls": [
          "bzz-raw://e23c296b85d9ce7c1f0ddbaafd57b25032a7984784b042666f065a463e2efdbf",
          "dweb:/ipfs/QmV1wDzVceY7SLf2HhxgHzPAA2UjjKuKrETz72Eym3izD5"
        ],
        "license": "MIT"
      },
      "test/DisputeGameFactory.t.sol": {
        "keccak256": "0x8da01fd16e152c5fa2f32c38c546095050f2bbed50e98006ae5a2e25560e2db0",
        "urls": [
          "bzz-raw://471860932ee4bca574fbae0dcd999c9ca12b939cd4c50a9c7b6bf7010c27ddf8",
          "dweb:/ipfs/QmQuUXdHXWQZrRiouD9o3VmsLep19RdncarexXKa6Ppr8t"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 121,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3877,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 6288,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 7036,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7039,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7042,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7045,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7048,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7051,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7055,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 7059,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 2384,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 82193,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "alice",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 82199,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "bob",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 82205,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "multisig",
        "offset": 0,
        "slot": "29",
        "type": "t_address"
      },
      {
        "astId": 82234,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "nonZeroHash",
        "offset": 0,
        "slot": "30",
        "type": "t_bytes32"
      },
      {
        "astId": 82237,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "NON_ZERO_DATA",
        "offset": 0,
        "slot": "31",
        "type": "t_bytes_storage"
      },
      {
        "astId": 82257,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "ffi",
        "offset": 0,
        "slot": "32",
        "type": "t_contract(FFIInterface)85052"
      },
      {
        "astId": 82360,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "oracle",
        "offset": 0,
        "slot": "33",
        "type": "t_contract(L2OutputOracle)59663"
      },
      {
        "astId": 82363,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "oracleImpl",
        "offset": 0,
        "slot": "34",
        "type": "t_contract(L2OutputOracle)59663"
      },
      {
        "astId": 82373,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "messagePasser",
        "offset": 0,
        "slot": "35",
        "type": "t_contract(L2ToL1MessagePasser)63242"
      },
      {
        "astId": 82376,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "proposer",
        "offset": 0,
        "slot": "36",
        "type": "t_address"
      },
      {
        "astId": 82379,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "owner",
        "offset": 0,
        "slot": "37",
        "type": "t_address"
      },
      {
        "astId": 82382,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "submissionInterval",
        "offset": 0,
        "slot": "38",
        "type": "t_uint256"
      },
      {
        "astId": 82385,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "l2BlockTime",
        "offset": 0,
        "slot": "39",
        "type": "t_uint256"
      },
      {
        "astId": 82388,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "startingBlockNumber",
        "offset": 0,
        "slot": "40",
        "type": "t_uint256"
      },
      {
        "astId": 82391,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "startingTimestamp",
        "offset": 0,
        "slot": "41",
        "type": "t_uint256"
      },
      {
        "astId": 82394,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "finalizationPeriodSeconds",
        "offset": 0,
        "slot": "42",
        "type": "t_uint256"
      },
      {
        "astId": 82396,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "guardian",
        "offset": 0,
        "slot": "43",
        "type": "t_address"
      },
      {
        "astId": 82398,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "initL1Time",
        "offset": 0,
        "slot": "44",
        "type": "t_uint256"
      },
      {
        "astId": 88077,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "factory",
        "offset": 0,
        "slot": "45",
        "type": "t_contract(DisputeGameFactory)66417"
      },
      {
        "astId": 88080,
        "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
        "label": "fakeClone",
        "offset": 0,
        "slot": "46",
        "type": "t_contract(FakeClone)88786"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)7033_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DisputeGameFactory)66417": {
        "encoding": "inplace",
        "label": "contract DisputeGameFactory",
        "numberOfBytes": "20"
      },
      "t_contract(FFIInterface)85052": {
        "encoding": "inplace",
        "label": "contract FFIInterface",
        "numberOfBytes": "20"
      },
      "t_contract(FakeClone)88786": {
        "encoding": "inplace",
        "label": "contract FakeClone",
        "numberOfBytes": "20"
      },
      "t_contract(L2OutputOracle)59663": {
        "encoding": "inplace",
        "label": "contract L2OutputOracle",
        "numberOfBytes": "20"
      },
      "t_contract(L2ToL1MessagePasser)63242": {
        "encoding": "inplace",
        "label": "contract L2ToL1MessagePasser",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)7033_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 7029,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7032,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "test/DisputeGameFactory.t.sol:DisputeGameFactory_Create_Test",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "proposeAnotherOutput()": {
        "details": "Helper function to propose an output."
      },
      "testFuzz_create_noImpl_reverts(uint8,bytes32,bytes)": {
        "details": "Tests that the `create` function reverts when there is no implementation      set for the given `GameType`."
      },
      "testFuzz_create_sameUUID_reverts(uint8,bytes32,bytes)": {
        "details": "Tests that the `create` function reverts when there exists a dispute game with the same UUID."
      },
      "testFuzz_create_succeeds(uint8,bytes32,bytes)": {
        "details": "Tests that the `create` function succeeds when creating a new dispute game      with a `GameType` that has an implementation set."
      }
    }
  },
  "ast": {
    "absolutePath": "test/DisputeGameFactory.t.sol",
    "id": 88787,
    "exportedSymbols": {
      "AlreadyChallenged": [
        69980
      ],
      "BlockHashNotPresent": [
        69989
      ],
      "BlockNumberOOB": [
        69986
      ],
      "BondAmount": [
        70023
      ],
      "BondTooLow": [
        69932
      ],
      "CannotDefendRootClaim": [
        69935
      ],
      "Claim": [
        70019
      ],
      "ClaimAlreadyExists": [
        69938
      ],
      "ClaimAlreadyResolved": [
        69974
      ],
      "ClaimHash": [
        70021
      ],
      "Clock": [
        70031
      ],
      "ClockNotExpired": [
        69950
      ],
      "ClockTimeExceeded": [
        69947
      ],
      "DisputeGameFactory": [
        66417
      ],
      "DisputeGameFactory_Create_Test": [
        88550
      ],
      "DisputeGameFactory_GetGameUUID_Test": [
        88706
      ],
      "DisputeGameFactory_Init": [
        88173
      ],
      "DisputeGameFactory_Owner_Test": [
        88724
      ],
      "DisputeGameFactory_SetImplementation_Test": [
        88656
      ],
      "DisputeGameFactory_TransferOwnership_Test": [
        88780
      ],
      "Duration": [
        70027
      ],
      "FakeClone": [
        88786
      ],
      "GameAlreadyExists": [
        69923
      ],
      "GameDepthExceeded": [
        69953
      ],
      "GameId": [
        70029
      ],
      "GameNotInProgress": [
        69944
      ],
      "GameStatus": [
        70041
      ],
      "GameType": [
        70035
      ],
      "GameTypes": [
        70067
      ],
      "Hash": [
        70017
      ],
      "IDisputeGame": [
        67711
      ],
      "InvalidClaim": [
        69941
      ],
      "InvalidLocalIdent": [
        69968
      ],
      "InvalidParent": [
        69956
      ],
      "InvalidPrestate": [
        69959
      ],
      "InvalidSignature": [
        69977
      ],
      "L1HeadTooOld": [
        69965
      ],
      "L2OutputOracle_Initializer": [
        82634
      ],
      "LibClock": [
        67989
      ],
      "LibGameId": [
        68031
      ],
      "LibHashing": [
        68053
      ],
      "LibPosition": [
        68211
      ],
      "NoImplementation": [
        69917
      ],
      "NotOwner": [
        69983
      ],
      "OutOfOrderResolution": [
        69971
      ],
      "Position": [
        70033
      ],
      "Proxy": [
        76940
      ],
      "Test": [
        11539
      ],
      "Timestamp": [
        70025
      ],
      "UnexpectedRootClaim": [
        69929
      ],
      "VMStatus": [
        70037
      ],
      "VMStatuses": [
        70101
      ],
      "ValidStep": [
        69962
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8386:224",
    "nodes": [
      {
        "id": 88060,
        "nodeType": "PragmaDirective",
        "src": "32:24:224",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 88061,
        "nodeType": "ImportDirective",
        "src": "58:43:224",
        "nodes": [],
        "absolutePath": "src/libraries/DisputeTypes.sol",
        "file": "../src/libraries/DisputeTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 70102,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88062,
        "nodeType": "ImportDirective",
        "src": "102:44:224",
        "nodes": [],
        "absolutePath": "src/libraries/DisputeErrors.sol",
        "file": "../src/libraries/DisputeErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 69990,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88064,
        "nodeType": "ImportDirective",
        "src": "148:42:224",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88063,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "157:4:224",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88066,
        "nodeType": "ImportDirective",
        "src": "191:75:224",
        "nodes": [],
        "absolutePath": "src/dispute/DisputeGameFactory.sol",
        "file": "../src/dispute/DisputeGameFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 66418,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88065,
              "name": "DisputeGameFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66417,
              "src": "200:18:224",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88068,
        "nodeType": "ImportDirective",
        "src": "267:74:224",
        "nodes": [],
        "absolutePath": "src/dispute/interfaces/IDisputeGame.sol",
        "file": "../src/dispute/interfaces/IDisputeGame.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 67712,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88067,
              "name": "IDisputeGame",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67711,
              "src": "276:12:224",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88070,
        "nodeType": "ImportDirective",
        "src": "342:51:224",
        "nodes": [],
        "absolutePath": "src/universal/Proxy.sol",
        "file": "../src/universal/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 76941,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88069,
              "name": "Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76940,
              "src": "351:5:224",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88072,
        "nodeType": "ImportDirective",
        "src": "394:64:224",
        "nodes": [],
        "absolutePath": "test/CommonTest.t.sol",
        "file": "./CommonTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88787,
        "sourceUnit": 85209,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88071,
              "name": "L2OutputOracle_Initializer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82634,
              "src": "403:26:224",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88173,
        "nodeType": "ContractDefinition",
        "src": "460:814:224",
        "nodes": [
          {
            "id": 88077,
            "nodeType": "VariableDeclaration",
            "src": "529:26:224",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "548:7:224",
            "scope": 88173,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
              "typeString": "contract DisputeGameFactory"
            },
            "typeName": {
              "id": 88076,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88075,
                "name": "DisputeGameFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66417,
                "src": "529:18:224"
              },
              "referencedDeclaration": 66417,
              "src": "529:18:224",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                "typeString": "contract DisputeGameFactory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88080,
            "nodeType": "VariableDeclaration",
            "src": "561:19:224",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fakeClone",
            "nameLocation": "571:9:224",
            "scope": 88173,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FakeClone_$88786",
              "typeString": "contract FakeClone"
            },
            "typeName": {
              "id": 88079,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88078,
                "name": "FakeClone",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88786,
                "src": "561:9:224"
              },
              "referencedDeclaration": 88786,
              "src": "561:9:224",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FakeClone_$88786",
                "typeString": "contract FakeClone"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88090,
            "nodeType": "EventDefinition",
            "src": "587:107:224",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "fad0599ff449d8d9685eadecca8cb9e00924c5fd8367c1c09469824939e1ffec",
            "name": "DisputeGameCreated",
            "nameLocation": "593:18:224",
            "parameters": {
              "id": 88089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88082,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "disputeProxy",
                  "nameLocation": "628:12:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88090,
                  "src": "612:28:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:224",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88085,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "659:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88090,
                  "src": "642:25:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 88084,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88083,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70035,
                      "src": "642:8:224"
                    },
                    "referencedDeclaration": 70035,
                    "src": "642:8:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88088,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "683:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88090,
                  "src": "669:23:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88087,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88086,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "669:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "669:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:82:224"
            }
          },
          {
            "id": 88097,
            "nodeType": "EventDefinition",
            "src": "700:73:224",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "623713f72f6e427a8044bb8b3bd6834357cf285decbaa21bcc73c1d0632c4d84",
            "name": "ImplementationSet",
            "nameLocation": "706:17:224",
            "parameters": {
              "id": 88096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88092,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "740:4:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88097,
                  "src": "724:20:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:224",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88095,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "763:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88097,
                  "src": "746:25:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 88094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88093,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70035,
                      "src": "746:8:224"
                    },
                    "referencedDeclaration": 70035,
                    "src": "746:8:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:49:224"
            }
          },
          {
            "id": 88172,
            "nodeType": "FunctionDefinition",
            "src": "779:493:224",
            "nodes": [],
            "body": {
              "id": 88171,
              "nodeType": "Block",
              "src": "820:452:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88101,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "830:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DisputeGameFactory_Init_$88173_$",
                          "typeString": "type(contract super DisputeGameFactory_Init)"
                        }
                      },
                      "id": 88103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82633,
                      "src": "830:11:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 88104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:13:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88105,
                  "nodeType": "ExpressionStatement",
                  "src": "830:13:224"
                },
                {
                  "assignments": [
                    88108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88108,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "860:5:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88171,
                      "src": "854:11:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proxy_$76940",
                        "typeString": "contract Proxy"
                      },
                      "typeName": {
                        "id": 88107,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88106,
                          "name": "Proxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76940,
                          "src": "854:5:224"
                        },
                        "referencedDeclaration": 76940,
                        "src": "854:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proxy_$76940",
                          "typeString": "contract Proxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88117,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88114,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "886:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_Init_$88173",
                              "typeString": "contract DisputeGameFactory_Init"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_Init_$88173",
                              "typeString": "contract DisputeGameFactory_Init"
                            }
                          ],
                          "id": 88113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "878:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88112,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "878:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "878:13:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "868:9:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Proxy_$76940_$",
                        "typeString": "function (address) returns (contract Proxy)"
                      },
                      "typeName": {
                        "id": 88110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88109,
                          "name": "Proxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76940,
                          "src": "872:5:224"
                        },
                        "referencedDeclaration": 76940,
                        "src": "872:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proxy_$76940",
                          "typeString": "contract Proxy"
                        }
                      }
                    },
                    "id": 88116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:24:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$76940",
                      "typeString": "contract Proxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "854:38:224"
                },
                {
                  "assignments": [
                    88120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88120,
                      "mutability": "mutable",
                      "name": "impl",
                      "nameLocation": "921:4:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88171,
                      "src": "902:23:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                        "typeString": "contract DisputeGameFactory"
                      },
                      "typeName": {
                        "id": 88119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88118,
                          "name": "DisputeGameFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66417,
                          "src": "902:18:224"
                        },
                        "referencedDeclaration": 66417,
                        "src": "902:18:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88125,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 88123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "928:22:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DisputeGameFactory_$66417_$",
                        "typeString": "function () returns (contract DisputeGameFactory)"
                      },
                      "typeName": {
                        "id": 88122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88121,
                          "name": "DisputeGameFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66417,
                          "src": "932:18:224"
                        },
                        "referencedDeclaration": 66417,
                        "src": "932:18:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      }
                    },
                    "id": 88124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:24:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                      "typeString": "contract DisputeGameFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "902:50:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88131,
                            "name": "impl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88120,
                            "src": "1025:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          ],
                          "id": 88130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1017:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1017:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1017:13:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88135,
                              "name": "impl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88120,
                              "src": "1066:4:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                "typeString": "contract DisputeGameFactory"
                              }
                            },
                            "id": 88136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66174,
                            "src": "1066:15:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 88139,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1092:4:224",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DisputeGameFactory_Init_$88173",
                                      "typeString": "contract DisputeGameFactory_Init"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DisputeGameFactory_Init_$88173",
                                      "typeString": "contract DisputeGameFactory_Init"
                                    }
                                  ],
                                  "id": 88138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1084:7:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 88137,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1084:7:224",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 88140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1084:13:224",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 88141,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1083:15:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88133,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1051:3:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "1051:14:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:48:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88126,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88108,
                        "src": "963:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proxy_$76940",
                          "typeString": "contract Proxy"
                        }
                      },
                      "id": 88128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76805,
                      "src": "963:22:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                      }
                    },
                    "id": 88143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_implementation",
                      "_data"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "963:147:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 88144,
                  "nodeType": "ExpressionStatement",
                  "src": "963:147:224"
                },
                {
                  "expression": {
                    "id": 88152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88145,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88077,
                      "src": "1120:7:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                        "typeString": "contract DisputeGameFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 88149,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88108,
                              "src": "1157:5:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proxy_$76940",
                                "typeString": "contract Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proxy_$76940",
                                "typeString": "contract Proxy"
                              }
                            ],
                            "id": 88148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1149:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 88147,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1149:7:224",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 88150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1149:14:224",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 88146,
                        "name": "DisputeGameFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66417,
                        "src": "1130:18:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DisputeGameFactory_$66417_$",
                          "typeString": "type(contract DisputeGameFactory)"
                        }
                      },
                      "id": 88151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:34:224",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                        "typeString": "contract DisputeGameFactory"
                      }
                    },
                    "src": "1120:44:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                      "typeString": "contract DisputeGameFactory"
                    }
                  },
                  "id": 88153,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:44:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88159,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88077,
                            "src": "1191:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          ],
                          "id": 88158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1183:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1183:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1183:16:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4469737075746547616d65466163746f727950726f7879",
                        "id": 88161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1201:25:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_607223a675a7f5ad9239d191fb9fb86777053c472a08d42cae8edc225add69b0",
                          "typeString": "literal_string \"DisputeGameFactoryProxy\""
                        },
                        "value": "DisputeGameFactoryProxy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_607223a675a7f5ad9239d191fb9fb86777053c472a08d42cae8edc225add69b0",
                          "typeString": "literal_string \"DisputeGameFactoryProxy\""
                        }
                      ],
                      "expression": {
                        "id": 88154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1174:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11940,
                      "src": "1174:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 88162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:53:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88163,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:53:224"
                },
                {
                  "expression": {
                    "id": 88169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88164,
                      "name": "fakeClone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88080,
                      "src": "1238:9:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                        "typeString": "contract FakeClone"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 88167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1250:13:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FakeClone_$88786_$",
                          "typeString": "function () returns (contract FakeClone)"
                        },
                        "typeName": {
                          "id": 88166,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 88165,
                            "name": "FakeClone",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 88786,
                            "src": "1254:9:224"
                          },
                          "referencedDeclaration": 88786,
                          "src": "1254:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeClone_$88786",
                            "typeString": "contract FakeClone"
                          }
                        }
                      },
                      "id": 88168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1250:15:224",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                        "typeString": "contract FakeClone"
                      }
                    },
                    "src": "1238:27:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeClone_$88786",
                      "typeString": "contract FakeClone"
                    }
                  },
                  "id": 88170,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:27:224"
                }
              ]
            },
            "baseFunctions": [
              82633
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "788:5:224",
            "overrides": {
              "id": 88099,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "811:8:224"
            },
            "parameters": {
              "id": 88098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:2:224"
            },
            "returnParameters": {
              "id": 88100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:224"
            },
            "scope": 88173,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88073,
              "name": "L2OutputOracle_Initializer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 82634,
              "src": "496:26:224"
            },
            "id": 88074,
            "nodeType": "InheritanceSpecifier",
            "src": "496:26:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_Init",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_Init",
        "nameLocation": "469:23:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88550,
        "nodeType": "ContractDefinition",
        "src": "1276:4091:224",
        "nodes": [
          {
            "id": 88335,
            "nodeType": "FunctionDefinition",
            "src": "1500:1348:224",
            "nodes": [],
            "body": {
              "id": 88334,
              "nodeType": "Block",
              "src": "1600:1248:224",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88188,
                      "mutability": "mutable",
                      "name": "gt",
                      "nameLocation": "1720:2:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "1711:11:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                        "typeString": "GameType"
                      },
                      "typeName": {
                        "id": 88187,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88186,
                          "name": "GameType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70035,
                          "src": "1711:8:224"
                        },
                        "referencedDeclaration": 70035,
                        "src": "1711:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88200,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88194,
                                "name": "gameType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88178,
                                "src": "1751:8:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 88195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1761:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "32",
                                "id": 88196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1764:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 88193,
                              "name": "bound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                10842,
                                10992
                              ],
                              "referencedDeclaration": 10842,
                              "src": "1745:5:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 88197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1745:21:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1739:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 88191,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1739:5:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1739:28:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 88189,
                        "name": "GameType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70035,
                        "src": "1725:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                          "typeString": "type(GameType)"
                        }
                      },
                      "id": 88190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "1725:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                        "typeString": "function (uint8) pure returns (GameType)"
                      }
                    },
                    "id": 88199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:43:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1711:57:224"
                },
                {
                  "expression": {
                    "id": 88207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88201,
                      "name": "rootClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88181,
                      "src": "1859:9:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88203,
                          "name": "rootClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88181,
                          "src": "1889:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          }
                        },
                        {
                          "expression": {
                            "id": 88204,
                            "name": "VMStatuses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70101,
                            "src": "1900:10:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VMStatuses_$70101_$",
                              "typeString": "type(library VMStatuses)"
                            }
                          },
                          "id": 88205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70084,
                          "src": "1900:18:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        ],
                        "id": 88202,
                        "name": "changeClaimStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88549,
                        "src": "1871:17:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Claim_$70019_$_t_userDefinedValueType$_VMStatus_$70037_$returns$_t_userDefinedValueType$_Claim_$70019_$",
                          "typeString": "function (Claim,VMStatus) pure returns (Claim)"
                        }
                      },
                      "id": 88206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1871:48:224",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "src": "1859:60:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "id": 88208,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:60:224"
                },
                {
                  "body": {
                    "id": 88233,
                    "nodeType": "Block",
                    "src": "2031:102:224",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88223,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88210,
                                  "src": "2085:1:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 88221,
                                  "name": "GameType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70035,
                                  "src": "2071:8:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                                    "typeString": "type(GameType)"
                                  }
                                },
                                "id": 88222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "wrap",
                                "nodeType": "MemberAccess",
                                "src": "2071:13:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                                  "typeString": "function (uint8) pure returns (GameType)"
                                }
                              },
                              "id": 88224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2071:16:224",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                "typeString": "GameType"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 88228,
                                      "name": "fakeClone",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88080,
                                      "src": "2110:9:224",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                                        "typeString": "contract FakeClone"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                                        "typeString": "contract FakeClone"
                                      }
                                    ],
                                    "id": 88227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2102:7:224",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 88226,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2102:7:224",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 88229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2102:18:224",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 88225,
                                "name": "IDisputeGame",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67711,
                                "src": "2089:12:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDisputeGame_$67711_$",
                                  "typeString": "type(contract IDisputeGame)"
                                }
                              },
                              "id": 88230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2089:32:224",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                                "typeString": "contract IDisputeGame"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                "typeString": "GameType"
                              },
                              {
                                "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                                "typeString": "contract IDisputeGame"
                              }
                            ],
                            "expression": {
                              "id": 88218,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88077,
                              "src": "2045:7:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                "typeString": "contract DisputeGameFactory"
                              }
                            },
                            "id": 88220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setImplementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66416,
                            "src": "2045:25:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_contract$_IDisputeGame_$67711_$returns$__$",
                              "typeString": "function (GameType,contract IDisputeGame) external"
                            }
                          },
                          "id": 88231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2045:77:224",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88232,
                        "nodeType": "ExpressionStatement",
                        "src": "2045:77:224"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 88214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88212,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88210,
                      "src": "2019:1:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 88213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2023:1:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "2019:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88234,
                  "initializationExpression": {
                    "assignments": [
                      88210
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 88210,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2016:1:224",
                        "nodeType": "VariableDeclaration",
                        "scope": 88234,
                        "src": "2010:7:224",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 88209,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 88211,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2010:7:224"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 88216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2026:3:224",
                      "subExpression": {
                        "id": 88215,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88210,
                        "src": "2026:1:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 88217,
                    "nodeType": "ExpressionStatement",
                    "src": "2026:3:224"
                  },
                  "nodeType": "ForStatement",
                  "src": "2005:128:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 88238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2157:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2164:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2170:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 88241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2176:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88235,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2143:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12726,
                      "src": "2143:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 88242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2143:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88243,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:39:224"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2224:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2216:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2216:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2216:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88249,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88188,
                        "src": "2228:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88250,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88181,
                        "src": "2232:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      ],
                      "id": 88244,
                      "name": "DisputeGameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88090,
                      "src": "2197:18:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$returns$__$",
                        "typeString": "function (address,GameType,Claim)"
                      }
                    },
                    "id": 88251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:45:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88252,
                  "nodeType": "EmitStatement",
                  "src": "2192:50:224"
                },
                {
                  "assignments": [
                    88255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88255,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "2265:5:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "2252:18:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                        "typeString": "contract IDisputeGame"
                      },
                      "typeName": {
                        "id": 88254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88253,
                          "name": "IDisputeGame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67711,
                          "src": "2252:12:224"
                        },
                        "referencedDeclaration": 67711,
                        "src": "2252:12:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88262,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88258,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88188,
                        "src": "2288:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88259,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88181,
                        "src": "2292:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88260,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88183,
                        "src": "2303:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88256,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "2273:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66372,
                      "src": "2273:14:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$",
                        "typeString": "function (GameType,Claim,bytes memory) external returns (contract IDisputeGame)"
                      }
                    },
                    "id": 88261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2252:61:224"
                },
                {
                  "assignments": [
                    88265,
                    88268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88265,
                      "mutability": "mutable",
                      "name": "game",
                      "nameLocation": "2338:4:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "2325:17:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                        "typeString": "contract IDisputeGame"
                      },
                      "typeName": {
                        "id": 88264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88263,
                          "name": "IDisputeGame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67711,
                          "src": "2325:12:224"
                        },
                        "referencedDeclaration": 67711,
                        "src": "2325:12:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88268,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "2354:9:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "2344:19:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                        "typeString": "Timestamp"
                      },
                      "typeName": {
                        "id": 88267,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88266,
                          "name": "Timestamp",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70025,
                          "src": "2344:9:224"
                        },
                        "referencedDeclaration": 70025,
                        "src": "2344:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                          "typeString": "Timestamp"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88275,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88271,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88188,
                        "src": "2381:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88272,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88181,
                        "src": "2385:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88273,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88183,
                        "src": "2396:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88269,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "2367:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "games",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66224,
                      "src": "2367:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$_t_userDefinedValueType$_Timestamp_$70025_$",
                        "typeString": "function (GameType,Claim,bytes memory) view external returns (contract IDisputeGame,Timestamp)"
                      }
                    },
                    "id": 88274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IDisputeGame_$67711_$_t_userDefinedValueType$_Timestamp_$70025_$",
                      "typeString": "tuple(contract IDisputeGame,Timestamp)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2324:82:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88279,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88265,
                            "src": "2518:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2510:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2510:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2510:13:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88283,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88255,
                            "src": "2533:5:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2525:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2525:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2525:14:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88276,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "2501:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88286,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:39:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88290,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88268,
                            "src": "2576:9:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          ],
                          "expression": {
                            "id": 88288,
                            "name": "Timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70025,
                            "src": "2559:9:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Timestamp_$70025_$",
                              "typeString": "type(Timestamp)"
                            }
                          },
                          "id": 88289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "2559:16:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Timestamp_$70025_$returns$_t_uint64_$",
                            "typeString": "function (Timestamp) pure returns (uint64)"
                          }
                        },
                        "id": 88291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2559:27:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 88292,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2588:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 88293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2588:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88287,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2550:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:54:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88295,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:54:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88297,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88077,
                            "src": "2623:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          },
                          "id": 88298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gameCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66186,
                          "src": "2623:17:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 88299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2623:19:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2644:1:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88296,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2614:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:32:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88302,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:32:224"
                },
                {
                  "assignments": [
                    null,
                    88305,
                    88308
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 88305,
                      "mutability": "mutable",
                      "name": "timestamp2",
                      "nameLocation": "2670:10:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "2660:20:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                        "typeString": "Timestamp"
                      },
                      "typeName": {
                        "id": 88304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88303,
                          "name": "Timestamp",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70025,
                          "src": "2660:9:224"
                        },
                        "referencedDeclaration": 70025,
                        "src": "2660:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                          "typeString": "Timestamp"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88308,
                      "mutability": "mutable",
                      "name": "game2",
                      "nameLocation": "2695:5:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88334,
                      "src": "2682:18:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                        "typeString": "contract IDisputeGame"
                      },
                      "typeName": {
                        "id": 88307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88306,
                          "name": "IDisputeGame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67711,
                          "src": "2682:12:224"
                        },
                        "referencedDeclaration": 67711,
                        "src": "2682:12:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88313,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 88311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2724:1:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 88309,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "2704:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gameAtIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66251,
                      "src": "2704:19:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Timestamp_$70025_$_t_contract$_IDisputeGame_$67711_$",
                        "typeString": "function (uint256) view external returns (GameType,Timestamp,contract IDisputeGame)"
                      }
                    },
                    "id": 88312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:22:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Timestamp_$70025_$_t_contract$_IDisputeGame_$67711_$",
                      "typeString": "tuple(GameType,Timestamp,contract IDisputeGame)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2657:69:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88317,
                            "name": "game2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88308,
                            "src": "2753:5:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2745:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2745:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2745:14:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88321,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88255,
                            "src": "2769:5:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2761:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2761:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2761:14:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88314,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "2736:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88324,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:40:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88328,
                            "name": "timestamp2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88305,
                            "src": "2812:10:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          ],
                          "expression": {
                            "id": 88326,
                            "name": "Timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70025,
                            "src": "2795:9:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Timestamp_$70025_$",
                              "typeString": "type(Timestamp)"
                            }
                          },
                          "id": 88327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "2795:16:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Timestamp_$70025_$returns$_t_uint64_$",
                            "typeString": "function (Timestamp) pure returns (uint64)"
                          }
                        },
                        "id": 88329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2795:28:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 88330,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2825:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 88331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2825:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88325,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2786:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:55:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88333,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:55:224"
                }
              ]
            },
            "documentation": {
              "id": 88176,
              "nodeType": "StructuredDocumentation",
              "src": "1349:146:224",
              "text": "@dev Tests that the `create` function succeeds when creating a new dispute game\n      with a `GameType` that has an implementation set."
            },
            "functionSelector": "ea9085c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_create_succeeds",
            "nameLocation": "1509:24:224",
            "parameters": {
              "id": 88184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88178,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "1540:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88335,
                  "src": "1534:14:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 88177,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88181,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "1556:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88335,
                  "src": "1550:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88180,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88179,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "1550:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "1550:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88183,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "1582:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88335,
                  "src": "1567:24:224",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88182,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1533:59:224"
            },
            "returnParameters": {
              "id": 88185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:224"
            },
            "scope": 88550,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88389,
            "nodeType": "FunctionDefinition",
            "src": "2983:563:224",
            "nodes": [],
            "body": {
              "id": 88388,
              "nodeType": "Block",
              "src": "3089:457:224",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88348,
                      "mutability": "mutable",
                      "name": "gt",
                      "nameLocation": "3209:2:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88388,
                      "src": "3200:11:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                        "typeString": "GameType"
                      },
                      "typeName": {
                        "id": 88347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88346,
                          "name": "GameType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70035,
                          "src": "3200:8:224"
                        },
                        "referencedDeclaration": 70035,
                        "src": "3200:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88360,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88354,
                                "name": "gameType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88338,
                                "src": "3240:8:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 88355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3250:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "32",
                                "id": 88356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3253:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 88353,
                              "name": "bound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                10842,
                                10992
                              ],
                              "referencedDeclaration": 10842,
                              "src": "3234:5:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 88357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:21:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3228:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 88351,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3228:5:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3228:28:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 88349,
                        "name": "GameType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70035,
                        "src": "3214:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                          "typeString": "type(GameType)"
                        }
                      },
                      "id": 88350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "3214:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                        "typeString": "function (uint8) pure returns (GameType)"
                      }
                    },
                    "id": 88359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3214:43:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3200:57:224"
                },
                {
                  "expression": {
                    "id": 88367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88361,
                      "name": "rootClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88341,
                      "src": "3348:9:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88363,
                          "name": "rootClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88341,
                          "src": "3378:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          }
                        },
                        {
                          "expression": {
                            "id": 88364,
                            "name": "VMStatuses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70101,
                            "src": "3389:10:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VMStatuses_$70101_$",
                              "typeString": "type(library VMStatuses)"
                            }
                          },
                          "id": 88365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70084,
                          "src": "3389:18:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        ],
                        "id": 88362,
                        "name": "changeClaimStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88549,
                        "src": "3360:17:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Claim_$70019_$_t_userDefinedValueType$_VMStatus_$70037_$returns$_t_userDefinedValueType$_Claim_$70019_$",
                          "typeString": "function (Claim,VMStatus) pure returns (Claim)"
                        }
                      },
                      "id": 88366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3360:48:224",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "src": "3348:60:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "id": 88368,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:60:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88374,
                              "name": "NoImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69917,
                              "src": "3458:16:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_GameType_$70035_$returns$__$",
                                "typeString": "function (GameType) pure"
                              }
                            },
                            "id": 88375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3458:25:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88376,
                            "name": "gt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88348,
                            "src": "3485:2:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                              "typeString": "GameType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                              "typeString": "GameType"
                            }
                          ],
                          "expression": {
                            "id": 88372,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3435:3:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3435:22:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:53:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88369,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3419:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "3419:15:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3419:70:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88379,
                  "nodeType": "ExpressionStatement",
                  "src": "3419:70:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88383,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88348,
                        "src": "3514:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88384,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88341,
                        "src": "3518:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88385,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88343,
                        "src": "3529:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88380,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "3499:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66372,
                      "src": "3499:14:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$",
                        "typeString": "function (GameType,Claim,bytes memory) external returns (contract IDisputeGame)"
                      }
                    },
                    "id": 88386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "id": 88387,
                  "nodeType": "ExpressionStatement",
                  "src": "3499:40:224"
                }
              ]
            },
            "documentation": {
              "id": 88336,
              "nodeType": "StructuredDocumentation",
              "src": "2854:124:224",
              "text": "@dev Tests that the `create` function reverts when there is no implementation\n      set for the given `GameType`."
            },
            "functionSelector": "a8cc6657",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_create_noImpl_reverts",
            "nameLocation": "2992:30:224",
            "parameters": {
              "id": 88344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88338,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "3029:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88389,
                  "src": "3023:14:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 88337,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3023:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88341,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "3045:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88389,
                  "src": "3039:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88339,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "3039:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "3039:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88343,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3071:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88389,
                  "src": "3056:24:224",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3022:59:224"
            },
            "returnParameters": {
              "id": 88345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3089:0:224"
            },
            "scope": 88550,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88535,
            "nodeType": "FunctionDefinition",
            "src": "3659:1496:224",
            "nodes": [],
            "body": {
              "id": 88534,
              "nodeType": "Block",
              "src": "3767:1388:224",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88402,
                      "mutability": "mutable",
                      "name": "gt",
                      "nameLocation": "3887:2:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88534,
                      "src": "3878:11:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                        "typeString": "GameType"
                      },
                      "typeName": {
                        "id": 88401,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88400,
                          "name": "GameType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70035,
                          "src": "3878:8:224"
                        },
                        "referencedDeclaration": 70035,
                        "src": "3878:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88414,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88408,
                                "name": "gameType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88392,
                                "src": "3918:8:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 88409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3928:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "32",
                                "id": 88410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3931:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 88407,
                              "name": "bound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                10842,
                                10992
                              ],
                              "referencedDeclaration": 10842,
                              "src": "3912:5:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 88411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3912:21:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3906:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 88405,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3906:5:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3906:28:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 88403,
                        "name": "GameType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70035,
                        "src": "3892:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                          "typeString": "type(GameType)"
                        }
                      },
                      "id": 88404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "3892:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                        "typeString": "function (uint8) pure returns (GameType)"
                      }
                    },
                    "id": 88413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:43:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3878:57:224"
                },
                {
                  "expression": {
                    "id": 88421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88415,
                      "name": "rootClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88395,
                      "src": "4026:9:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88417,
                          "name": "rootClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88395,
                          "src": "4056:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          }
                        },
                        {
                          "expression": {
                            "id": 88418,
                            "name": "VMStatuses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70101,
                            "src": "4067:10:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VMStatuses_$70101_$",
                              "typeString": "type(library VMStatuses)"
                            }
                          },
                          "id": 88419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70084,
                          "src": "4067:18:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                            "typeString": "Claim"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                            "typeString": "VMStatus"
                          }
                        ],
                        "id": 88416,
                        "name": "changeClaimStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88549,
                        "src": "4038:17:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Claim_$70019_$_t_userDefinedValueType$_VMStatus_$70037_$returns$_t_userDefinedValueType$_Claim_$70019_$",
                          "typeString": "function (Claim,VMStatus) pure returns (Claim)"
                        }
                      },
                      "id": 88420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4038:48:224",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                        "typeString": "Claim"
                      }
                    },
                    "src": "4026:60:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "id": 88422,
                  "nodeType": "ExpressionStatement",
                  "src": "4026:60:224"
                },
                {
                  "body": {
                    "id": 88447,
                    "nodeType": "Block",
                    "src": "4198:102:224",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88437,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88424,
                                  "src": "4252:1:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 88435,
                                  "name": "GameType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70035,
                                  "src": "4238:8:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                                    "typeString": "type(GameType)"
                                  }
                                },
                                "id": 88436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "wrap",
                                "nodeType": "MemberAccess",
                                "src": "4238:13:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                                  "typeString": "function (uint8) pure returns (GameType)"
                                }
                              },
                              "id": 88438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4238:16:224",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                "typeString": "GameType"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 88442,
                                      "name": "fakeClone",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88080,
                                      "src": "4277:9:224",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                                        "typeString": "contract FakeClone"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FakeClone_$88786",
                                        "typeString": "contract FakeClone"
                                      }
                                    ],
                                    "id": 88441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4269:7:224",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 88440,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4269:7:224",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 88443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4269:18:224",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 88439,
                                "name": "IDisputeGame",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67711,
                                "src": "4256:12:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDisputeGame_$67711_$",
                                  "typeString": "type(contract IDisputeGame)"
                                }
                              },
                              "id": 88444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4256:32:224",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                                "typeString": "contract IDisputeGame"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                "typeString": "GameType"
                              },
                              {
                                "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                                "typeString": "contract IDisputeGame"
                              }
                            ],
                            "expression": {
                              "id": 88432,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88077,
                              "src": "4212:7:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                "typeString": "contract DisputeGameFactory"
                              }
                            },
                            "id": 88434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setImplementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66416,
                            "src": "4212:25:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_contract$_IDisputeGame_$67711_$returns$__$",
                              "typeString": "function (GameType,contract IDisputeGame) external"
                            }
                          },
                          "id": 88445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4212:77:224",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88446,
                        "nodeType": "ExpressionStatement",
                        "src": "4212:77:224"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 88428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88426,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88424,
                      "src": "4186:1:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 88427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4190:1:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "4186:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88448,
                  "initializationExpression": {
                    "assignments": [
                      88424
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 88424,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4183:1:224",
                        "nodeType": "VariableDeclaration",
                        "scope": 88448,
                        "src": "4177:7:224",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 88423,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4177:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 88425,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4177:7:224"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 88430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4193:3:224",
                      "subExpression": {
                        "id": 88429,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88424,
                        "src": "4193:1:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 88431,
                    "nodeType": "ExpressionStatement",
                    "src": "4193:3:224"
                  },
                  "nodeType": "ForStatement",
                  "src": "4172:128:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 88452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4388:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4395:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4401:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 88455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4407:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88449,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4374:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12726,
                      "src": "4374:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 88456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4374:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88457,
                  "nodeType": "ExpressionStatement",
                  "src": "4374:39:224"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4455:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4447:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4447:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4447:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88463,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88402,
                        "src": "4459:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88464,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88395,
                        "src": "4463:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      ],
                      "id": 88458,
                      "name": "DisputeGameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88090,
                      "src": "4428:18:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$returns$__$",
                        "typeString": "function (address,GameType,Claim)"
                      }
                    },
                    "id": 88465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4428:45:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88466,
                  "nodeType": "EmitStatement",
                  "src": "4423:50:224"
                },
                {
                  "assignments": [
                    88469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88469,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "4496:5:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88534,
                      "src": "4483:18:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                        "typeString": "contract IDisputeGame"
                      },
                      "typeName": {
                        "id": 88468,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88467,
                          "name": "IDisputeGame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67711,
                          "src": "4483:12:224"
                        },
                        "referencedDeclaration": 67711,
                        "src": "4483:12:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88476,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88472,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88402,
                        "src": "4519:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88473,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88395,
                        "src": "4523:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88474,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88397,
                        "src": "4534:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88470,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "4504:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66372,
                      "src": "4504:14:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$",
                        "typeString": "function (GameType,Claim,bytes memory) external returns (contract IDisputeGame)"
                      }
                    },
                    "id": 88475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4483:61:224"
                },
                {
                  "assignments": [
                    88479,
                    88482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88479,
                      "mutability": "mutable",
                      "name": "game",
                      "nameLocation": "4569:4:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88534,
                      "src": "4556:17:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                        "typeString": "contract IDisputeGame"
                      },
                      "typeName": {
                        "id": 88478,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88477,
                          "name": "IDisputeGame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67711,
                          "src": "4556:12:224"
                        },
                        "referencedDeclaration": 67711,
                        "src": "4556:12:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88482,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "4585:9:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88534,
                      "src": "4575:19:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                        "typeString": "Timestamp"
                      },
                      "typeName": {
                        "id": 88481,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88480,
                          "name": "Timestamp",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70025,
                          "src": "4575:9:224"
                        },
                        "referencedDeclaration": 70025,
                        "src": "4575:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                          "typeString": "Timestamp"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88489,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88485,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88402,
                        "src": "4612:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88486,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88395,
                        "src": "4616:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88487,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88397,
                        "src": "4627:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88483,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "4598:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "games",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66224,
                      "src": "4598:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$_t_userDefinedValueType$_Timestamp_$70025_$",
                        "typeString": "function (GameType,Claim,bytes memory) view external returns (contract IDisputeGame,Timestamp)"
                      }
                    },
                    "id": 88488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IDisputeGame_$67711_$_t_userDefinedValueType$_Timestamp_$70025_$",
                      "typeString": "tuple(contract IDisputeGame,Timestamp)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4555:82:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88493,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88479,
                            "src": "4748:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4740:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4740:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4740:13:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88497,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88469,
                            "src": "4763:5:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4755:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4755:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4755:14:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88490,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "4731:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:39:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88500,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:39:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88504,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88482,
                            "src": "4806:9:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Timestamp_$70025",
                              "typeString": "Timestamp"
                            }
                          ],
                          "expression": {
                            "id": 88502,
                            "name": "Timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70025,
                            "src": "4789:9:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Timestamp_$70025_$",
                              "typeString": "type(Timestamp)"
                            }
                          },
                          "id": 88503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "4789:16:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Timestamp_$70025_$returns$_t_uint64_$",
                            "typeString": "function (Timestamp) pure returns (uint64)"
                          }
                        },
                        "id": 88505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4789:27:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 88506,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4818:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 88507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4818:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88501,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4780:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 88508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4780:54:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88509,
                  "nodeType": "ExpressionStatement",
                  "src": "4780:54:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88515,
                              "name": "GameAlreadyExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69923,
                              "src": "5014:17:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_userDefinedValueType$_Hash_$70017_$returns$__$",
                                "typeString": "function (Hash) pure"
                              }
                            },
                            "id": 88516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5014:26:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88519,
                                "name": "gt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88402,
                                "src": "5062:2:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              },
                              {
                                "id": 88520,
                                "name": "rootClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88395,
                                "src": "5066:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                }
                              },
                              {
                                "id": 88521,
                                "name": "extraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88397,
                                "src": "5077:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 88517,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88077,
                                "src": "5042:7:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                  "typeString": "contract DisputeGameFactory"
                                }
                              },
                              "id": 88518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getGameUUID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66389,
                              "src": "5042:19:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Hash_$70017_$",
                                "typeString": "function (GameType,Claim,bytes memory) pure external returns (Hash)"
                              }
                            },
                            "id": 88522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5042:45:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Hash_$70017",
                              "typeString": "Hash"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Hash_$70017",
                              "typeString": "Hash"
                            }
                          ],
                          "expression": {
                            "id": 88513,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4991:3:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4991:22:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:97:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88510,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4962:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "4962:15:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:136:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88525,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:136:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88529,
                        "name": "gt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88402,
                        "src": "5123:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "id": 88530,
                        "name": "rootClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88395,
                        "src": "5127:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        }
                      },
                      {
                        "id": 88531,
                        "name": "extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88397,
                        "src": "5138:9:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                          "typeString": "Claim"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88526,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "5108:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66372,
                      "src": "5108:14:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_contract$_IDisputeGame_$67711_$",
                        "typeString": "function (GameType,Claim,bytes memory) external returns (contract IDisputeGame)"
                      }
                    },
                    "id": 88532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5108:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "id": 88533,
                  "nodeType": "ExpressionStatement",
                  "src": "5108:40:224"
                }
              ]
            },
            "documentation": {
              "id": 88390,
              "nodeType": "StructuredDocumentation",
              "src": "3552:102:224",
              "text": "@dev Tests that the `create` function reverts when there exists a dispute game with the same UUID."
            },
            "functionSelector": "b9bc9067",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_create_sameUUID_reverts",
            "nameLocation": "3668:32:224",
            "parameters": {
              "id": 88398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88392,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "3707:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88535,
                  "src": "3701:14:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 88391,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88395,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "3723:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88535,
                  "src": "3717:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88394,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88393,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "3717:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "3717:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88397,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3749:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88535,
                  "src": "3734:24:224",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3700:59:224"
            },
            "returnParameters": {
              "id": 88399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3767:0:224"
            },
            "scope": 88550,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88549,
            "nodeType": "FunctionDefinition",
            "src": "5161:204:224",
            "nodes": [],
            "body": {
              "id": 88548,
              "nodeType": "Block",
              "src": "5253:112:224",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5272:87:224",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5286:63:224",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5309:3:224",
                                          "type": "",
                                          "value": "248"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5314:4:224",
                                          "type": "",
                                          "value": "0xFF"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5305:3:224"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5305:14:224"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5301:3:224"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5301:19:224"
                                },
                                {
                                  "name": "_claim",
                                  "nodeType": "YulIdentifier",
                                  "src": "5322:6:224"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5297:3:224"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5297:32:224"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5335:3:224",
                                  "type": "",
                                  "value": "248"
                                },
                                {
                                  "name": "_status",
                                  "nodeType": "YulIdentifier",
                                  "src": "5340:7:224"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5331:3:224"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5331:17:224"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "5294:2:224"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5294:55:224"
                        },
                        "variableNames": [
                          {
                            "name": "out_",
                            "nodeType": "YulIdentifier",
                            "src": "5286:4:224"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 88538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5322:6:224",
                      "valueSize": 1
                    },
                    {
                      "declaration": 88541,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5340:7:224",
                      "valueSize": 1
                    },
                    {
                      "declaration": 88545,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5286:4:224",
                      "valueSize": 1
                    }
                  ],
                  "id": 88547,
                  "nodeType": "InlineAssembly",
                  "src": "5263:96:224"
                }
              ]
            },
            "functionSelector": "bd3300c9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeClaimStatus",
            "nameLocation": "5170:17:224",
            "parameters": {
              "id": 88542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88538,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "5194:6:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88549,
                  "src": "5188:12:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88537,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88536,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "5188:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "5188:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88541,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "5211:7:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88549,
                  "src": "5202:16:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                    "typeString": "VMStatus"
                  },
                  "typeName": {
                    "id": 88540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88539,
                      "name": "VMStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70037,
                      "src": "5202:8:224"
                    },
                    "referencedDeclaration": 70037,
                    "src": "5202:8:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_VMStatus_$70037",
                      "typeString": "VMStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5187:32:224"
            },
            "returnParameters": {
              "id": 88546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88545,
                  "mutability": "mutable",
                  "name": "out_",
                  "nameLocation": "5247:4:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88549,
                  "src": "5241:10:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88544,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88543,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "5241:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "5241:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5240:12:224"
            },
            "scope": 88550,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88174,
              "name": "DisputeGameFactory_Init",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88173,
              "src": "1319:23:224"
            },
            "id": 88175,
            "nodeType": "InheritanceSpecifier",
            "src": "1319:23:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_Create_Test",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88550,
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_Create_Test",
        "nameLocation": "1285:30:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88656,
        "nodeType": "ContractDefinition",
        "src": "5369:1302:224",
        "nodes": [
          {
            "id": 88622,
            "nodeType": "FunctionDefinition",
            "src": "5567:677:224",
            "nodes": [],
            "body": {
              "id": 88621,
              "nodeType": "Block",
              "src": "5617:627:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 88561,
                                  "name": "GameTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70067,
                                  "src": "5766:9:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_GameTypes_$70067_$",
                                    "typeString": "type(library GameTypes)"
                                  }
                                },
                                "id": 88562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "FAULT",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70050,
                                "src": "5766:15:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              ],
                              "expression": {
                                "id": 88559,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88077,
                                "src": "5748:7:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                  "typeString": "contract DisputeGameFactory"
                                }
                              },
                              "id": 88560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gameImpls",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66128,
                              "src": "5748:17:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_userDefinedValueType$_GameType_$70035_$returns$_t_contract$_IDisputeGame_$67711_$",
                                "typeString": "function (GameType) view external returns (contract IDisputeGame)"
                              }
                            },
                            "id": 88563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5748:34:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5740:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88557,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5740:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5740:43:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5793:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5785:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5785:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5785:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88556,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "5731:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:65:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88570,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:65:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 88574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5821:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5827:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5833:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5839:4:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 88580,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88077,
                            "src": "5853:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          ],
                          "id": 88579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5845:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5845:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5845:16:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88571,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5807:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "5807:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 88582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5807:55:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88583,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:55:224"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5903:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 88586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5895:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5895:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5895:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 88589,
                          "name": "GameTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70067,
                          "src": "5907:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GameTypes_$70067_$",
                            "typeString": "type(library GameTypes)"
                          }
                        },
                        "id": 88590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FAULT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70050,
                        "src": "5907:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      ],
                      "id": 88584,
                      "name": "ImplementationSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88097,
                      "src": "5877:17:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_userDefinedValueType$_GameType_$70035_$returns$__$",
                        "typeString": "function (address,GameType)"
                      }
                    },
                    "id": 88591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5877:46:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88592,
                  "nodeType": "EmitStatement",
                  "src": "5872:51:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88596,
                          "name": "GameTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70067,
                          "src": "6032:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GameTypes_$70067_$",
                            "typeString": "type(library GameTypes)"
                          }
                        },
                        "id": 88597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FAULT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70050,
                        "src": "6032:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6070:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6062:7:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6062:7:224",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6062:10:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88598,
                          "name": "IDisputeGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67711,
                          "src": "6049:12:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDisputeGame_$67711_$",
                            "typeString": "type(contract IDisputeGame)"
                          }
                        },
                        "id": 88603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6049:24:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      ],
                      "expression": {
                        "id": 88593,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "6006:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66416,
                      "src": "6006:25:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_contract$_IDisputeGame_$67711_$returns$__$",
                        "typeString": "function (GameType,contract IDisputeGame) external"
                      }
                    },
                    "id": 88604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6006:68:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88605,
                  "nodeType": "ExpressionStatement",
                  "src": "6006:68:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 88611,
                                  "name": "GameTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70067,
                                  "src": "6207:9:224",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_GameTypes_$70067_$",
                                    "typeString": "type(library GameTypes)"
                                  }
                                },
                                "id": 88612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "FAULT",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70050,
                                "src": "6207:15:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              ],
                              "expression": {
                                "id": 88609,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88077,
                                "src": "6189:7:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                  "typeString": "contract DisputeGameFactory"
                                }
                              },
                              "id": 88610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gameImpls",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66128,
                              "src": "6189:17:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_userDefinedValueType$_GameType_$70035_$returns$_t_contract$_IDisputeGame_$67711_$",
                                "typeString": "function (GameType) view external returns (contract IDisputeGame)"
                              }
                            },
                            "id": 88613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6189:34:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                              "typeString": "contract IDisputeGame"
                            }
                          ],
                          "id": 88608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6181:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6181:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6181:43:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6234:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 88616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6226:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88615,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6226:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6226:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88606,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "6172:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6172:65:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88620,
                  "nodeType": "ExpressionStatement",
                  "src": "6172:65:224"
                }
              ]
            },
            "documentation": {
              "id": 88553,
              "nodeType": "StructuredDocumentation",
              "src": "5453:109:224",
              "text": "@dev Tests that the `setImplementation` function properly sets the implementation for a given `GameType`."
            },
            "functionSelector": "7b74a4fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setImplementation_succeeds",
            "nameLocation": "5576:31:224",
            "parameters": {
              "id": 88554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5607:2:224"
            },
            "returnParameters": {
              "id": 88555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5617:0:224"
            },
            "scope": 88656,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88655,
            "nodeType": "FunctionDefinition",
            "src": "6343:326:224",
            "nodes": [],
            "body": {
              "id": 88654,
              "nodeType": "Block",
              "src": "6401:268:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6520:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6512:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6512:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88626,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6503:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "6503:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:20:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88634,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:20:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 88638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6549:34:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 88635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6533:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "6533:15:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6533:51:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88640,
                  "nodeType": "ExpressionStatement",
                  "src": "6533:51:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88644,
                          "name": "GameTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70067,
                          "src": "6620:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GameTypes_$70067_$",
                            "typeString": "type(library GameTypes)"
                          }
                        },
                        "id": 88645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FAULT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70050,
                        "src": "6620:15:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6658:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6650:7:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88647,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6650:7:224",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6650:10:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88646,
                          "name": "IDisputeGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67711,
                          "src": "6637:12:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDisputeGame_$67711_$",
                            "typeString": "type(contract IDisputeGame)"
                          }
                        },
                        "id": 88651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6637:24:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        },
                        {
                          "typeIdentifier": "t_contract$_IDisputeGame_$67711",
                          "typeString": "contract IDisputeGame"
                        }
                      ],
                      "expression": {
                        "id": 88641,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "6594:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66416,
                      "src": "6594:25:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_GameType_$70035_$_t_contract$_IDisputeGame_$67711_$returns$__$",
                        "typeString": "function (GameType,contract IDisputeGame) external"
                      }
                    },
                    "id": 88652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:68:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88653,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:68:224"
                }
              ]
            },
            "documentation": {
              "id": 88623,
              "nodeType": "StructuredDocumentation",
              "src": "6250:88:224",
              "text": "@dev Tests that the `setImplementation` function reverts when called by a non-owner."
            },
            "functionSelector": "c1551c6a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setImplementation_notOwner_reverts",
            "nameLocation": "6352:39:224",
            "parameters": {
              "id": 88624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:2:224"
            },
            "returnParameters": {
              "id": 88625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6401:0:224"
            },
            "scope": 88656,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88551,
              "name": "DisputeGameFactory_Init",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88173,
              "src": "5423:23:224"
            },
            "id": 88552,
            "nodeType": "InheritanceSpecifier",
            "src": "5423:23:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_SetImplementation_Test",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88656,
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_SetImplementation_Test",
        "nameLocation": "5378:41:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88706,
        "nodeType": "ContractDefinition",
        "src": "6673:672:224",
        "nodes": [
          {
            "id": 88705,
            "nodeType": "FunctionDefinition",
            "src": "6913:430:224",
            "nodes": [],
            "body": {
              "id": 88704,
              "nodeType": "Block",
              "src": "7018:325:224",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88671,
                      "mutability": "mutable",
                      "name": "gt",
                      "nameLocation": "7138:2:224",
                      "nodeType": "VariableDeclaration",
                      "scope": 88704,
                      "src": "7129:11:224",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                        "typeString": "GameType"
                      },
                      "typeName": {
                        "id": 88670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88669,
                          "name": "GameType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70035,
                          "src": "7129:8:224"
                        },
                        "referencedDeclaration": 70035,
                        "src": "7129:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                          "typeString": "GameType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88683,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88677,
                                "name": "gameType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88661,
                                "src": "7169:8:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 88678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7179:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "32",
                                "id": 88679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7182:1:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 88676,
                              "name": "bound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                10842,
                                10992
                              ],
                              "referencedDeclaration": 10842,
                              "src": "7163:5:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 88680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7163:21:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7157:5:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 88674,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "7157:5:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7157:28:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 88672,
                        "name": "GameType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70035,
                        "src": "7143:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$70035_$",
                          "typeString": "type(GameType)"
                        }
                      },
                      "id": 88673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "7143:13:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$70035_$",
                        "typeString": "function (uint8) pure returns (GameType)"
                      }
                    },
                    "id": 88682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7143:43:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                      "typeString": "GameType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7129:57:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88689,
                                "name": "gt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88671,
                                "src": "7251:2:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              },
                              {
                                "id": 88690,
                                "name": "rootClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88664,
                                "src": "7255:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                }
                              },
                              {
                                "id": 88691,
                                "name": "extraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88666,
                                "src": "7266:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 88687,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88077,
                                "src": "7231:7:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                                  "typeString": "contract DisputeGameFactory"
                                }
                              },
                              "id": 88688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getGameUUID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66389,
                              "src": "7231:19:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_GameType_$70035_$_t_userDefinedValueType$_Claim_$70019_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Hash_$70017_$",
                                "typeString": "function (GameType,Claim,bytes memory) pure external returns (Hash)"
                              }
                            },
                            "id": 88692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7231:45:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Hash_$70017",
                              "typeString": "Hash"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Hash_$70017",
                              "typeString": "Hash"
                            }
                          ],
                          "expression": {
                            "id": 88685,
                            "name": "Hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70017,
                            "src": "7219:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Hash_$70017_$",
                              "typeString": "type(Hash)"
                            }
                          },
                          "id": 88686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "7219:11:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Hash_$70017_$returns$_t_bytes32_$",
                            "typeString": "function (Hash) pure returns (bytes32)"
                          }
                        },
                        "id": 88693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7219:58:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88697,
                                "name": "gt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88671,
                                "src": "7300:2:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                }
                              },
                              {
                                "id": 88698,
                                "name": "rootClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88664,
                                "src": "7304:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                }
                              },
                              {
                                "id": 88699,
                                "name": "extraData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88666,
                                "src": "7315:9:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_GameType_$70035",
                                  "typeString": "GameType"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                                  "typeString": "Claim"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 88695,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7289:3:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 88696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "7289:10:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 88700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7289:36:224",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 88694,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7279:9:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 88701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7279:47:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 88684,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 406,
                      "src": "7197:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 88702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:139:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88703,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:139:224"
                }
              ]
            },
            "documentation": {
              "id": 88659,
              "nodeType": "StructuredDocumentation",
              "src": "6751:157:224",
              "text": "@dev Tests that the `getGameUUID` function returns the correct hash when comparing\n      against the keccak256 hash of the abi-encoded parameters."
            },
            "functionSelector": "9f3b4350",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDiff_getGameUUID_succeeds",
            "nameLocation": "6922:29:224",
            "parameters": {
              "id": 88667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88661,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "6958:8:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88705,
                  "src": "6952:14:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 88660,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6952:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88664,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "6974:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88705,
                  "src": "6968:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 88663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88662,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70019,
                      "src": "6968:5:224"
                    },
                    "referencedDeclaration": 70019,
                    "src": "6968:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$70019",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88666,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "7000:9:224",
                  "nodeType": "VariableDeclaration",
                  "scope": 88705,
                  "src": "6985:24:224",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88665,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6985:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6951:59:224"
            },
            "returnParameters": {
              "id": 88668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7018:0:224"
            },
            "scope": 88706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88657,
              "name": "DisputeGameFactory_Init",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88173,
              "src": "6721:23:224"
            },
            "id": 88658,
            "nodeType": "InheritanceSpecifier",
            "src": "6721:23:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_GetGameUUID_Test",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88706,
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_GetGameUUID_Test",
        "nameLocation": "6682:35:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88724,
        "nodeType": "ContractDefinition",
        "src": "7347:260:224",
        "nodes": [
          {
            "id": 88723,
            "nodeType": "FunctionDefinition",
            "src": "7510:95:224",
            "nodes": [],
            "body": {
              "id": 88722,
              "nodeType": "Block",
              "src": "7548:57:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88713,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88077,
                            "src": "7567:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          },
                          "id": 88714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29452,
                          "src": "7567:13:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 88715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7567:15:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88718,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7592:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_Owner_Test_$88724",
                              "typeString": "contract DisputeGameFactory_Owner_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_Owner_Test_$88724",
                              "typeString": "contract DisputeGameFactory_Owner_Test"
                            }
                          ],
                          "id": 88717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7584:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7584:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7584:13:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88712,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "7558:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7558:40:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88721,
                  "nodeType": "ExpressionStatement",
                  "src": "7558:40:224"
                }
              ]
            },
            "documentation": {
              "id": 88709,
              "nodeType": "StructuredDocumentation",
              "src": "7419:86:224",
              "text": "@dev Tests that the `owner` function returns the correct address after deployment."
            },
            "functionSelector": "e210dfb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_owner_succeeds",
            "nameLocation": "7519:19:224",
            "parameters": {
              "id": 88710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7538:2:224"
            },
            "returnParameters": {
              "id": 88711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7548:0:224"
            },
            "scope": 88724,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88707,
              "name": "DisputeGameFactory_Init",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88173,
              "src": "7389:23:224"
            },
            "id": 88708,
            "nodeType": "InheritanceSpecifier",
            "src": "7389:23:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_Owner_Test",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88724,
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_Owner_Test",
        "nameLocation": "7356:29:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88780,
        "nodeType": "ContractDefinition",
        "src": "7609:631:224",
        "nodes": [
          {
            "id": 88750,
            "nodeType": "FunctionDefinition",
            "src": "7785:151:224",
            "nodes": [],
            "body": {
              "id": 88749,
              "nodeType": "Block",
              "src": "7835:101:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7879:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 88734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7871:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7871:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7871:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88730,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "7845:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29503,
                      "src": "7845:25:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7845:37:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88738,
                  "nodeType": "ExpressionStatement",
                  "src": "7845:37:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88740,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88077,
                            "src": "7901:7:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                              "typeString": "contract DisputeGameFactory"
                            }
                          },
                          "id": 88741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29452,
                          "src": "7901:13:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 88742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7901:15:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7926:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 88744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7918:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88743,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7918:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7918:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88739,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "7892:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 88747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:37:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88748,
                  "nodeType": "ExpressionStatement",
                  "src": "7892:37:224"
                }
              ]
            },
            "documentation": {
              "id": 88727,
              "nodeType": "StructuredDocumentation",
              "src": "7693:87:224",
              "text": "@dev Tests that the `transferOwnership` function succeeds when called by the owner."
            },
            "functionSelector": "dee1ac0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_transferOwnership_succeeds",
            "nameLocation": "7794:31:224",
            "parameters": {
              "id": 88728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7825:2:224"
            },
            "returnParameters": {
              "id": 88729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7835:0:224"
            },
            "scope": 88780,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88779,
            "nodeType": "FunctionDefinition",
            "src": "8035:203:224",
            "nodes": [],
            "body": {
              "id": 88778,
              "nodeType": "Block",
              "src": "8093:145:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8120:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8112:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8112:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8112:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88754,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "8103:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "8103:8:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8103:20:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88762,
                  "nodeType": "ExpressionStatement",
                  "src": "8103:20:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 88766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8149:34:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 88763,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "8133:2:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "8133:15:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 88767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8133:51:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88768,
                  "nodeType": "ExpressionStatement",
                  "src": "8133:51:224"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8228:1:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 88773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8220:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8220:7:224",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8220:10:224",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88769,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88077,
                        "src": "8194:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeGameFactory_$66417",
                          "typeString": "contract DisputeGameFactory"
                        }
                      },
                      "id": 88771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29503,
                      "src": "8194:25:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8194:37:224",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88777,
                  "nodeType": "ExpressionStatement",
                  "src": "8194:37:224"
                }
              ]
            },
            "documentation": {
              "id": 88751,
              "nodeType": "StructuredDocumentation",
              "src": "7942:88:224",
              "text": "@dev Tests that the `transferOwnership` function reverts when called by a non-owner."
            },
            "functionSelector": "0ead8b92",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_transferOwnership_notOwner_reverts",
            "nameLocation": "8044:39:224",
            "parameters": {
              "id": 88752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8083:2:224"
            },
            "returnParameters": {
              "id": 88753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8093:0:224"
            },
            "scope": 88780,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88725,
              "name": "DisputeGameFactory_Init",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88173,
              "src": "7663:23:224"
            },
            "id": 88726,
            "nodeType": "InheritanceSpecifier",
            "src": "7663:23:224"
          }
        ],
        "canonicalName": "DisputeGameFactory_TransferOwnership_Test",
        "contractDependencies": [
          59663,
          63242,
          66417,
          76940,
          85052,
          88786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88780,
          88173,
          82634,
          82355,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "DisputeGameFactory_TransferOwnership_Test",
        "nameLocation": "7618:41:224",
        "scope": 88787,
        "usedErrors": []
      },
      {
        "id": 88786,
        "nodeType": "ContractDefinition",
        "src": "8336:81:224",
        "nodes": [
          {
            "id": 88785,
            "nodeType": "FunctionDefinition",
            "src": "8361:54:224",
            "nodes": [],
            "body": {
              "id": 88784,
              "nodeType": "Block",
              "src": "8392:23:224",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "8370:10:224",
            "parameters": {
              "id": 88782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8380:2:224"
            },
            "returnParameters": {
              "id": 88783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8392:0:224"
            },
            "scope": 88786,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FakeClone",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88781,
          "nodeType": "StructuredDocumentation",
          "src": "8242:94:224",
          "text": "@dev A fake clone used for testing the `DisputeGameFactory` contract's `create` function."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88786
        ],
        "name": "FakeClone",
        "nameLocation": "8345:9:224",
        "scope": 88787,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 224
}