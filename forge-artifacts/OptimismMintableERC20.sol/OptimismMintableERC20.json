{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BRIDGE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REMOTE_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remoteToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "818:4452:196:-:0;;;2171:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:1;2377;2380;2343:5;2350:7;2044:5:38;:13;2343:5:196;2044::38;:13;:::i;:::-;-1:-1:-1;2067:7:38;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;;732:22:202;;;;;764;;796;;-1:-1:-1;;;;;2397:27:196;;::::2;;::::0;2434:16;;;::::2;;::::0;-1:-1:-1;;2460:20:196::2;;;::::0;818:4452;;14:177:283;93:13;;-1:-1:-1;;;;;135:31:283;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:283;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:283;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:283:o;1218:884::-;1342:6;1350;1358;1366;1374;1427:3;1415:9;1406:7;1402:23;1398:33;1395:53;;;1444:1;1441;1434:12;1395:53;1467:40;1497:9;1467:40;:::i;:::-;1457:50;;1526:49;1571:2;1560:9;1556:18;1526:49;:::i;:::-;1619:2;1604:18;;1598:25;1516:59;;-1:-1:-1;;;;;;1672:14:283;;;1669:34;;;1699:1;1696;1689:12;1669:34;1722:61;1775:7;1766:6;1755:9;1751:22;1722:61;:::i;:::-;1712:71;;1829:2;1818:9;1814:18;1808:25;1792:41;;1858:2;1848:8;1845:16;1842:36;;;1874:1;1871;1864:12;1842:36;;1897:63;1952:7;1941:8;1930:9;1926:24;1897:63;:::i;:::-;1887:73;;;2003:3;1992:9;1988:19;1982:26;2048:4;2041:5;2037:16;2030:5;2027:27;2017:55;;2068:1;2065;2058:12;2017:55;2091:5;2081:15;;;1218:884;;;;;;;;:::o;2107:380::-;2186:1;2182:12;;;;2229;;;2250:61;;2304:4;2296:6;2292:17;2282:27;;2250:61;2357:2;2349:6;2346:14;2326:18;2323:38;2320:161;;2403:10;2398:3;2394:20;2391:1;2384:31;2438:4;2435:1;2428:15;2466:4;2463:1;2456:15;2320:161;;2107:380;;;:::o;2618:545::-;2720:2;2715:3;2712:11;2709:448;;;2756:1;2781:5;2777:2;2770:17;2826:4;2822:2;2812:19;2896:2;2884:10;2880:19;2877:1;2873:27;2867:4;2863:38;2932:4;2920:10;2917:20;2914:47;;;-1:-1:-1;2955:4:283;2914:47;3010:2;3005:3;3001:12;2998:1;2994:20;2988:4;2984:31;2974:41;;3065:82;3083:2;3076:5;3073:13;3065:82;;;3128:17;;;3109:1;3098:13;3065:82;;;3069:3;;;2709:448;2618:545;;;:::o;3339:1352::-;3459:10;;-1:-1:-1;;;;;3481:30:283;;3478:56;;;3514:18;;:::i;:::-;3543:97;3633:6;3593:38;3625:4;3619:11;3593:38;:::i;:::-;3587:4;3543:97;:::i;:::-;3695:4;;3759:2;3748:14;;3776:1;3771:663;;;;4478:1;4495:6;4492:89;;;-1:-1:-1;4547:19:283;;;4541:26;4492:89;-1:-1:-1;;3296:1:283;3292:11;;;3288:24;3284:29;3274:40;3320:1;3316:11;;;3271:57;4594:81;;3741:944;;3771:663;2565:1;2558:14;;;2602:4;2589:18;;-1:-1:-1;;3807:20:283;;;3925:236;3939:7;3936:1;3933:14;3925:236;;;4028:19;;;4022:26;4007:42;;4120:27;;;;4088:1;4076:14;;;;3955:19;;3925:236;;;3929:3;4189:6;4180:7;4177:19;4174:201;;;4250:19;;;4244:26;-1:-1:-1;;4333:1:283;4329:14;;;4345:3;4325:24;4321:37;4317:42;4302:58;4287:74;;4174:201;-1:-1:-1;;;;;4421:1:283;4405:14;;;4401:22;4388:36;;-1:-1:-1;3339:1352:283:o;:::-;818:4452:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d8578063ae1f6aaf1161008c578063dd62ed3e11610066578063dd62ed3e14610361578063e78cea9214610315578063ee9a31a2146103a757600080fd5b8063ae1f6aaf14610315578063c01e1bd61461033b578063d6c0b2c41461033b57600080fd5b80639dc29fac116100bd5780639dc29fac146102dc578063a457c2d7146102ef578063a9059cbb1461030257600080fd5b806370a082311461029e57806395d89b41146102d457600080fd5b806323b872dd1161012f5780633950935111610114578063395093511461026e57806340c10f191461028157806354fd4d501461029657600080fd5b806323b872dd1461022a578063313ce5671461023d57600080fd5b806306fdde031161016057806306fdde03146101f0578063095ea7b31461020557806318160ddd1461021857600080fd5b806301ffc9a71461017c578063033964be146101a4575b600080fd5b61018f61018a366004611329565b6103ce565b60405190151581526020015b60405180910390f35b6101cb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b6101f86104bf565b60405161019b919061139e565b61018f610213366004611418565b610551565b6002545b60405190815260200161019b565b61018f610238366004611442565b610569565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161019b565b61018f61027c366004611418565b61058d565b61029461028f366004611418565b6105d9565b005b6101f8610701565b61021c6102ac36600461147e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101f86107a4565b6102946102ea366004611418565b6107b3565b61018f6102fd366004611418565b6108ca565b61018f610310366004611418565b61099b565b7f00000000000000000000000000000000000000000000000000000000000000006101cb565b7f00000000000000000000000000000000000000000000000000000000000000006101cb565b61021c61036f366004611499565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101cb7f000000000000000000000000000000000000000000000000000000000000000081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007f1d1d8b63000000000000000000000000000000000000000000000000000000007fec4fc8e3000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000851683148061048757507fffffffff00000000000000000000000000000000000000000000000000000000858116908316145b806104b657507fffffffff00000000000000000000000000000000000000000000000000000000858116908216145b95945050505050565b6060600380546104ce906114cc565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa906114cc565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60003361055f8185856109a9565b5060019392505050565b600033610577858285610b5d565b610582858585610c34565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061055f90829086906105d490879061154e565b6109a9565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f7074696d69736d4d696e7461626c6545524332303a206f6e6c79206272696460448201527f67652063616e206d696e7420616e64206275726e00000000000000000000000060648201526084015b60405180910390fd5b6106ad8282610ee7565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516106f591815260200190565b60405180910390a25050565b606061072c7f0000000000000000000000000000000000000000000000000000000000000000611007565b6107557f0000000000000000000000000000000000000000000000000000000000000000611007565b61077e7f0000000000000000000000000000000000000000000000000000000000000000611007565b60405160200161079093929190611566565b604051602081830303815290604052905090565b6060600480546104ce906114cc565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f7074696d69736d4d696e7461626c6545524332303a206f6e6c79206272696460448201527f67652063616e206d696e7420616e64206275726e000000000000000000000000606482015260840161069a565b6108828282611144565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516106f591815260200190565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161069a565b61058282868684036109a9565b60003361055f818585610c34565b73ffffffffffffffffffffffffffffffffffffffff8316610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff8216610aee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c2e5781811015610c21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161069a565b610c2e84848484036109a9565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff8216610d7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610e30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610e7490849061154e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eda91815260200190565b60405180910390a3610c2e565b73ffffffffffffffffffffffffffffffffffffffff8216610f64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161069a565b8060026000828254610f76919061154e565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610fb090849061154e565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60608160000361104a57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611074578061105e816115dc565b915061106d9050600a83611643565b915061104e565b60008167ffffffffffffffff81111561108f5761108f611657565b6040519080825280601f01601f1916602001820160405280156110b9576020820181803683370190505b5090505b841561113c576110ce600183611686565b91506110db600a8661169d565b6110e690603061154e565b60f81b8183815181106110fb576110fb6116b1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611135600a86611643565b94506110bd565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff82166111e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020548181101561129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161069a565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208383039055600280548492906112d9908490611686565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b50565b60006020828403121561133b57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461136b57600080fd5b9392505050565b60005b8381101561138d578181015183820152602001611375565b83811115610c2e5750506000910152565b60208152600082518060208401526113bd816040850160208701611372565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461141357600080fd5b919050565b6000806040838503121561142b57600080fd5b611434836113ef565b946020939093013593505050565b60008060006060848603121561145757600080fd5b611460846113ef565b925061146e602085016113ef565b9150604084013590509250925092565b60006020828403121561149057600080fd5b61136b826113ef565b600080604083850312156114ac57600080fd5b6114b5836113ef565b91506114c3602084016113ef565b90509250929050565b600181811c908216806114e057607f821691505b602082108103611519577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156115615761156161151f565b500190565b60008451611578818460208901611372565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516115b4816001850160208a01611372565b600192019182015283516115cf816002840160208801611372565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361160d5761160d61151f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261165257611652611614565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156116985761169861151f565b500390565b6000826116ac576116ac611614565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "818:4452:196:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3543:519;;;;;;:::i;:::-;;:::i;:::-;;;516:14:283;;509:22;491:41;;479:2;464:18;3543:519:196;;;;;;;;1006:37;;;;;;;;719:42:283;707:55;;;689:74;;677:2;662:18;1006:37:196;543:226:283;2156:98:38;;;:::i;:::-;;;;;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;3244:106::-;3331:12;;3244:106;;;2090:25:283;;;2078:2;2063:18;3244:106:38;1944:177:283;5192:286:38;;;;;;:::i;:::-;;:::i;5179:89:196:-;;;2631:4:283;5253:8:196;2619:17:283;2601:36;;2589:2;2574:18;5179:89:196;2459:184:283;5873:234:38;;;;;;:::i;:::-;;:::i;2666:254:196:-;;;;;;:::i;:::-;;:::i;:::-;;942:328:202;;;:::i;3408:125:38:-;;;;;;:::i;:::-;3508:18;;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;3101:260:196:-;;;;;;:::i;:::-;;:::i;6594:427:38:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;4361:80:196:-;4428:6;4361:80;;4175:85;4241:12;4175:85;;3976:149:38;;;;;;:::i;:::-;4091:18;;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1113:31:196;;;;;3543:519;3622:4;3654:25;3771:38;3924:40;3981:22;;;;;;:48;;-1:-1:-1;4007:22:196;;;;;;;;3981:48;:74;;;-1:-1:-1;4033:22:196;;;;;;;;3981:74;3974:81;3543:519;-1:-1:-1;;;;;3543:519:196:o;2156:98:38:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:53;4570:32:38;719:10:53;4586:7:38;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:38;;4433:197;-1:-1:-1;;;4433:197:38:o;5192:286::-;5319:4;719:10:53;5375:38:38;5391:4;719:10:53;5406:6:38;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:38;;5192:286;-1:-1:-1;;;;5192:286:38:o;5873:234::-;719:10:53;5961:4:38;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5961:4;;719:10:53;6015:64:38;;719:10:53;;4091:27:38;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2666:254:196:-;1829:10;:20;1843:6;1829:20;;1821:85;;;;;;;4070:2:283;1821:85:196;;;4052:21:283;4109:2;4089:18;;;4082:30;4148:34;4128:18;;;4121:62;4219:22;4199:18;;;4192:50;4259:19;;1821:85:196;;;;;;;;;2861:19:::1;2867:3;2872:7;2861:5;:19::i;:::-;2900:3;2895:18;;;2905:7;2895:18;;;;2090:25:283::0;;2078:2;2063:18;;1944:177;2895:18:196::1;;;;;;;;2666:254:::0;;:::o;942:328:202:-;982:13;1068:31;1085:13;1068:16;:31::i;:::-;1138;1155:13;1138:16;:31::i;:::-;1208;1225:13;1208:16;:31::i;:::-;1034:219;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1007:256;;942:328;:::o;2367:102:38:-;2423:13;2455:7;2448:14;;;;;:::i;3101:260:196:-;1829:10;:20;1843:6;1829:20;;1821:85;;;;;;;4070:2:283;1821:85:196;;;4052:21:283;4109:2;4089:18;;;4082:30;4148:34;4128:18;;;4121:62;4219:22;4199:18;;;4192:50;4259:19;;1821:85:196;3868:416:283;1821:85:196;3298:21:::1;3304:5;3311:7;3298:5;:21::i;:::-;3339:5;3334:20;;;3346:7;3334:20;;;;2090:25:283::0;;2078:2;2063:18;;1944:177;6594:427:38;719:10:53;6687:4:38;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6687:4;;719:10:53;6831:15:38;6811:16;:35;;6803:85;;;;;;;5456:2:283;6803:85:38;;;5438:21:283;5495:2;5475:18;;;5468:30;5534:34;5514:18;;;5507:62;5605:7;5585:18;;;5578:35;5630:19;;6803:85:38;5254:401:283;6803:85:38;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:53;3862:28:38;719:10:53;3879:2:38;3883:6;3862:9;:28::i;10110:370::-;10241:19;;;10233:68;;;;;;;5862:2:283;10233:68:38;;;5844:21:283;5901:2;5881:18;;;5874:30;5940:34;5920:18;;;5913:62;6011:6;5991:18;;;5984:34;6035:19;;10233:68:38;5660:400:283;10233:68:38;10319:21;;;10311:68;;;;;;;6267:2:283;10311:68:38;;;6249:21:283;6306:2;6286:18;;;6279:30;6345:34;6325:18;;;6318:62;6416:4;6396:18;;;6389:32;6438:19;;10311:68:38;6065:398:283;10311:68:38;10390:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;2090:25:283;;;10441:32:38;;2063:18:283;10441:32:38;;;;;;;;10110:370;;;:::o;10761:441::-;4091:18;;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;6670:2:283;11010:68:38;;;6652:21:283;6709:2;6689:18;;;6682:30;6748:31;6728:18;;;6721:59;6797:18;;11010:68:38;6468:353:283;11010:68:38;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;7601:18;;;7593:68;;;;;;;7028:2:283;7593:68:38;;;7010:21:283;7067:2;7047:18;;;7040:30;7106:34;7086:18;;;7079:62;7177:7;7157:18;;;7150:35;7202:19;;7593:68:38;6826:401:283;7593:68:38;7679:16;;;7671:64;;;;;;;7434:2:283;7671:64:38;;;7416:21:283;7473:2;7453:18;;;7446:30;7512:34;7492:18;;;7485:62;7583:5;7563:18;;;7556:33;7606:19;;7671:64:38;7232:399:283;7671:64:38;7817:15;;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;;;;7838:2:283;7842:72:38;;;7820:21:283;7877:2;7857:18;;;7850:30;7916:34;7896:18;;;7889:62;7987:8;7967:18;;;7960:36;8013:19;;7842:72:38;7636:402:283;7842:72:38;7948:15;;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;2090:25:283;;2078:2;2063:18;;1944:177;8045:26:38;;;;;;;;8082:37;9111:576;8402:389;8485:21;;;8477:65;;;;;;;8245:2:283;8477:65:38;;;8227:21:283;8284:2;8264:18;;;8257:30;8323:33;8303:18;;;8296:61;8374:18;;8477:65:38;8043:355:283;8477:65:38;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8645:18:38;;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:38;;2090:25:283;;;8688:37:38;;;;8705:1;;8688:37;;2078:2:283;2063:18;8688:37:38;;;;;;;8402:389;;:::o;392:703:55:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:55;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:55;;-1:-1:-1;837:2:55;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:55;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:55;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:55;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:55:o;9111:576:38:-;9194:21;;;9186:67;;;;;;;9744:2:283;9186:67:38;;;9726:21:283;9783:2;9763:18;;;9756:30;9822:34;9802:18;;;9795:62;9893:3;9873:18;;;9866:31;9914:19;;9186:67:38;9542:397:283;9186:67:38;9349:18;;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;;;;10146:2:283;9377:71:38;;;10128:21:283;10185:2;10165:18;;;10158:30;10224:34;10204:18;;;10197:62;10295:4;10275:18;;;10268:32;10317:19;;9377:71:38;9944:398:283;9377:71:38;9482:18;;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:38;;2090:25:283;;;9610:1:38;;9584:37;;;;;;2078:2:283;2063:18;9584:37:38;1944:177:283;14:332;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:283:o;774:258::-;846:1;856:113;870:6;867:1;864:13;856:113;;;946:11;;;940:18;927:11;;;920:39;892:2;885:10;856:113;;;987:6;984:1;981:13;978:48;;;-1:-1:-1;;1022:1:283;1004:16;;997:27;774:258::o;1037:442::-;1186:2;1175:9;1168:21;1149:4;1218:6;1212:13;1261:6;1256:2;1245:9;1241:18;1234:34;1277:66;1336:6;1331:2;1320:9;1316:18;1311:2;1303:6;1299:15;1277:66;:::i;:::-;1395:2;1383:15;1400:66;1379:88;1364:104;;;;1470:2;1360:113;;1037:442;-1:-1:-1;;1037:442:283:o;1484:196::-;1552:20;;1612:42;1601:54;;1591:65;;1581:93;;1670:1;1667;1660:12;1581:93;1484:196;;;:::o;1685:254::-;1753:6;1761;1814:2;1802:9;1793:7;1789:23;1785:32;1782:52;;;1830:1;1827;1820:12;1782:52;1853:29;1872:9;1853:29;:::i;:::-;1843:39;1929:2;1914:18;;;;1901:32;;-1:-1:-1;;;1685:254:283:o;2126:328::-;2203:6;2211;2219;2272:2;2260:9;2251:7;2247:23;2243:32;2240:52;;;2288:1;2285;2278:12;2240:52;2311:29;2330:9;2311:29;:::i;:::-;2301:39;;2359:38;2393:2;2382:9;2378:18;2359:38;:::i;:::-;2349:48;;2444:2;2433:9;2429:18;2416:32;2406:42;;2126:328;;;;;:::o;2648:186::-;2707:6;2760:2;2748:9;2739:7;2735:23;2731:32;2728:52;;;2776:1;2773;2766:12;2728:52;2799:29;2818:9;2799:29;:::i;2839:260::-;2907:6;2915;2968:2;2956:9;2947:7;2943:23;2939:32;2936:52;;;2984:1;2981;2974:12;2936:52;3007:29;3026:9;3007:29;:::i;:::-;2997:39;;3055:38;3089:2;3078:9;3074:18;3055:38;:::i;:::-;3045:48;;2839:260;;;;;:::o;3104:437::-;3183:1;3179:12;;;;3226;;;3247:61;;3301:4;3293:6;3289:17;3279:27;;3247:61;3354:2;3346:6;3343:14;3323:18;3320:38;3317:218;;3391:77;3388:1;3381:88;3492:4;3489:1;3482:15;3520:4;3517:1;3510:15;3317:218;;3104:437;;;:::o;3546:184::-;3598:77;3595:1;3588:88;3695:4;3692:1;3685:15;3719:4;3716:1;3709:15;3735:128;3775:3;3806:1;3802:6;3799:1;3796:13;3793:39;;;3812:18;;:::i;:::-;-1:-1:-1;3848:9:283;;3735:128::o;4289:960::-;4718:3;4756:6;4750:13;4772:53;4818:6;4813:3;4806:4;4798:6;4794:17;4772:53;:::i;:::-;4856:6;4851:3;4847:16;4834:29;;4882:3;4908:2;4901:5;4894:17;4942:6;4936:13;4958:65;5014:8;5010:1;5003:5;4999:13;4992:4;4984:6;4980:17;4958:65;:::i;:::-;5086:1;5042:20;;5078:10;;;5071:22;5118:13;;5140:62;5118:13;5189:1;5181:10;;5174:4;5162:17;;5140:62;:::i;:::-;5222:17;5241:1;5218:25;;4289:960;-1:-1:-1;;;;;4289:960:283:o;8403:195::-;8442:3;8473:66;8466:5;8463:77;8460:103;;8543:18;;:::i;:::-;-1:-1:-1;8590:1:283;8579:13;;8403:195::o;8603:184::-;8655:77;8652:1;8645:88;8752:4;8749:1;8742:15;8776:4;8773:1;8766:15;8792:120;8832:1;8858;8848:35;;8863:18;;:::i;:::-;-1:-1:-1;8897:9:283;;8792:120::o;8917:184::-;8969:77;8966:1;8959:88;9066:4;9063:1;9056:15;9090:4;9087:1;9080:15;9106:125;9146:4;9174:1;9171;9168:8;9165:34;;;9179:18;;:::i;:::-;-1:-1:-1;9216:9:283;;9106:125::o;9236:112::-;9268:1;9294;9284:35;;9299:18;;:::i;:::-;-1:-1:-1;9333:9:283;;9236:112::o;9353:184::-;9405:77;9402:1;9395:88;9502:4;9499:1;9492:15;9526:4;9523:1;9516:15",
    "linkReferences": {},
    "immutableReferences": {
      "75950": [
        {
          "start": 425,
          "length": 32
        },
        {
          "start": 829,
          "length": 32
        }
      ],
      "75953": [
        {
          "start": 791,
          "length": 32
        },
        {
          "start": 940,
          "length": 32
        },
        {
          "start": 1521,
          "length": 32
        },
        {
          "start": 1995,
          "length": 32
        }
      ],
      "75956": [
        {
          "start": 580,
          "length": 32
        }
      ],
      "77423": [
        {
          "start": 1800,
          "length": 32
        }
      ],
      "77426": [
        {
          "start": 1841,
          "length": 32
        }
      ],
      "77429": [
        {
          "start": 1882,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BRIDGE()": "ee9a31a2",
    "REMOTE_TOKEN()": "033964be",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bridge()": "e78cea92",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "l1Token()": "c01e1bd6",
    "l2Bridge()": "ae1f6aaf",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "remoteToken()": "d6c0b2c4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOTE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,uint256)\":{\"params\":{\"account\":\"Address of the account tokens are being burned from.\",\"amount\":\"Amount of tokens burned.\"}},\"Mint(address,uint256)\":{\"params\":{\"account\":\"Address of the account tokens are being minted for.\",\"amount\":\"Amount of tokens minted.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"bridge()\":{\"custom:legacy\":\"@notice Legacy getter for BRIDGE.\"},\"burn(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to burn.\",\"_from\":\"Address to burn tokens from.\"}},\"constructor\":{\"custom:semver\":\"1.2.0\",\"params\":{\"_bridge\":\"Address of the L2 standard bridge.\",\"_name\":\"ERC20 name.\",\"_remoteToken\":\"Address of the corresponding L1 token.\",\"_symbol\":\"ERC20 symbol.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"l1Token()\":{\"custom:legacy\":\"@notice Legacy getter for the remote token. Use REMOTE_TOKEN going forward.\"},\"l2Bridge()\":{\"custom:legacy\":\"@notice Legacy getter for the bridge. Use BRIDGE going forward.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to mint.\",\"_to\":\"Address to mint tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"remoteToken()\":{\"custom:legacy\":\"@notice Legacy getter for REMOTE_TOKEN.\"},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceId\":\"Interface ID to check.\"},\"returns\":{\"_0\":\"Whether or not the interface is supported by this contract.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"OptimismMintableERC20\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,uint256)\":{\"notice\":\"Emitted whenever tokens are burned from an account.\"},\"Mint(address,uint256)\":{\"notice\":\"Emitted whenever tokens are minted for an account.\"}},\"kind\":\"user\",\"methods\":{\"BRIDGE()\":{\"notice\":\"Address of the StandardBridge on this network.\"},\"REMOTE_TOKEN()\":{\"notice\":\"Address of the corresponding version of this token on the remote chain.\"},\"burn(address,uint256)\":{\"notice\":\"Allows the StandardBridge on this network to burn tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Allows the StandardBridge on this network to mint tokens.\"},\"supportsInterface(bytes4)\":{\"notice\":\"ERC165 interface check function.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed         to allow the StandardBridge contracts to mint and burn tokens. This makes it possible to         use an OptimismMintablERC20 as the L2 representation of an L1 token, or vice-versa.         Designed to be backwards compatible with the older StandardL2ERC20 token which was only         meant for use on L2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/OptimismMintableERC20.sol\":\"OptimismMintableERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174\",\"dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_bridge",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BRIDGE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REMOTE_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1Token",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Bridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "remoteToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "bridge()": {
            "custom:legacy": "@notice Legacy getter for BRIDGE."
          },
          "burn(address,uint256)": {
            "params": {
              "_amount": "Amount of tokens to burn.",
              "_from": "Address to burn tokens from."
            }
          },
          "constructor": {
            "custom:semver": "1.2.0",
            "params": {
              "_bridge": "Address of the L2 standard bridge.",
              "_name": "ERC20 name.",
              "_remoteToken": "Address of the corresponding L1 token.",
              "_symbol": "ERC20 symbol."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "l1Token()": {
            "custom:legacy": "@notice Legacy getter for the remote token. Use REMOTE_TOKEN going forward."
          },
          "l2Bridge()": {
            "custom:legacy": "@notice Legacy getter for the bridge. Use BRIDGE going forward."
          },
          "mint(address,uint256)": {
            "params": {
              "_amount": "Amount of tokens to mint.",
              "_to": "Address to mint tokens to."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "remoteToken()": {
            "custom:legacy": "@notice Legacy getter for REMOTE_TOKEN."
          },
          "supportsInterface(bytes4)": {
            "params": {
              "_interfaceId": "Interface ID to check."
            },
            "returns": {
              "_0": "Whether or not the interface is supported by this contract."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BRIDGE()": {
            "notice": "Address of the StandardBridge on this network."
          },
          "REMOTE_TOKEN()": {
            "notice": "Address of the corresponding version of this token on the remote chain."
          },
          "burn(address,uint256)": {
            "notice": "Allows the StandardBridge on this network to burn tokens."
          },
          "mint(address,uint256)": {
            "notice": "Allows the StandardBridge on this network to mint tokens."
          },
          "supportsInterface(bytes4)": {
            "notice": "ERC165 interface check function."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/universal/OptimismMintableERC20.sol": "OptimismMintableERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b",
        "urls": [
          "bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174",
          "dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32300,
        "contract": "src/universal/OptimismMintableERC20.sol:OptimismMintableERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 32306,
        "contract": "src/universal/OptimismMintableERC20.sol:OptimismMintableERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 32308,
        "contract": "src/universal/OptimismMintableERC20.sol:OptimismMintableERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 32310,
        "contract": "src/universal/OptimismMintableERC20.sol:OptimismMintableERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 32312,
        "contract": "src/universal/OptimismMintableERC20.sol:OptimismMintableERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "BRIDGE()": {
        "notice": "Address of the StandardBridge on this network."
      },
      "REMOTE_TOKEN()": {
        "notice": "Address of the corresponding version of this token on the remote chain."
      },
      "burn(address,uint256)": {
        "notice": "Allows the StandardBridge on this network to burn tokens."
      },
      "mint(address,uint256)": {
        "notice": "Allows the StandardBridge on this network to mint tokens."
      },
      "supportsInterface(bytes4)": {
        "notice": "ERC165 interface check function."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "events": {
      "Burn(address,uint256)": {
        "notice": "Emitted whenever tokens are burned from an account."
      },
      "Mint(address,uint256)": {
        "notice": "Emitted whenever tokens are minted for an account."
      }
    },
    "notice": "OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed         to allow the StandardBridge contracts to mint and burn tokens. This makes it possible to         use an OptimismMintablERC20 as the L2 representation of an L1 token, or vice-versa.         Designed to be backwards compatible with the older StandardL2ERC20 token which was only         meant for use on L2."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "bridge()": {},
      "burn(address,uint256)": {
        "params": {
          "_amount": "Amount of tokens to burn.",
          "_from": "Address to burn tokens from."
        }
      },
      "constructor": {
        "params": {
          "_bridge": "Address of the L2 standard bridge.",
          "_name": "ERC20 name.",
          "_remoteToken": "Address of the corresponding L1 token.",
          "_symbol": "ERC20 symbol."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "l1Token()": {},
      "l2Bridge()": {},
      "mint(address,uint256)": {
        "params": {
          "_amount": "Amount of tokens to mint.",
          "_to": "Address to mint tokens to."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "remoteToken()": {},
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceId": "Interface ID to check."
        },
        "returns": {
          "_0": "Whether or not the interface is supported by this contract."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "events": {
      "Burn(address,uint256)": {
        "params": {
          "account": "Address of the account tokens are being burned from.",
          "amount": "Amount of tokens burned."
        }
      },
      "Mint(address,uint256)": {
        "params": {
          "account": "Address of the account tokens are being minted for.",
          "amount": "Amount of tokens minted."
        }
      }
    },
    "title": "OptimismMintableERC20"
  },
  "ast": {
    "absolutePath": "src/universal/OptimismMintableERC20.sol",
    "id": 76157,
    "exportedSymbols": {
      "ERC20": [
        32870
      ],
      "IERC165": [
        37012
      ],
      "ILegacyMintableERC20": [
        75843
      ],
      "IOptimismMintableERC20": [
        75820
      ],
      "OptimismMintableERC20": [
        76156
      ],
      "Semver": [
        77481
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5239:196",
    "nodes": [
      {
        "id": 75929,
        "nodeType": "PragmaDirective",
        "src": "32:23:196",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 75931,
        "nodeType": "ImportDirective",
        "src": "57:70:196",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76157,
        "sourceUnit": 32871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75930,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32870,
              "src": "66:5:196",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75933,
        "nodeType": "ImportDirective",
        "src": "128:82:196",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76157,
        "sourceUnit": 37013,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75932,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37012,
              "src": "137:7:196",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75936,
        "nodeType": "ImportDirective",
        "src": "211:92:196",
        "nodes": [],
        "absolutePath": "src/universal/IOptimismMintableERC20.sol",
        "file": "./IOptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76157,
        "sourceUnit": 75844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75934,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75843,
              "src": "220:20:196",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 75935,
              "name": "IOptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75820,
              "src": "242:22:196",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75938,
        "nodeType": "ImportDirective",
        "src": "304:49:196",
        "nodes": [],
        "absolutePath": "src/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76157,
        "sourceUnit": 77482,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75937,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77481,
              "src": "313:6:196",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76156,
        "nodeType": "ContractDefinition",
        "src": "818:4452:196",
        "nodes": [
          {
            "id": 75950,
            "nodeType": "VariableDeclaration",
            "src": "1006:37:196",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 75948,
              "nodeType": "StructuredDocumentation",
              "src": "918:83:196",
              "text": "@notice Address of the corresponding version of this token on the remote chain."
            },
            "functionSelector": "033964be",
            "mutability": "immutable",
            "name": "REMOTE_TOKEN",
            "nameLocation": "1031:12:196",
            "scope": 76156,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 75949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1006:7:196",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75953,
            "nodeType": "VariableDeclaration",
            "src": "1113:31:196",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 75951,
              "nodeType": "StructuredDocumentation",
              "src": "1050:58:196",
              "text": "@notice Address of the StandardBridge on this network."
            },
            "functionSelector": "ee9a31a2",
            "mutability": "immutable",
            "name": "BRIDGE",
            "nameLocation": "1138:6:196",
            "scope": 76156,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 75952,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1113:7:196",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75956,
            "nodeType": "VariableDeclaration",
            "src": "1189:32:196",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 75954,
              "nodeType": "StructuredDocumentation",
              "src": "1151:33:196",
              "text": "@notice Decimals of the token"
            },
            "mutability": "immutable",
            "name": "DECIMALS",
            "nameLocation": "1213:8:196",
            "scope": 76156,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 75955,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1189:5:196",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 75963,
            "nodeType": "EventDefinition",
            "src": "1418:52:196",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 75957,
              "nodeType": "StructuredDocumentation",
              "src": "1228:185:196",
              "text": "@notice Emitted whenever tokens are minted for an account.\n @param account Address of the account tokens are being minted for.\n @param amount  Amount of tokens minted."
            },
            "eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
            "name": "Mint",
            "nameLocation": "1424:4:196",
            "parameters": {
              "id": 75962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75959,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1445:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 75963,
                  "src": "1429:23:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75961,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1462:6:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 75963,
                  "src": "1454:14:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:7:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1428:41:196"
            }
          },
          {
            "id": 75970,
            "nodeType": "EventDefinition",
            "src": "1668:52:196",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 75964,
              "nodeType": "StructuredDocumentation",
              "src": "1476:187:196",
              "text": "@notice Emitted whenever tokens are burned from an account.\n @param account Address of the account tokens are being burned from.\n @param amount  Amount of tokens burned."
            },
            "eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
            "name": "Burn",
            "nameLocation": "1674:4:196",
            "parameters": {
              "id": 75969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75966,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1695:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 75970,
                  "src": "1679:23:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1712:6:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 75970,
                  "src": "1704:14:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1678:41:196"
            }
          },
          {
            "id": 75983,
            "nodeType": "ModifierDefinition",
            "src": "1789:135:196",
            "nodes": [],
            "body": {
              "id": 75982,
              "nodeType": "Block",
              "src": "1811:113:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 75974,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1829:3:196",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1829:10:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 75976,
                          "name": "BRIDGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75953,
                          "src": "1843:6:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1829:20:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d4d696e7461626c6545524332303a206f6e6c79206272696467652063616e206d696e7420616e64206275726e",
                        "id": 75978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1851:54:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_684e9b7e2c7fdcb543a3efbe7d9ca90113ea3f2c0463752c3d3de870c67a963a",
                          "typeString": "literal_string \"OptimismMintableERC20: only bridge can mint and burn\""
                        },
                        "value": "OptimismMintableERC20: only bridge can mint and burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_684e9b7e2c7fdcb543a3efbe7d9ca90113ea3f2c0463752c3d3de870c67a963a",
                          "typeString": "literal_string \"OptimismMintableERC20: only bridge can mint and burn\""
                        }
                      ],
                      "id": 75973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1821:7:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:85:196",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75980,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:85:196"
                },
                {
                  "id": 75981,
                  "nodeType": "PlaceholderStatement",
                  "src": "1916:1:196"
                }
              ]
            },
            "documentation": {
              "id": 75971,
              "nodeType": "StructuredDocumentation",
              "src": "1726:58:196",
              "text": "@notice A modifier that only allows the bridge to call"
            },
            "name": "onlyBridge",
            "nameLocation": "1798:10:196",
            "parameters": {
              "id": 75972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:2:196"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 76019,
            "nodeType": "FunctionDefinition",
            "src": "2171:316:196",
            "nodes": [],
            "body": {
              "id": 76018,
              "nodeType": "Block",
              "src": "2387:100:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76006,
                      "name": "REMOTE_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75950,
                      "src": "2397:12:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76007,
                      "name": "_remoteToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75988,
                      "src": "2412:12:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2397:27:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76009,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:27:196"
                },
                {
                  "expression": {
                    "id": 76012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76010,
                      "name": "BRIDGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75953,
                      "src": "2434:6:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76011,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75986,
                      "src": "2443:7:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2434:16:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76013,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:16:196"
                },
                {
                  "expression": {
                    "id": 76016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76014,
                      "name": "DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75956,
                      "src": "2460:8:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76015,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75994,
                      "src": "2471:9:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2460:20:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 76017,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:20:196"
                }
              ]
            },
            "documentation": {
              "id": 75984,
              "nodeType": "StructuredDocumentation",
              "src": "1930:236:196",
              "text": "@custom:semver 1.2.0\n @param _bridge      Address of the L2 standard bridge.\n @param _remoteToken Address of the corresponding L1 token.\n @param _name        ERC20 name.\n @param _symbol      ERC20 symbol."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75997,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75990,
                    "src": "2343:5:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 75998,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75992,
                    "src": "2350:7:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 75999,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 75996,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32870,
                  "src": "2337:5:196"
                },
                "nodeType": "ModifierInvocation",
                "src": "2337:21:196"
              },
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 76001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2374:1:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "32",
                    "id": 76002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2377:1:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  {
                    "hexValue": "30",
                    "id": 76003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2380:1:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 76004,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 76000,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77481,
                  "src": "2367:6:196"
                },
                "nodeType": "ModifierInvocation",
                "src": "2367:15:196"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75986,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nameLocation": "2200:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76019,
                  "src": "2192:15:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75988,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "2225:12:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76019,
                  "src": "2217:20:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75990,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2261:5:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76019,
                  "src": "2247:19:196",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75989,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:6:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75992,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2290:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76019,
                  "src": "2276:21:196",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75991,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:6:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75994,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "2313:9:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76019,
                  "src": "2307:15:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 75993,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:5:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2182:146:196"
            },
            "returnParameters": {
              "id": 76005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:196"
            },
            "scope": 76156,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76043,
            "nodeType": "FunctionDefinition",
            "src": "2666:254:196",
            "nodes": [],
            "body": {
              "id": 76042,
              "nodeType": "Block",
              "src": "2851:69:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76033,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76022,
                        "src": "2867:3:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76034,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76024,
                        "src": "2872:7:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76032,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32687,
                      "src": "2861:5:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:19:196",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76036,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:19:196"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76038,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76022,
                        "src": "2900:3:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76039,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76024,
                        "src": "2905:7:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76037,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75963,
                      "src": "2895:4:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:18:196",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76041,
                  "nodeType": "EmitStatement",
                  "src": "2890:23:196"
                }
              ]
            },
            "baseFunctions": [
              75812,
              75835
            ],
            "documentation": {
              "id": 76020,
              "nodeType": "StructuredDocumentation",
              "src": "2493:168:196",
              "text": "@notice Allows the StandardBridge on this network to mint tokens.\n @param _to     Address to mint tokens to.\n @param _amount Amount of tokens to mint."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76030,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76029,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75983,
                  "src": "2836:10:196"
                },
                "nodeType": "ModifierInvocation",
                "src": "2836:10:196"
              }
            ],
            "name": "mint",
            "nameLocation": "2675:4:196",
            "overrides": {
              "id": 76028,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 76026,
                  "name": "IOptimismMintableERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75820,
                  "src": "2782:22:196"
                },
                {
                  "id": 76027,
                  "name": "ILegacyMintableERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75843,
                  "src": "2806:20:196"
                }
              ],
              "src": "2773:54:196"
            },
            "parameters": {
              "id": 76025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76022,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2697:3:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76043,
                  "src": "2689:11:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76024,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2718:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76043,
                  "src": "2710:15:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2679:52:196"
            },
            "returnParameters": {
              "id": 76031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:0:196"
            },
            "scope": 76156,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 76067,
            "nodeType": "FunctionDefinition",
            "src": "3101:260:196",
            "nodes": [],
            "body": {
              "id": 76066,
              "nodeType": "Block",
              "src": "3288:73:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76057,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76046,
                        "src": "3304:5:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76058,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76048,
                        "src": "3311:7:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76056,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32759,
                      "src": "3298:5:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3298:21:196",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76060,
                  "nodeType": "ExpressionStatement",
                  "src": "3298:21:196"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76062,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76046,
                        "src": "3339:5:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76063,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76048,
                        "src": "3346:7:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76061,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75970,
                      "src": "3334:4:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 76064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:20:196",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76065,
                  "nodeType": "EmitStatement",
                  "src": "3329:25:196"
                }
              ]
            },
            "baseFunctions": [
              75819,
              75842
            ],
            "documentation": {
              "id": 76044,
              "nodeType": "StructuredDocumentation",
              "src": "2926:170:196",
              "text": "@notice Allows the StandardBridge on this network to burn tokens.\n @param _from   Address to burn tokens from.\n @param _amount Amount of tokens to burn."
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76054,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76053,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75983,
                  "src": "3273:10:196"
                },
                "nodeType": "ModifierInvocation",
                "src": "3273:10:196"
              }
            ],
            "name": "burn",
            "nameLocation": "3110:4:196",
            "overrides": {
              "id": 76052,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 76050,
                  "name": "IOptimismMintableERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75820,
                  "src": "3219:22:196"
                },
                {
                  "id": 76051,
                  "name": "ILegacyMintableERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75843,
                  "src": "3243:20:196"
                }
              ],
              "src": "3210:54:196"
            },
            "parameters": {
              "id": 76049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76046,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3132:5:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76067,
                  "src": "3124:13:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76048,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3155:7:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76067,
                  "src": "3147:15:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3114:54:196"
            },
            "returnParameters": {
              "id": 76055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3288:0:196"
            },
            "scope": 76156,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 76109,
            "nodeType": "FunctionDefinition",
            "src": "3543:519:196",
            "nodes": [],
            "body": {
              "id": 76108,
              "nodeType": "Block",
              "src": "3628:434:196",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76076,
                      "mutability": "mutable",
                      "name": "iface1",
                      "nameLocation": "3645:6:196",
                      "nodeType": "VariableDeclaration",
                      "scope": 76108,
                      "src": "3638:13:196",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 76075,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3638:6:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76081,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 76078,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37012,
                          "src": "3659:7:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$37012_$",
                            "typeString": "type(contract IERC165)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$37012_$",
                            "typeString": "type(contract IERC165)"
                          }
                        ],
                        "id": 76077,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "3654:4:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3654:13:196",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$37012",
                        "typeString": "type(contract IERC165)"
                      }
                    },
                    "id": 76080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "3654:25:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3638:41:196"
                },
                {
                  "assignments": [
                    76083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76083,
                      "mutability": "mutable",
                      "name": "iface2",
                      "nameLocation": "3762:6:196",
                      "nodeType": "VariableDeclaration",
                      "scope": 76108,
                      "src": "3755:13:196",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 76082,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3755:6:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76088,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 76085,
                          "name": "ILegacyMintableERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75843,
                          "src": "3776:20:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                            "typeString": "type(contract ILegacyMintableERC20)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                            "typeString": "type(contract ILegacyMintableERC20)"
                          }
                        ],
                        "id": 76084,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "3771:4:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3771:26:196",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$75843",
                        "typeString": "type(contract ILegacyMintableERC20)"
                      }
                    },
                    "id": 76087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "3771:38:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3755:54:196"
                },
                {
                  "assignments": [
                    76090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76090,
                      "mutability": "mutable",
                      "name": "iface3",
                      "nameLocation": "3915:6:196",
                      "nodeType": "VariableDeclaration",
                      "scope": 76108,
                      "src": "3908:13:196",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 76089,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3908:6:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76095,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 76092,
                          "name": "IOptimismMintableERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75820,
                          "src": "3929:22:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$75820_$",
                            "typeString": "type(contract IOptimismMintableERC20)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$75820_$",
                            "typeString": "type(contract IOptimismMintableERC20)"
                          }
                        ],
                        "id": 76091,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "3924:4:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3924:28:196",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IOptimismMintableERC20_$75820",
                        "typeString": "type(contract IOptimismMintableERC20)"
                      }
                    },
                    "id": 76094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "3924:40:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3908:56:196"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 76102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 76098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76096,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76070,
                          "src": "3981:12:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 76097,
                          "name": "iface1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76076,
                          "src": "3997:6:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3981:22:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 76101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76099,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76070,
                          "src": "4007:12:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 76100,
                          "name": "iface2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76083,
                          "src": "4023:6:196",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4007:22:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3981:48:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 76105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76103,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76070,
                        "src": "4033:12:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 76104,
                        "name": "iface3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76090,
                        "src": "4049:6:196",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4033:22:196",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3981:74:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 76074,
                  "id": 76107,
                  "nodeType": "Return",
                  "src": "3974:81:196"
                }
              ]
            },
            "baseFunctions": [
              37011
            ],
            "documentation": {
              "id": 76068,
              "nodeType": "StructuredDocumentation",
              "src": "3367:171:196",
              "text": "@notice ERC165 interface check function.\n @param _interfaceId Interface ID to check.\n @return Whether or not the interface is supported by this contract."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3552:17:196",
            "parameters": {
              "id": 76071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76070,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "3577:12:196",
                  "nodeType": "VariableDeclaration",
                  "scope": 76109,
                  "src": "3570:19:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 76069,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:6:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3569:21:196"
            },
            "returnParameters": {
              "id": 76074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76109,
                  "src": "3622:4:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:4:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3621:6:196"
            },
            "scope": 76156,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 76118,
            "nodeType": "FunctionDefinition",
            "src": "4175:85:196",
            "nodes": [],
            "body": {
              "id": 76117,
              "nodeType": "Block",
              "src": "4224:36:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76115,
                    "name": "REMOTE_TOKEN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75950,
                    "src": "4241:12:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 76114,
                  "id": 76116,
                  "nodeType": "Return",
                  "src": "4234:19:196"
                }
              ]
            },
            "baseFunctions": [
              75828
            ],
            "documentation": {
              "id": 76110,
              "nodeType": "StructuredDocumentation",
              "src": "4068:102:196",
              "text": "@custom:legacy\n @notice Legacy getter for the remote token. Use REMOTE_TOKEN going forward."
            },
            "functionSelector": "c01e1bd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l1Token",
            "nameLocation": "4184:7:196",
            "parameters": {
              "id": 76111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4191:2:196"
            },
            "returnParameters": {
              "id": 76114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76118,
                  "src": "4215:7:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4214:9:196"
            },
            "scope": 76156,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76127,
            "nodeType": "FunctionDefinition",
            "src": "4361:80:196",
            "nodes": [],
            "body": {
              "id": 76126,
              "nodeType": "Block",
              "src": "4411:30:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76124,
                    "name": "BRIDGE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75953,
                    "src": "4428:6:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 76123,
                  "id": 76125,
                  "nodeType": "Return",
                  "src": "4421:13:196"
                }
              ]
            },
            "documentation": {
              "id": 76119,
              "nodeType": "StructuredDocumentation",
              "src": "4266:90:196",
              "text": "@custom:legacy\n @notice Legacy getter for the bridge. Use BRIDGE going forward."
            },
            "functionSelector": "ae1f6aaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l2Bridge",
            "nameLocation": "4370:8:196",
            "parameters": {
              "id": 76120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4378:2:196"
            },
            "returnParameters": {
              "id": 76123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76127,
                  "src": "4402:7:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:9:196"
            },
            "scope": 76156,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76136,
            "nodeType": "FunctionDefinition",
            "src": "4518:89:196",
            "nodes": [],
            "body": {
              "id": 76135,
              "nodeType": "Block",
              "src": "4571:36:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76133,
                    "name": "REMOTE_TOKEN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75950,
                    "src": "4588:12:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 76132,
                  "id": 76134,
                  "nodeType": "Return",
                  "src": "4581:19:196"
                }
              ]
            },
            "baseFunctions": [
              75800
            ],
            "documentation": {
              "id": 76128,
              "nodeType": "StructuredDocumentation",
              "src": "4447:66:196",
              "text": "@custom:legacy\n @notice Legacy getter for REMOTE_TOKEN."
            },
            "functionSelector": "d6c0b2c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remoteToken",
            "nameLocation": "4527:11:196",
            "parameters": {
              "id": 76129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4538:2:196"
            },
            "returnParameters": {
              "id": 76132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76136,
                  "src": "4562:7:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4562:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4561:9:196"
            },
            "scope": 76156,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76145,
            "nodeType": "FunctionDefinition",
            "src": "4678:78:196",
            "nodes": [],
            "body": {
              "id": 76144,
              "nodeType": "Block",
              "src": "4726:30:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76142,
                    "name": "BRIDGE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75953,
                    "src": "4743:6:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 76141,
                  "id": 76143,
                  "nodeType": "Return",
                  "src": "4736:13:196"
                }
              ]
            },
            "baseFunctions": [
              75805
            ],
            "documentation": {
              "id": 76137,
              "nodeType": "StructuredDocumentation",
              "src": "4613:60:196",
              "text": "@custom:legacy\n @notice Legacy getter for BRIDGE."
            },
            "functionSelector": "e78cea92",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridge",
            "nameLocation": "4687:6:196",
            "parameters": {
              "id": 76138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4693:2:196"
            },
            "returnParameters": {
              "id": 76141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76145,
                  "src": "4717:7:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4717:7:196",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4716:9:196"
            },
            "scope": 76156,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76155,
            "nodeType": "FunctionDefinition",
            "src": "5179:89:196",
            "nodes": [],
            "body": {
              "id": 76154,
              "nodeType": "Block",
              "src": "5236:32:196",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76152,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75956,
                    "src": "5253:8:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 76151,
                  "id": 76153,
                  "nodeType": "Return",
                  "src": "5246:15:196"
                }
              ]
            },
            "baseFunctions": [
              32359
            ],
            "documentation": {
              "id": 76146,
              "nodeType": "StructuredDocumentation",
              "src": "4762:412:196",
              "text": "@dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "5188:8:196",
            "overrides": {
              "id": 76148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5211:8:196"
            },
            "parameters": {
              "id": 76147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5196:2:196"
            },
            "returnParameters": {
              "id": 76151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76155,
                  "src": "5229:5:196",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 76149,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5229:5:196",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5228:7:196"
            },
            "scope": 76156,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75940,
              "name": "IOptimismMintableERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75820,
              "src": "852:22:196"
            },
            "id": 75941,
            "nodeType": "InheritanceSpecifier",
            "src": "852:22:196"
          },
          {
            "baseName": {
              "id": 75942,
              "name": "ILegacyMintableERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75843,
              "src": "876:20:196"
            },
            "id": 75943,
            "nodeType": "InheritanceSpecifier",
            "src": "876:20:196"
          },
          {
            "baseName": {
              "id": 75944,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32870,
              "src": "898:5:196"
            },
            "id": 75945,
            "nodeType": "InheritanceSpecifier",
            "src": "898:5:196"
          },
          {
            "baseName": {
              "id": 75946,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77481,
              "src": "905:6:196"
            },
            "id": 75947,
            "nodeType": "InheritanceSpecifier",
            "src": "905:6:196"
          }
        ],
        "canonicalName": "OptimismMintableERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 75939,
          "nodeType": "StructuredDocumentation",
          "src": "355:463:196",
          "text": "@title OptimismMintableERC20\n @notice OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed\n         to allow the StandardBridge contracts to mint and burn tokens. This makes it possible to\n         use an OptimismMintablERC20 as the L2 representation of an L1 token, or vice-versa.\n         Designed to be backwards compatible with the older StandardL2ERC20 token which was only\n         meant for use on L2."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          76156,
          77481,
          32870,
          33654,
          32948,
          35857,
          75843,
          75820,
          37012
        ],
        "name": "OptimismMintableERC20",
        "nameLocation": "827:21:196",
        "scope": 76157,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 196
}