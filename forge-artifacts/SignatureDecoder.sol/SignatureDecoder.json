{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures encoded as bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":\"SignatureDecoder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/safe-contracts/contracts/common/SignatureDecoder.sol": "SignatureDecoder"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "Richard Meissner - @rmeissner",
    "title": "SignatureDecoder - Decodes signatures encoded as bytes"
  },
  "ast": {
    "absolutePath": "lib/safe-contracts/contracts/common/SignatureDecoder.sol",
    "id": 41650,
    "exportedSymbols": {
      "SignatureDecoder": [
        41649
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1652:75",
    "nodes": [
      {
        "id": 41631,
        "nodeType": "PragmaDirective",
        "src": "42:31:75",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 41649,
        "nodeType": "ContractDefinition",
        "src": "189:1504:75",
        "nodes": [
          {
            "id": 41648,
            "nodeType": "FunctionDefinition",
            "src": "947:744:75",
            "nodes": [],
            "body": {
              "id": 41647,
              "nodeType": "Block",
              "src": "1063:628:75",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1138:547:75",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1152:34:75",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1176:4:75",
                              "type": "",
                              "value": "0x41"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1182:3:75"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1172:3:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1172:14:75"
                        },
                        "variables": [
                          {
                            "name": "signaturePos",
                            "nodeType": "YulTypedName",
                            "src": "1156:12:75",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1199:52:75",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1214:10:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1230:12:75"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1244:4:75",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:23:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1210:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1210:40:75"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1204:5:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:47:75"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1199:1:75"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1264:52:75",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:10:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1295:12:75"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1309:4:75",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1291:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1291:23:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1275:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1275:40:75"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1269:5:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1269:47:75"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1264:1:75"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1612:63:75",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signatures",
                                      "nodeType": "YulIdentifier",
                                      "src": "1631:10:75"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "signaturePos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1647:12:75"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1661:4:75",
                                          "type": "",
                                          "value": "0x41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1643:23:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1627:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1627:40:75"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1621:5:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1621:47:75"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1670:4:75",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1617:3:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1617:58:75"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1612:1:75"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 41637,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1182:3:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41642,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1199:1:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41644,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1264:1:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41635,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:10:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41635,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1279:10:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41635,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1631:10:75",
                      "valueSize": 1
                    },
                    {
                      "declaration": 41640,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1612:1:75",
                      "valueSize": 1
                    }
                  ],
                  "id": 41646,
                  "nodeType": "InlineAssembly",
                  "src": "1129:556:75"
                }
              ]
            },
            "documentation": {
              "id": 41633,
              "nodeType": "StructuredDocumentation",
              "src": "230:712:75",
              "text": " @notice Splits signature bytes into `uint8 v, bytes32 r, bytes32 s`.\n @dev Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n      The signature format is a compact form of {bytes32 r}{bytes32 s}{uint8 v}\n      Compact means uint8 is not padded to 32 bytes.\n @param pos Which signature to read.\n            A prior bounds check of this parameter should be performed, to avoid out of bounds access.\n @param signatures Concatenated {r, s, v} signatures.\n @return v Recovery ID or Safe signature type.\n @return r Output value r of the signature.\n @return s Output value s of the signature."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signatureSplit",
            "nameLocation": "956:14:75",
            "parameters": {
              "id": 41638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41635,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "984:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 41648,
                  "src": "971:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41634,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41637,
                  "mutability": "mutable",
                  "name": "pos",
                  "nameLocation": "1004:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 41648,
                  "src": "996:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:38:75"
            },
            "returnParameters": {
              "id": 41645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41640,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1038:1:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 41648,
                  "src": "1032:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 41639,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41642,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1049:1:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 41648,
                  "src": "1041:9:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41641,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41644,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1060:1:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 41648,
                  "src": "1052:9:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41643,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:31:75"
            },
            "scope": 41649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "SignatureDecoder",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41632,
          "nodeType": "StructuredDocumentation",
          "src": "75:113:75",
          "text": " @title SignatureDecoder - Decodes signatures encoded as bytes\n @author Richard Meissner - @rmeissner"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41649
        ],
        "name": "SignatureDecoder",
        "nameLocation": "207:16:75",
        "scope": 41650,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 75
}