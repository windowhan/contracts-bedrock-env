{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "messenger()": "3cb747bf",
    "otherBridge()": "c89701a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:upgradeable\":\"@title StandardBridge\",\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}}},\"kind\":\"dev\",\"methods\":{\"MESSENGER()\":{\"custom:legacy\":\"@return Messenger contract on this domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"constructor\":{\"params\":{\"_otherBridge\":\"Address of the other StandardBridge contract.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}}},\"stateVariables\":{\"OTHER_BRIDGE\":{\"custom:legacy\":\"@custom:network-specific\"},\"messenger\":{\"custom:network-specific\":\"\"},\"spacer_0_2_20\":{\"custom:legacy\":\"@custom:spacer messenger\"},\"spacer_1_0_20\":{\"custom:legacy\":\"@custom:spacer l2TokenBridge\"}},\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Getter for messenger contract.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"messenger()\":{\"notice\":\"Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead.\"},\"otherBridge()\":{\"notice\":\"Getter for the remote domain bridge contract.\"}},\"notice\":\"StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/StandardBridge.sol\":\"StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359\",\"dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x4302ae78bcafde2737d4048bbf8fdb3dd4cd7254c015b91dfa14fdaafd412f4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78d3d1823ad4e1fba15921a0a361b452c85d111e2d53cbbed11a8632782ea8f3\",\"dweb:/ipfs/QmVc2rTRpn7g7WAUxDShSuy6dY5zmtbJ7hHC6sT9PcD3Gj\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174\",\"dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0xd40e4671833946d92723217c4f3d6259f8cc705a5ed25e5529754046d575a411\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04336535438c2763da63ddb04a853ccefb4874c6087bd701988c46d4f0c044f2\",\"dweb:/ipfs/QmZr2AMxSwGc4srRvduswe75vmaWe9qq5x7E3EoQknnDtr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "otherBridge",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MESSENGER()": {
            "custom:legacy": "@return Messenger contract on this domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "constructor": {
            "params": {
              "_otherBridge": "Address of the other StandardBridge contract."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Getter for messenger contract."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "messenger()": {
            "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
          },
          "otherBridge()": {
            "notice": "Getter for the remote domain bridge contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/universal/StandardBridge.sol": "StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19",
        "urls": [
          "bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359",
          "dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x4302ae78bcafde2737d4048bbf8fdb3dd4cd7254c015b91dfa14fdaafd412f4a",
        "urls": [
          "bzz-raw://78d3d1823ad4e1fba15921a0a361b452c85d111e2d53cbbed11a8632782ea8f3",
          "dweb:/ipfs/QmVc2rTRpn7g7WAUxDShSuy6dY5zmtbJ7hHC6sT9PcD3Gj"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x39af021e492020fbeb5401371010d4a2fb69debe9596dbbead7bcd7fae248b0b",
        "urls": [
          "bzz-raw://dbeea52e586d2d7de55491a660ca76f75167ba6b43b65d29564864ee9c34a174",
          "dweb:/ipfs/QmS23vFqQxyUXhGuV1nSowZZS93CUkSnsb41uuyRtSeAED"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0xd40e4671833946d92723217c4f3d6259f8cc705a5ed25e5529754046d575a411",
        "urls": [
          "bzz-raw://04336535438c2763da63ddb04a853ccefb4874c6087bd701988c46d4f0c044f2",
          "dweb:/ipfs/QmZr2AMxSwGc4srRvduswe75vmaWe9qq5x7E3EoQknnDtr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32100,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 32103,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 77520,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_0_2_20",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 77523,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 77530,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 77534,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "messenger",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(CrossDomainMessenger)75405"
      },
      {
        "astId": 77539,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(CrossDomainMessenger)75405": {
        "encoding": "inplace",
        "label": "contract CrossDomainMessenger",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Getter for messenger contract."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "messenger()": {
        "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
      },
      "otherBridge()": {
        "notice": "Getter for the remote domain bridge contract."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "MESSENGER()": {},
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "constructor": {
        "params": {
          "_otherBridge": "Address of the other StandardBridge contract."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/universal/StandardBridge.sol",
    "id": 78228,
    "exportedSymbols": {
      "Address": [
        35835
      ],
      "CrossDomainMessenger": [
        75405
      ],
      "ERC165Checker": [
        37000
      ],
      "IERC20": [
        32948
      ],
      "ILegacyMintableERC20": [
        75843
      ],
      "IOptimismMintableERC20": [
        75820
      ],
      "Initializable": [
        32244
      ],
      "OptimismMintableERC20": [
        76156
      ],
      "SafeCall": [
        70816
      ],
      "SafeERC20": [
        34143
      ],
      "StandardBridge": [
        78227
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:21976:203",
    "nodes": [
      {
        "id": 77483,
        "nodeType": "PragmaDirective",
        "src": "32:23:203",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 77485,
        "nodeType": "ImportDirective",
        "src": "57:72:203",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 32949,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77484,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32948,
              "src": "66:6:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77487,
        "nodeType": "ImportDirective",
        "src": "130:94:203",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 37001,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77486,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37000,
              "src": "139:13:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77489,
        "nodeType": "ImportDirective",
        "src": "225:68:203",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 35836,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77488,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35835,
              "src": "234:7:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77491,
        "nodeType": "ImportDirective",
        "src": "294:84:203",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 34144,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77490,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34143,
              "src": "303:9:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77493,
        "nodeType": "ImportDirective",
        "src": "379:53:203",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "../libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 70817,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77492,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70816,
              "src": "388:8:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77496,
        "nodeType": "ImportDirective",
        "src": "433:92:203",
        "nodes": [],
        "absolutePath": "src/universal/IOptimismMintableERC20.sol",
        "file": "./IOptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 75844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77494,
              "name": "IOptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75820,
              "src": "442:22:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 77495,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75843,
              "src": "466:20:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77498,
        "nodeType": "ImportDirective",
        "src": "526:66:203",
        "nodes": [],
        "absolutePath": "src/universal/CrossDomainMessenger.sol",
        "file": "./CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 75406,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77497,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75405,
              "src": "535:20:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77500,
        "nodeType": "ImportDirective",
        "src": "593:68:203",
        "nodes": [],
        "absolutePath": "src/universal/OptimismMintableERC20.sol",
        "file": "./OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 76157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77499,
              "name": "OptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76156,
              "src": "602:21:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77502,
        "nodeType": "ImportDirective",
        "src": "662:86:203",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78228,
        "sourceUnit": 32245,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77501,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32244,
              "src": "671:13:203",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78227,
        "nodeType": "ContractDefinition",
        "src": "1074:20933:203",
        "nodes": [
          {
            "id": 77509,
            "nodeType": "UsingForDirective",
            "src": "1130:27:203",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 77506,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34143,
              "src": "1136:9:203"
            },
            "typeName": {
              "id": 77508,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 77507,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32948,
                "src": "1150:6:203"
              },
              "referencedDeclaration": 32948,
              "src": "1150:6:203",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$32948",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 77513,
            "nodeType": "VariableDeclaration",
            "src": "1253:60:203",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 77510,
              "nodeType": "StructuredDocumentation",
              "src": "1163:85:203",
              "text": "@notice The L2 gas limit set when eth is depoisited using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "1278:25:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 77511,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1253:6:203",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3230305f303030",
              "id": 77512,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1306:7:203",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200_000"
            },
            "visibility": "internal"
          },
          {
            "id": 77517,
            "nodeType": "VariableDeclaration",
            "src": "1552:44:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77514,
              "nodeType": "StructuredDocumentation",
              "src": "1320:227:203",
              "text": "@notice Corresponding bridge on the other domain. This public getter is deprecated\n         and will be removed in the future. Please use `otherBridge` instead.\n @custom:legacy\n @custom:network-specific"
            },
            "functionSelector": "7f46ddb2",
            "mutability": "immutable",
            "name": "OTHER_BRIDGE",
            "nameLocation": "1584:12:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StandardBridge_$78227",
              "typeString": "contract StandardBridge"
            },
            "typeName": {
              "id": 77516,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 77515,
                "name": "StandardBridge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 78227,
                "src": "1552:14:203"
              },
              "referencedDeclaration": 78227,
              "src": "1552:14:203",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardBridge_$78227",
                "typeString": "contract StandardBridge"
              }
            },
            "visibility": "public"
          },
          {
            "id": 77520,
            "nodeType": "VariableDeclaration",
            "src": "1711:29:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77518,
              "nodeType": "StructuredDocumentation",
              "src": "1603:103:203",
              "text": "@custom:legacy\n @custom:spacer messenger\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_0_2_20",
            "nameLocation": "1727:13:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 77519,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1711:7:203",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 77523,
            "nodeType": "VariableDeclaration",
            "src": "1859:29:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77521,
              "nodeType": "StructuredDocumentation",
              "src": "1747:107:203",
              "text": "@custom:legacy\n @custom:spacer l2TokenBridge\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_1_0_20",
            "nameLocation": "1875:13:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 77522,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1859:7:203",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 77530,
            "nodeType": "VariableDeclaration",
            "src": "1985:63:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77524,
              "nodeType": "StructuredDocumentation",
              "src": "1895:85:203",
              "text": "@notice Mapping that stores deposits for a given pair of local and remote tokens."
            },
            "functionSelector": "8f601f66",
            "mutability": "mutable",
            "name": "deposits",
            "nameLocation": "2040:8:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 77529,
              "keyType": {
                "id": 77525,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1993:7:203",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1985:47:203",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 77528,
                "keyType": {
                  "id": 77526,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2012:7:203",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2004:27:203",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 77527,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2023:7:203",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 77534,
            "nodeType": "VariableDeclaration",
            "src": "2255:37:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77531,
              "nodeType": "StructuredDocumentation",
              "src": "2055:195:203",
              "text": "@notice Messenger contract on this domain. This public getter is deprecated\n         and will be removed in the future. Please use `messenger` instead.\n @custom:network-specific"
            },
            "functionSelector": "3cb747bf",
            "mutability": "mutable",
            "name": "messenger",
            "nameLocation": "2283:9:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
              "typeString": "contract CrossDomainMessenger"
            },
            "typeName": {
              "id": 77533,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 77532,
                "name": "CrossDomainMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75405,
                "src": "2255:20:203"
              },
              "referencedDeclaration": 75405,
              "src": "2255:20:203",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                "typeString": "contract CrossDomainMessenger"
              }
            },
            "visibility": "public"
          },
          {
            "id": 77539,
            "nodeType": "VariableDeclaration",
            "src": "2538:25:203",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 77535,
              "nodeType": "StructuredDocumentation",
              "src": "2299:234:203",
              "text": "@notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades.\n         A gap size of 46 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2558:5:203",
            "scope": 78227,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$46_storage",
              "typeString": "uint256[46]"
            },
            "typeName": {
              "baseType": {
                "id": 77536,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2538:7:203",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 77538,
              "length": {
                "hexValue": "3436",
                "id": 77537,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2546:2:203",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_46_by_1",
                  "typeString": "int_const 46"
                },
                "value": "46"
              },
              "nodeType": "ArrayTypeName",
              "src": "2538:11:203",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$46_storage_ptr",
                "typeString": "uint256[46]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 77550,
            "nodeType": "EventDefinition",
            "src": "2852:100:203",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77540,
              "nodeType": "StructuredDocumentation",
              "src": "2570:277:203",
              "text": "@notice Emitted when an ETH bridge is initiated to the other chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af5",
            "name": "ETHBridgeInitiated",
            "nameLocation": "2858:18:203",
            "parameters": {
              "id": 77549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77542,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2893:4:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77550,
                  "src": "2877:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77544,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2915:2:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77550,
                  "src": "2899:18:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77546,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2927:6:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77550,
                  "src": "2919:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2919:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2941:9:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77550,
                  "src": "2935:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77547,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2876:75:203"
            }
          },
          {
            "id": 77561,
            "nodeType": "EventDefinition",
            "src": "3235:100:203",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77551,
              "nodeType": "StructuredDocumentation",
              "src": "2958:272:203",
              "text": "@notice Emitted when an ETH bridge is finalized on this chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d",
            "name": "ETHBridgeFinalized",
            "nameLocation": "3241:18:203",
            "parameters": {
              "id": 77560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77553,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3276:4:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77561,
                  "src": "3260:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77555,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3298:2:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77561,
                  "src": "3282:18:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3310:6:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77561,
                  "src": "3302:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77559,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3324:9:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77561,
                  "src": "3318:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77558,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:75:203"
            }
          },
          {
            "id": 77576,
            "nodeType": "EventDefinition",
            "src": "3771:205:203",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77562,
              "nodeType": "StructuredDocumentation",
              "src": "3341:425:203",
              "text": "@notice Emitted when an ERC20 bridge is initiated to the other chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf",
            "name": "ERC20BridgeInitiated",
            "nameLocation": "3777:20:203",
            "parameters": {
              "id": 77575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77564,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "3823:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3807:26:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77566,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "3859:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3843:27:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77568,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3896:4:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3880:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77570,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3918:2:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3910:10:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77572,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3938:6:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3930:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77574,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3960:9:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77576,
                  "src": "3954:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3797:178:203"
            }
          },
          {
            "id": 77591,
            "nodeType": "EventDefinition",
            "src": "4407:205:203",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 77577,
              "nodeType": "StructuredDocumentation",
              "src": "3982:420:203",
              "text": "@notice Emitted when an ERC20 bridge is finalized on this chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "d59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd",
            "name": "ERC20BridgeFinalized",
            "nameLocation": "4413:20:203",
            "parameters": {
              "id": 77590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77579,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "4459:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4443:26:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "4495:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4479:27:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77583,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4532:4:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4516:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4554:2:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4546:10:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4546:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77587,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4574:6:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4566:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4596:9:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77591,
                  "src": "4590:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77588,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4590:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4433:178:203"
            }
          },
          {
            "id": 77606,
            "nodeType": "ModifierDefinition",
            "src": "4915:146:203",
            "nodes": [],
            "body": {
              "id": 77605,
              "nodeType": "Block",
              "src": "4934:127:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4952:31:203",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 77597,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4972:3:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 77598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4972:10:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 77595,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35835,
                              "src": "4953:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$35835_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 77596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35558,
                            "src": "4953:18:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 77599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4953:30:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20616e20454f41",
                        "id": 77601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4985:57:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        },
                        "value": "StandardBridge: function can only be called from an EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        }
                      ],
                      "id": 77594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4944:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4944:99:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77603,
                  "nodeType": "ExpressionStatement",
                  "src": "4944:99:203"
                },
                {
                  "id": 77604,
                  "nodeType": "PlaceholderStatement",
                  "src": "5053:1:203"
                }
              ]
            },
            "documentation": {
              "id": 77592,
              "nodeType": "StructuredDocumentation",
              "src": "4618:292:203",
              "text": "@notice Only allow EOAs to call the functions. Note that this is not safe against contracts\n         calling code within their constructors, but also doesn't really matter since we're\n         just trying to prevent users accidentally depositing with smart contract wallets."
            },
            "name": "onlyEOA",
            "nameLocation": "4924:7:203",
            "parameters": {
              "id": 77593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4931:2:203"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77631,
            "nodeType": "ModifierDefinition",
            "src": "5155:260:203",
            "nodes": [],
            "body": {
              "id": 77630,
              "nodeType": "Block",
              "src": "5182:233:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 77625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 77616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 77610,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5213:3:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 77611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5213:10:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 77614,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77534,
                                "src": "5235:9:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              ],
                              "id": 77613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5227:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77612,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5227:7:203",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5227:18:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5213:32:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 77624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 77617,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77534,
                                "src": "5249:9:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              },
                              "id": 77618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "xDomainMessageSender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75317,
                              "src": "5249:30:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 77619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5249:32:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 77622,
                                "name": "OTHER_BRIDGE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77517,
                                "src": "5293:12:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                  "typeString": "contract StandardBridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                  "typeString": "contract StandardBridge"
                                }
                              ],
                              "id": 77621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5285:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77620,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5285:7:203",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5285:21:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5249:57:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5213:93:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20746865206f7468657220627269646765",
                        "id": 77626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5320:67:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        },
                        "value": "StandardBridge: function can only be called from the other bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        }
                      ],
                      "id": 77609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5192:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5192:205:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77628,
                  "nodeType": "ExpressionStatement",
                  "src": "5192:205:203"
                },
                {
                  "id": 77629,
                  "nodeType": "PlaceholderStatement",
                  "src": "5407:1:203"
                }
              ]
            },
            "documentation": {
              "id": 77607,
              "nodeType": "StructuredDocumentation",
              "src": "5067:83:203",
              "text": "@notice Ensures that the caller is a cross-chain message from the other bridge."
            },
            "name": "onlyOtherBridge",
            "nameLocation": "5164:15:203",
            "parameters": {
              "id": 77608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5179:2:203"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77643,
            "nodeType": "FunctionDefinition",
            "src": "5495:85:203",
            "nodes": [],
            "body": {
              "id": 77642,
              "nodeType": "Block",
              "src": "5536:44:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77638,
                      "name": "OTHER_BRIDGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77517,
                      "src": "5546:12:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$78227",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77639,
                      "name": "_otherBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77635,
                      "src": "5561:12:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$78227",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "src": "5546:27:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$78227",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "id": 77641,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:27:203"
                }
              ]
            },
            "documentation": {
              "id": 77632,
              "nodeType": "StructuredDocumentation",
              "src": "5421:69:203",
              "text": "@param _otherBridge Address of the other StandardBridge contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 77636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77635,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "5522:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77643,
                  "src": "5507:27:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardBridge_$78227",
                    "typeString": "contract StandardBridge"
                  },
                  "typeName": {
                    "id": 77634,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77633,
                      "name": "StandardBridge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78227,
                      "src": "5507:14:203"
                    },
                    "referencedDeclaration": 78227,
                    "src": "5507:14:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$78227",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5506:29:203"
            },
            "returnParameters": {
              "id": 77637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5536:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77657,
            "nodeType": "FunctionDefinition",
            "src": "5745:129:203",
            "nodes": [],
            "body": {
              "id": 77656,
              "nodeType": "Block",
              "src": "5835:39:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77652,
                      "name": "messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77534,
                      "src": "5845:9:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77653,
                      "name": "_messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77647,
                      "src": "5857:10:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "src": "5845:22:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "id": 77655,
                  "nodeType": "ExpressionStatement",
                  "src": "5845:22:203"
                }
              ]
            },
            "documentation": {
              "id": 77644,
              "nodeType": "StructuredDocumentation",
              "src": "5586:101:203",
              "text": "@notice Initializer.\n @param _messenger   Address of CrossDomainMessenger on this network."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77649,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32207,
                  "src": "5818:16:203"
                },
                "nodeType": "ModifierInvocation",
                "src": "5818:16:203"
              }
            ],
            "name": "__StandardBridge_init",
            "nameLocation": "5754:21:203",
            "parameters": {
              "id": 77648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77647,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "5797:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77657,
                  "src": "5776:31:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 77646,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77645,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75405,
                      "src": "5776:20:203"
                    },
                    "referencedDeclaration": 75405,
                    "src": "5776:20:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:33:203"
            },
            "returnParameters": {
              "id": 77651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5835:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77661,
            "nodeType": "FunctionDefinition",
            "src": "6020:35:203",
            "nodes": [],
            "documentation": {
              "id": 77658,
              "nodeType": "StructuredDocumentation",
              "src": "5880:135:203",
              "text": "@notice Allows EOAs to bridge ETH by sending directly to the bridge.\n         Must be implemented by contracts that inherit."
            },
            "implemented": false,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 77659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6027:2:203"
            },
            "returnParameters": {
              "id": 77660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6054:0:203"
            },
            "scope": 78227,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 77671,
            "nodeType": "FunctionDefinition",
            "src": "6182:99:203",
            "nodes": [],
            "body": {
              "id": 77670,
              "nodeType": "Block",
              "src": "6248:33:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77668,
                    "name": "messenger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77534,
                    "src": "6265:9:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "functionReturnParameters": 77667,
                  "id": 77669,
                  "nodeType": "Return",
                  "src": "6258:16:203"
                }
              ]
            },
            "documentation": {
              "id": 77662,
              "nodeType": "StructuredDocumentation",
              "src": "6061:116:203",
              "text": "@notice Getter for messenger contract.\n @custom:legacy\n @return Messenger contract on this domain."
            },
            "functionSelector": "927ede2d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "MESSENGER",
            "nameLocation": "6191:9:203",
            "parameters": {
              "id": 77663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6200:2:203"
            },
            "returnParameters": {
              "id": 77667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77671,
                  "src": "6226:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 77665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77664,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75405,
                      "src": "6226:20:203"
                    },
                    "referencedDeclaration": 75405,
                    "src": "6226:20:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6225:22:203"
            },
            "scope": 78227,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77681,
            "nodeType": "FunctionDefinition",
            "src": "6349:98:203",
            "nodes": [],
            "body": {
              "id": 77680,
              "nodeType": "Block",
              "src": "6411:36:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 77678,
                    "name": "OTHER_BRIDGE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77517,
                    "src": "6428:12:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$78227",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "functionReturnParameters": 77677,
                  "id": 77679,
                  "nodeType": "Return",
                  "src": "6421:19:203"
                }
              ]
            },
            "documentation": {
              "id": 77672,
              "nodeType": "StructuredDocumentation",
              "src": "6287:57:203",
              "text": "@notice Getter for the remote domain bridge contract."
            },
            "functionSelector": "c89701a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "otherBridge",
            "nameLocation": "6358:11:203",
            "parameters": {
              "id": 77673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6369:2:203"
            },
            "returnParameters": {
              "id": 77677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77676,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77681,
                  "src": "6395:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardBridge_$78227",
                    "typeString": "contract StandardBridge"
                  },
                  "typeName": {
                    "id": 77675,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77674,
                      "name": "StandardBridge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78227,
                      "src": "6395:14:203"
                    },
                    "referencedDeclaration": 78227,
                    "src": "6395:14:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$78227",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6394:16:203"
            },
            "scope": 78227,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77703,
            "nodeType": "FunctionDefinition",
            "src": "6868:186:203",
            "nodes": [],
            "body": {
              "id": 77702,
              "nodeType": "Block",
              "src": "6958:96:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77692,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6987:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6987:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77694,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6999:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6999:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77696,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7011:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7011:9:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77698,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77684,
                        "src": "7022:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77699,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77686,
                        "src": "7036:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77691,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77971,
                      "src": "6968:18:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 77700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:79:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77701,
                  "nodeType": "ExpressionStatement",
                  "src": "6968:79:203"
                }
              ]
            },
            "documentation": {
              "id": 77682,
              "nodeType": "StructuredDocumentation",
              "src": "6453:410:203",
              "text": "@notice Sends ETH to the sender's address on the other chain.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "09fc8843",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77688,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77606,
                  "src": "6950:7:203"
                },
                "nodeType": "ModifierInvocation",
                "src": "6950:7:203"
              }
            ],
            "name": "bridgeETH",
            "nameLocation": "6877:9:203",
            "parameters": {
              "id": 77687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77684,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6894:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77703,
                  "src": "6887:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77683,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6887:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77686,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "6923:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77703,
                  "src": "6908:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6908:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6886:48:203"
            },
            "returnParameters": {
              "id": 77690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6958:0:203"
            },
            "scope": 78227,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77724,
            "nodeType": "FunctionDefinition",
            "src": "8065:186:203",
            "nodes": [],
            "body": {
              "id": 77723,
              "nodeType": "Block",
              "src": "8162:89:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77714,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8191:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8191:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77716,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77706,
                        "src": "8203:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77717,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8208:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8208:9:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77719,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77708,
                        "src": "8219:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77720,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77710,
                        "src": "8233:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77713,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77971,
                      "src": "8172:18:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 77721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8172:72:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77722,
                  "nodeType": "ExpressionStatement",
                  "src": "8172:72:203"
                }
              ]
            },
            "documentation": {
              "id": 77704,
              "nodeType": "StructuredDocumentation",
              "src": "7060:1000:203",
              "text": "@notice Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a\n         smart contract and the call fails, the ETH will be temporarily locked in the\n         StandardBridge on the other chain until the call is replayed. If the call cannot be\n         replayed with any amount of gas (call always reverts), then the ETH will be\n         permanently locked in the StandardBridge on the other chain. ETH will also\n         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert\n         in that case.\n @param _to          Address of the receiver.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "e11013dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeETHTo",
            "nameLocation": "8074:11:203",
            "parameters": {
              "id": 77711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77706,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8094:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77724,
                  "src": "8086:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8086:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77708,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8106:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77724,
                  "src": "8099:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77707,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8099:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77710,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8135:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77724,
                  "src": "8120:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8085:61:203"
            },
            "returnParameters": {
              "id": 77712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8162:0:203"
            },
            "scope": 78227,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77753,
            "nodeType": "FunctionDefinition",
            "src": "9134:349:203",
            "nodes": [],
            "body": {
              "id": 77752,
              "nodeType": "Block",
              "src": "9360:123:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77741,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77727,
                        "src": "9391:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77742,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77729,
                        "src": "9404:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9418:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9418:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9430:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9430:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77747,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77731,
                        "src": "9442:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77748,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77733,
                        "src": "9451:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77749,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77735,
                        "src": "9465:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77740,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78069,
                      "src": "9370:20:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 77750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9370:106:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77751,
                  "nodeType": "ExpressionStatement",
                  "src": "9370:106:203"
                }
              ]
            },
            "documentation": {
              "id": 77725,
              "nodeType": "StructuredDocumentation",
              "src": "8257:872:203",
              "text": "@notice Sends ERC20 tokens to the sender's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "87087623",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77737,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77606,
                  "src": "9348:7:203"
                },
                "nodeType": "ModifierInvocation",
                "src": "9348:7:203"
              }
            ],
            "name": "bridgeERC20",
            "nameLocation": "9143:11:203",
            "parameters": {
              "id": 77736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77727,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "9172:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77753,
                  "src": "9164:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77729,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "9201:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77753,
                  "src": "9193:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9193:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77731,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9231:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77753,
                  "src": "9223:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9223:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77733,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "9255:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77753,
                  "src": "9248:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77732,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9248:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77735,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9292:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77753,
                  "src": "9277:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9277:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9154:154:203"
            },
            "returnParameters": {
              "id": 77739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9360:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 77781,
            "nodeType": "FunctionDefinition",
            "src": "10419:349:203",
            "nodes": [],
            "body": {
              "id": 77780,
              "nodeType": "Block",
              "src": "10652:116:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77770,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77756,
                        "src": "10683:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77771,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77758,
                        "src": "10696:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10710:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10710:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77774,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77760,
                        "src": "10722:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77775,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77762,
                        "src": "10727:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77776,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77764,
                        "src": "10736:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 77777,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77766,
                        "src": "10750:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77769,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78069,
                      "src": "10662:20:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 77778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10662:99:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77779,
                  "nodeType": "ExpressionStatement",
                  "src": "10662:99:203"
                }
              ]
            },
            "documentation": {
              "id": 77754,
              "nodeType": "StructuredDocumentation",
              "src": "9489:925:203",
              "text": "@notice Sends ERC20 tokens to a receiver's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "540abf73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeERC20To",
            "nameLocation": "10428:13:203",
            "parameters": {
              "id": 77767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77756,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "10459:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10451:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10451:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77758,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "10488:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10480:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10480:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77760,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10518:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10510:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10510:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77762,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10539:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10531:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10531:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77764,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "10563:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10556:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77763,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10556:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77766,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10600:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77781,
                  "src": "10585:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77765,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10585:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10441:175:203"
            },
            "returnParameters": {
              "id": 77768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10652:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 77847,
            "nodeType": "FunctionDefinition",
            "src": "11332:840:203",
            "nodes": [],
            "body": {
              "id": 77846,
              "nodeType": "Block",
              "src": "11528:644:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11546:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11546:9:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 77798,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77788,
                          "src": "11559:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11546:20:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20616d6f756e742073656e7420646f6573206e6f74206d6174636820616d6f756e74207265717569726564",
                        "id": 77800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11568:60:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        },
                        "value": "StandardBridge: amount sent does not match amount required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        }
                      ],
                      "id": 77795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11538:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11538:91:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77802,
                  "nodeType": "ExpressionStatement",
                  "src": "11538:91:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77804,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77786,
                          "src": "11647:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 77807,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11662:4:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                "typeString": "contract StandardBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                "typeString": "contract StandardBridge"
                              }
                            ],
                            "id": 77806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11654:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77805,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11654:7:203",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11654:13:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11647:20:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f2073656c66",
                        "id": 77810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11669:37:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        },
                        "value": "StandardBridge: cannot send to self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        }
                      ],
                      "id": 77803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11639:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11639:68:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77812,
                  "nodeType": "ExpressionStatement",
                  "src": "11639:68:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77814,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77786,
                          "src": "11725:3:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 77817,
                              "name": "messenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77534,
                              "src": "11740:9:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            ],
                            "id": 77816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11732:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11732:7:203",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11732:18:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11725:25:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d657373656e676572",
                        "id": 77820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11752:42:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        },
                        "value": "StandardBridge: cannot send to messenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        }
                      ],
                      "id": 77813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11717:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11717:78:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77822,
                  "nodeType": "ExpressionStatement",
                  "src": "11717:78:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77824,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77784,
                        "src": "11997:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77825,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77786,
                        "src": "12004:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77826,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77788,
                        "src": "12009:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77827,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77790,
                        "src": "12018:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77823,
                      "name": "_emitETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78174,
                      "src": "11973:23:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 77828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11973:56:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77829,
                  "nodeType": "ExpressionStatement",
                  "src": "11973:56:203"
                },
                {
                  "assignments": [
                    77831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77831,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12045:7:203",
                      "nodeType": "VariableDeclaration",
                      "scope": 77846,
                      "src": "12040:12:203",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 77830,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12040:4:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77840,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77834,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77786,
                        "src": "12069:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 77835,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "12074:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 77836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12074:9:203",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77837,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77788,
                        "src": "12085:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 77838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12094:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 77832,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70816,
                        "src": "12055:8:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$70816_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 77833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70770,
                      "src": "12055:13:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 77839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12055:45:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12040:60:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77842,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77831,
                        "src": "12118:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20455448207472616e73666572206661696c6564",
                        "id": 77843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12127:37:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        },
                        "value": "StandardBridge: ETH transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        }
                      ],
                      "id": 77841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12110:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12110:55:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77845,
                  "nodeType": "ExpressionStatement",
                  "src": "12110:55:203"
                }
              ]
            },
            "documentation": {
              "id": 77782,
              "nodeType": "StructuredDocumentation",
              "src": "10774:553:203",
              "text": "@notice Finalizes an ETH bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH being bridged.\n @param _extraData Extra data to be sent with the transaction. Note that the recipient will\n                   not be triggered with this data, but it will be emitted and can be used\n                   to identify the transaction."
            },
            "functionSelector": "1635f5fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77792,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77631,
                  "src": "11508:15:203"
                },
                "nodeType": "ModifierInvocation",
                "src": "11508:15:203"
              }
            ],
            "name": "finalizeBridgeETH",
            "nameLocation": "11341:17:203",
            "parameters": {
              "id": 77791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77784,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "11376:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77847,
                  "src": "11368:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11368:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77786,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11399:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77847,
                  "src": "11391:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11391:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77788,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11420:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77847,
                  "src": "11412:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11412:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77790,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "11452:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77847,
                  "src": "11437:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77789,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11437:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11358:110:203"
            },
            "returnParameters": {
              "id": 77794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11528:0:203"
            },
            "scope": 78227,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77919,
            "nodeType": "FunctionDefinition",
            "src": "12904:1022:203",
            "nodes": [],
            "body": {
              "id": 77918,
              "nodeType": "Block",
              "src": "13145:781:203",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 77866,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77850,
                        "src": "13184:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77865,
                      "name": "_isOptimismMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78096,
                      "src": "13159:24:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 77867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13159:37:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 77907,
                    "nodeType": "Block",
                    "src": "13476:168:203",
                    "statements": [
                      {
                        "expression": {
                          "id": 77897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 77885,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77530,
                                "src": "13490:8:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 77888,
                              "indexExpression": {
                                "id": 77886,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77850,
                                "src": "13499:11:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13490:21:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 77889,
                            "indexExpression": {
                              "id": 77887,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77852,
                              "src": "13512:12:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13490:35:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 77896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 77890,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77530,
                                  "src": "13528:8:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 77892,
                                "indexExpression": {
                                  "id": 77891,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77850,
                                  "src": "13537:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13528:21:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 77894,
                              "indexExpression": {
                                "id": 77893,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77852,
                                "src": "13550:12:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13528:35:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 77895,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77858,
                              "src": "13566:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13528:45:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13490:83:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 77898,
                        "nodeType": "ExpressionStatement",
                        "src": "13490:83:203"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77903,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77856,
                              "src": "13620:3:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 77904,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77858,
                              "src": "13625:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 77900,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77850,
                                  "src": "13594:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77899,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32948,
                                "src": "13587:6:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$32948_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 77901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13587:19:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$32948",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 77902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33894,
                            "src": "13587:32:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$32948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$32948_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 77905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13587:46:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77906,
                        "nodeType": "ExpressionStatement",
                        "src": "13587:46:203"
                      }
                    ]
                  },
                  "id": 77908,
                  "nodeType": "IfStatement",
                  "src": "13155:489:203",
                  "trueBody": {
                    "id": 77884,
                    "nodeType": "Block",
                    "src": "13198:272:203",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 77870,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77850,
                                  "src": "13257:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 77871,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77852,
                                  "src": "13270:12:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77869,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78134,
                                "src": "13237:19:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 77872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13237:46:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 77873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13301:76:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Optimism Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              }
                            ],
                            "id": 77868,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13212:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13212:179:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77875,
                        "nodeType": "ExpressionStatement",
                        "src": "13212:179:203"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77880,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77856,
                              "src": "13446:3:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 77881,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77858,
                              "src": "13451:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 77877,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77850,
                                  "src": "13428:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77876,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76156,
                                "src": "13406:21:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$76156_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 77878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13406:34:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$76156",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 77879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76043,
                            "src": "13406:39:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 77882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13406:53:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77883,
                        "nodeType": "ExpressionStatement",
                        "src": "13406:53:203"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77910,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77850,
                        "src": "13860:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77911,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77852,
                        "src": "13873:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77912,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77854,
                        "src": "13887:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77913,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77856,
                        "src": "13894:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77914,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77858,
                        "src": "13899:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77915,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77860,
                        "src": "13908:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 77909,
                      "name": "_emitERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78226,
                      "src": "13834:25:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 77916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13834:85:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77917,
                  "nodeType": "ExpressionStatement",
                  "src": "13834:85:203"
                }
              ]
            },
            "documentation": {
              "id": 77848,
              "nodeType": "StructuredDocumentation",
              "src": "12178:721:203",
              "text": "@notice Finalizes an ERC20 bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 being bridged.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "0166a07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77862,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77631,
                  "src": "13125:15:203"
                },
                "nodeType": "ModifierInvocation",
                "src": "13125:15:203"
              }
            ],
            "name": "finalizeBridgeERC20",
            "nameLocation": "12913:19:203",
            "parameters": {
              "id": 77861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77850,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "12950:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "12942:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12942:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77852,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "12979:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "12971:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12971:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77854,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "13009:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "13001:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13001:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77856,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "13032:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "13024:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13024:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77858,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13053:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "13045:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13045:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77860,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "13085:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77919,
                  "src": "13070:25:203",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77859,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13070:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12932:169:203"
            },
            "returnParameters": {
              "id": 77864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13145:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77971,
            "nodeType": "FunctionDefinition",
            "src": "14514:755:203",
            "nodes": [],
            "body": {
              "id": 77970,
              "nodeType": "Block",
              "src": "14700:569:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77934,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14718:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "14718:9:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 77936,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77926,
                          "src": "14731:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14718:20:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a206272696467696e6720455448206d75737420696e636c7564652073756666696369656e74204554482076616c7565",
                        "id": 77938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14740:64:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        },
                        "value": "StandardBridge: bridging ETH must include sufficient ETH value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        }
                      ],
                      "id": 77933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14710:7:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14710:95:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77940,
                  "nodeType": "ExpressionStatement",
                  "src": "14710:95:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77942,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77922,
                        "src": "15007:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77943,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77924,
                        "src": "15014:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77944,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77926,
                        "src": "15019:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77945,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77930,
                        "src": "15028:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 77941,
                      "name": "_emitETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78154,
                      "src": "14983:23:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 77946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14983:56:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77947,
                  "nodeType": "ExpressionStatement",
                  "src": "14983:56:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77955,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77517,
                            "src": "15111:12:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$78227",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$78227",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 77954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15103:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15103:7:203",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15103:21:203",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 77959,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15161:4:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 77960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77847,
                              "src": "15161:22:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 77961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15161:31:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 77962,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77922,
                            "src": "15194:5:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 77963,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77924,
                            "src": "15201:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 77964,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77926,
                            "src": "15206:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 77965,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77930,
                            "src": "15215:10:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 77957,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15138:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 77958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15138:22:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 77966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15138:88:203",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 77967,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77928,
                        "src": "15240:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 77948,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77534,
                          "src": "15050:9:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                            "typeString": "contract CrossDomainMessenger"
                          }
                        },
                        "id": 77950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sendMessage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75087,
                        "src": "15050:21:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                          "typeString": "function (address,bytes memory,uint32) payable external"
                        }
                      },
                      "id": 77952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 77951,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77926,
                          "src": "15080:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "15050:39:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$value",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 77968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15050:212:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77969,
                  "nodeType": "ExpressionStatement",
                  "src": "15050:212:203"
                }
              ]
            },
            "documentation": {
              "id": 77920,
              "nodeType": "StructuredDocumentation",
              "src": "13932:577:203",
              "text": "@notice Initiates a bridge of ETH through the CrossDomainMessenger.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of ETH being bridged.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeETH",
            "nameLocation": "14523:18:203",
            "parameters": {
              "id": 77931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77922,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "14559:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77971,
                  "src": "14551:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14551:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77924,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "14582:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77971,
                  "src": "14574:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14574:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77926,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14603:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77971,
                  "src": "14595:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14595:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77928,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "14627:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77971,
                  "src": "14620:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77927,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14620:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77930,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "14662:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 77971,
                  "src": "14649:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77929,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14649:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14541:137:203"
            },
            "returnParameters": {
              "id": 77932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14700:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78069,
            "nodeType": "FunctionDefinition",
            "src": "15963:1646:203",
            "nodes": [],
            "body": {
              "id": 78068,
              "nodeType": "Block",
              "src": "16210:1399:203",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 77990,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77974,
                        "src": "16249:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 77989,
                      "name": "_isOptimismMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78096,
                      "src": "16224:24:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 77991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16224:37:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 78035,
                    "nodeType": "Block",
                    "src": "16543:189:203",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78013,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77978,
                              "src": "16594:5:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 78016,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16609:4:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                    "typeString": "contract StandardBridge"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                    "typeString": "contract StandardBridge"
                                  }
                                ],
                                "id": 78015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16601:7:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78014,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16601:7:203",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16601:13:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 78018,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77982,
                              "src": "16616:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 78010,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77974,
                                  "src": "16564:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 78009,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32948,
                                "src": "16557:6:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$32948_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 78011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16557:19:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$32948",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 78012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33920,
                            "src": "16557:36:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$32948_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$32948_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 78019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16557:67:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78020,
                        "nodeType": "ExpressionStatement",
                        "src": "16557:67:203"
                      },
                      {
                        "expression": {
                          "id": 78033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 78021,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77530,
                                "src": "16638:8:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 78024,
                              "indexExpression": {
                                "id": 78022,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77974,
                                "src": "16647:11:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16638:21:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 78025,
                            "indexExpression": {
                              "id": 78023,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77976,
                              "src": "16660:12:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16638:35:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 78032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 78026,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77530,
                                  "src": "16676:8:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 78028,
                                "indexExpression": {
                                  "id": 78027,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77974,
                                  "src": "16685:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16676:21:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 78030,
                              "indexExpression": {
                                "id": 78029,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77976,
                                "src": "16698:12:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16676:35:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 78031,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77982,
                              "src": "16714:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16676:45:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16638:83:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78034,
                        "nodeType": "ExpressionStatement",
                        "src": "16638:83:203"
                      }
                    ]
                  },
                  "id": 78036,
                  "nodeType": "IfStatement",
                  "src": "16220:512:203",
                  "trueBody": {
                    "id": 78008,
                    "nodeType": "Block",
                    "src": "16263:274:203",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 77994,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77974,
                                  "src": "16322:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 77995,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77976,
                                  "src": "16335:12:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 77993,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78134,
                                "src": "16302:19:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 77996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16302:46:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 77997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16366:76:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Optimism Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              }
                            ],
                            "id": 77992,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16277:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16277:179:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77999,
                        "nodeType": "ExpressionStatement",
                        "src": "16277:179:203"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78004,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77978,
                              "src": "16511:5:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 78005,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77982,
                              "src": "16518:7:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 78001,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77974,
                                  "src": "16493:11:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 78000,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76156,
                                "src": "16471:21:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$76156_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 78002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16471:34:203",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$76156",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 78003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76067,
                            "src": "16471:39:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 78006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16471:55:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78007,
                        "nodeType": "ExpressionStatement",
                        "src": "16471:55:203"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78038,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77974,
                        "src": "16948:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78039,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77976,
                        "src": "16961:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78040,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77978,
                        "src": "16975:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78041,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77980,
                        "src": "16982:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78042,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77982,
                        "src": "16987:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78043,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77986,
                        "src": "16996:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78037,
                      "name": "_emitERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78200,
                      "src": "16922:25:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 78044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16922:85:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78045,
                  "nodeType": "ExpressionStatement",
                  "src": "16922:85:203"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78051,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77517,
                            "src": "17061:12:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$78227",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$78227",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 78050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17053:7:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78049,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17053:7:203",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17053:21:203",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 78055,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17128:4:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$78227",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 78056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77919,
                              "src": "17128:24:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,address,address,uint256,bytes memory) external"
                              }
                            },
                            "id": 78057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17128:33:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 78058,
                            "name": "_remoteToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77976,
                            "src": "17414:12:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78059,
                            "name": "_localToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77974,
                            "src": "17444:11:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78060,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77978,
                            "src": "17473:5:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78061,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77980,
                            "src": "17496:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78062,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77982,
                            "src": "17517:7:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 78063,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77986,
                            "src": "17542:10:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 78053,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17088:3:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 78054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17088:22:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 78064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17088:478:203",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 78065,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77984,
                        "src": "17580:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 78046,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77534,
                        "src": "17018:9:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$75405",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      },
                      "id": 78048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75087,
                      "src": "17018:21:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 78066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17018:584:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78067,
                  "nodeType": "ExpressionStatement",
                  "src": "17018:584:203"
                }
              ]
            },
            "documentation": {
              "id": 77972,
              "nodeType": "StructuredDocumentation",
              "src": "15275:683:203",
              "text": "@notice Sends ERC20 tokens to a receiver's address on the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeERC20",
            "nameLocation": "15972:20:203",
            "parameters": {
              "id": 77987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77974,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "16010:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16002:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16002:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77976,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "16039:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16031:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77978,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "16069:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16061:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16061:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77980,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "16092:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16084:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16084:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77982,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16113:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16105:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16105:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77984,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16137:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16130:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 77983,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16130:6:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77986,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "16172:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78069,
                  "src": "16159:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77985,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16159:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15992:196:203"
            },
            "returnParameters": {
              "id": 77988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16210:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78096,
            "nodeType": "FunctionDefinition",
            "src": "17873:279:203",
            "nodes": [],
            "body": {
              "id": 78095,
              "nodeType": "Block",
              "src": "17952:200:203",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 78093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 78079,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78072,
                          "src": "18001:6:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 78081,
                                "name": "ILegacyMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75843,
                                "src": "18014:20:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              ],
                              "id": 78080,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18009:4:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 78082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18009:26:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$75843",
                              "typeString": "type(contract ILegacyMintableERC20)"
                            }
                          },
                          "id": 78083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18009:38:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 78077,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37000,
                          "src": "17969:13:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$37000_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 78078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36856,
                        "src": "17969:31:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 78084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17969:79:203",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 78087,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78072,
                          "src": "18096:6:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 78089,
                                "name": "IOptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75820,
                                "src": "18109:22:203",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$75820_$",
                                  "typeString": "type(contract IOptimismMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$75820_$",
                                  "typeString": "type(contract IOptimismMintableERC20)"
                                }
                              ],
                              "id": 78088,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18104:4:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 78090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18104:28:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IOptimismMintableERC20_$75820",
                              "typeString": "type(contract IOptimismMintableERC20)"
                            }
                          },
                          "id": 78091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18104:40:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 78085,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37000,
                          "src": "18064:13:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$37000_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 78086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36856,
                        "src": "18064:31:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 78092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18064:81:203",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17969:176:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78076,
                  "id": 78094,
                  "nodeType": "Return",
                  "src": "17962:183:203"
                }
              ]
            },
            "documentation": {
              "id": 78070,
              "nodeType": "StructuredDocumentation",
              "src": "17615:253:203",
              "text": "@notice Checks if a given address is an OptimismMintableERC20. Not perfect, but good enough.\n         Just the way we like it.\n @param _token Address of the token to check.\n @return True if the token is an OptimismMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOptimismMintableERC20",
            "nameLocation": "17882:24:203",
            "parameters": {
              "id": 78073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78072,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "17915:6:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78096,
                  "src": "17907:14:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17907:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17906:16:203"
            },
            "returnParameters": {
              "id": 78076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78096,
                  "src": "17946:4:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17946:4:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17945:6:203"
            },
            "scope": 78227,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78134,
            "nodeType": "FunctionDefinition",
            "src": "18599:410:203",
            "nodes": [],
            "body": {
              "id": 78133,
              "nodeType": "Block",
              "src": "18702:307:203",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 78108,
                        "name": "_mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78099,
                        "src": "18748:14:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78110,
                              "name": "ILegacyMintableERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75843,
                              "src": "18769:20:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                                "typeString": "type(contract ILegacyMintableERC20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                                "typeString": "type(contract ILegacyMintableERC20)"
                              }
                            ],
                            "id": 78109,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "18764:4:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 78111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18764:26:203",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$75843",
                            "typeString": "type(contract ILegacyMintableERC20)"
                          }
                        },
                        "id": 78112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "18764:38:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 78106,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37000,
                        "src": "18716:13:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$37000_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 78107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36856,
                      "src": "18716:31:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 78113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18716:87:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 78131,
                    "nodeType": "Block",
                    "src": "18904:99:203",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 78129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78123,
                            "name": "_otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78101,
                            "src": "18925:11:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 78125,
                                    "name": "_mintableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78099,
                                    "src": "18963:14:203",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 78124,
                                  "name": "IOptimismMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75820,
                                  "src": "18940:22:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$75820_$",
                                    "typeString": "type(contract IOptimismMintableERC20)"
                                  }
                                },
                                "id": 78126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18940:38:203",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOptimismMintableERC20_$75820",
                                  "typeString": "contract IOptimismMintableERC20"
                                }
                              },
                              "id": 78127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "remoteToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75800,
                              "src": "18940:50:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 78128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18940:52:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18925:67:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 78105,
                        "id": 78130,
                        "nodeType": "Return",
                        "src": "18918:74:203"
                      }
                    ]
                  },
                  "id": 78132,
                  "nodeType": "IfStatement",
                  "src": "18712:291:203",
                  "trueBody": {
                    "id": 78122,
                    "nodeType": "Block",
                    "src": "18805:93:203",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 78120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78114,
                            "name": "_otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78101,
                            "src": "18826:11:203",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 78116,
                                    "name": "_mintableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78099,
                                    "src": "18862:14:203",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 78115,
                                  "name": "ILegacyMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75843,
                                  "src": "18841:20:203",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$75843_$",
                                    "typeString": "type(contract ILegacyMintableERC20)"
                                  }
                                },
                                "id": 78117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18841:36:203",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILegacyMintableERC20_$75843",
                                  "typeString": "contract ILegacyMintableERC20"
                                }
                              },
                              "id": 78118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "l1Token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75828,
                              "src": "18841:44:203",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 78119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18841:46:203",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18826:61:203",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 78105,
                        "id": 78121,
                        "nodeType": "Return",
                        "src": "18819:68:203"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 78097,
              "nodeType": "StructuredDocumentation",
              "src": "18158:436:203",
              "text": "@notice Checks if the \"other token\" is the correct pair token for the OptimismMintableERC20.\n         Calls can be saved in the future by combining this logic with\n         `_isOptimismMintableERC20`.\n @param _mintableToken OptimismMintableERC20 to check against.\n @param _otherToken    Pair token to check.\n @return True if the other token is the correct pair token for the OptimismMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCorrectTokenPair",
            "nameLocation": "18608:19:203",
            "parameters": {
              "id": 78102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78099,
                  "mutability": "mutable",
                  "name": "_mintableToken",
                  "nameLocation": "18636:14:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78134,
                  "src": "18628:22:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18628:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78101,
                  "mutability": "mutable",
                  "name": "_otherToken",
                  "nameLocation": "18660:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78134,
                  "src": "18652:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18652:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18627:45:203"
            },
            "returnParameters": {
              "id": 78105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78134,
                  "src": "18696:4:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18696:4:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18695:6:203"
            },
            "scope": 78227,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 78154,
            "nodeType": "FunctionDefinition",
            "src": "19385:251:203",
            "nodes": [],
            "body": {
              "id": 78153,
              "nodeType": "Block",
              "src": "19563:73:203",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78147,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78137,
                        "src": "19597:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78148,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78139,
                        "src": "19604:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78149,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78141,
                        "src": "19609:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78150,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78143,
                        "src": "19618:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78146,
                      "name": "ETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77550,
                      "src": "19578:18:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 78151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19578:51:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78152,
                  "nodeType": "EmitStatement",
                  "src": "19573:56:203"
                }
              ]
            },
            "documentation": {
              "id": 78135,
              "nodeType": "StructuredDocumentation",
              "src": "19015:365:203",
              "text": "@notice Emits the ETHBridgeInitiated event and if necessary the appropriate legacy event\n         when an ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeInitiated",
            "nameLocation": "19394:23:203",
            "parameters": {
              "id": 78144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78137,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "19435:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78154,
                  "src": "19427:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19427:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78139,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "19458:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78154,
                  "src": "19450:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19450:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78141,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19479:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78154,
                  "src": "19471:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19471:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78143,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "19509:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78154,
                  "src": "19496:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78142,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19496:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19417:108:203"
            },
            "returnParameters": {
              "id": 78145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19563:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 78174,
            "nodeType": "FunctionDefinition",
            "src": "20006:251:203",
            "nodes": [],
            "body": {
              "id": 78173,
              "nodeType": "Block",
              "src": "20184:73:203",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78167,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78157,
                        "src": "20218:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78168,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78159,
                        "src": "20225:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78169,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78161,
                        "src": "20230:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78170,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78163,
                        "src": "20239:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78166,
                      "name": "ETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77561,
                      "src": "20199:18:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 78171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20199:51:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78172,
                  "nodeType": "EmitStatement",
                  "src": "20194:56:203"
                }
              ]
            },
            "documentation": {
              "id": 78155,
              "nodeType": "StructuredDocumentation",
              "src": "19642:359:203",
              "text": "@notice Emits the ETHBridgeFinalized and if necessary the appropriate legacy event when an\n         ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "20015:23:203",
            "parameters": {
              "id": 78164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78157,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "20056:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78174,
                  "src": "20048:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20048:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78159,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20079:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78174,
                  "src": "20071:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20071:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78161,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "20100:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78174,
                  "src": "20092:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20092:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78163,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "20130:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78174,
                  "src": "20117:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20117:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20038:108:203"
            },
            "returnParameters": {
              "id": 78165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20184:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 78200,
            "nodeType": "FunctionDefinition",
            "src": "20790:341:203",
            "nodes": [],
            "body": {
              "id": 78199,
              "nodeType": "Block",
              "src": "21029:102:203",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78191,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78177,
                        "src": "21065:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78192,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78179,
                        "src": "21078:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78193,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78181,
                        "src": "21092:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78194,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78183,
                        "src": "21099:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78195,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78185,
                        "src": "21104:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78196,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78187,
                        "src": "21113:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78190,
                      "name": "ERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77576,
                      "src": "21044:20:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 78197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21044:80:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78198,
                  "nodeType": "EmitStatement",
                  "src": "21039:85:203"
                }
              ]
            },
            "documentation": {
              "id": 78175,
              "nodeType": "StructuredDocumentation",
              "src": "20263:522:203",
              "text": "@notice Emits the ERC20BridgeInitiated event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "20799:25:203",
            "parameters": {
              "id": 78188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78177,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "20842:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20834:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20834:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78179,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "20871:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20863:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20863:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78181,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "20901:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20893:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20893:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78183,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20924:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20916:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20916:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78185,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "20945:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20937:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20937:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78187,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "20975:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78200,
                  "src": "20962:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78186,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20962:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20824:167:203"
            },
            "returnParameters": {
              "id": 78189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21029:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 78226,
            "nodeType": "FunctionDefinition",
            "src": "21664:341:203",
            "nodes": [],
            "body": {
              "id": 78225,
              "nodeType": "Block",
              "src": "21903:102:203",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 78217,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78203,
                        "src": "21939:11:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78218,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78205,
                        "src": "21952:12:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78219,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78207,
                        "src": "21966:5:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78220,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78209,
                        "src": "21973:3:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78221,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78211,
                        "src": "21978:7:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78222,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78213,
                        "src": "21987:10:203",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78216,
                      "name": "ERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77591,
                      "src": "21918:20:203",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 78223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21918:80:203",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78224,
                  "nodeType": "EmitStatement",
                  "src": "21913:85:203"
                }
              ]
            },
            "documentation": {
              "id": 78201,
              "nodeType": "StructuredDocumentation",
              "src": "21137:522:203",
              "text": "@notice Emits the ERC20BridgeFinalized event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "21673:25:203",
            "parameters": {
              "id": 78214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78203,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "21716:11:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21708:19:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21708:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78205,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "21745:12:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21737:20:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21737:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78207,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "21775:5:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21767:13:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21767:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78209,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21798:3:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21790:11:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21790:7:203",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78211,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21819:7:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21811:15:203",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21811:7:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78213,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "21849:10:203",
                  "nodeType": "VariableDeclaration",
                  "scope": 78226,
                  "src": "21836:23:203",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78212,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21836:5:203",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21698:167:203"
            },
            "returnParameters": {
              "id": 78215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21903:0:203"
            },
            "scope": 78227,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 77504,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32244,
              "src": "1110:13:203"
            },
            "id": 77505,
            "nodeType": "InheritanceSpecifier",
            "src": "1110:13:203"
          }
        ],
        "canonicalName": "StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 77503,
          "nodeType": "StructuredDocumentation",
          "src": "750:324:203",
          "text": "@custom:upgradeable\n @title StandardBridge\n @notice StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles\n         the core bridging logic, including escrowing tokens that are native to the local chain\n         and minting/burning tokens that are native to the remote chain."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          78227,
          32244
        ],
        "name": "StandardBridge",
        "nameLocation": "1092:14:203",
        "scope": 78228,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 203
}